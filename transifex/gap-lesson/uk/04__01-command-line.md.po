# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Maryna Raievska, 2023
# Oleksandr Miroshkin <miroshkinan@gmail.com>, 2023
# Olexandr Konovalov, 2023
# 
msgid ""
msgstr ""
"Project-Id-Version: i18n\n"
"Report-Msgid-Bugs-To: https://github.com/haiwen/seafile-docs/issues\n"
"POT-Creation-Date: 2023-02-12 17:09:14+0000\n"
"PO-Revision-Date: 2023-02-12 17:54+0000\n"
"Last-Translator: Olexandr Konovalov, 2023\n"
"Language-Team: Ukrainian (https://app.transifex.com/carpentries-i18n/teams/98915/uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != 11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % 100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || (n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

# Front Matter
#: gap-lesson/_episodes/01-command-line.md:1
msgid ""
"---\n"
"title: \"First session with GAP\"\n"
"teaching: 30\n"
"exercises: 10\n"
"questions:\n"
"- \"Working with the GAP command line\"\n"
"objectives:\n"
"- \"Time-saving tips and tricks\"\n"
"- \"Using GAP's help system\"\n"
"- \"Basic objects and constructions in the GAP language\"\n"
"keypoints:\n"
"- \"Remember that GAP is case-sensitive!\"\n"
"- \"Do not panic if you see `Error, Variable: 'FuncName' must have a value`.\"\n"
"- \"Care about names of variables and functions.\"\n"
"- \"Use command line editing.\"\n"
"- \"Use autocompletion instead of typing names of functions and variables in full.\"\n"
"- \"Use `?` and `??` to view help pages.\"\n"
"- \"Set the default help format to HTML using `SetHelpViewer`.\"\n"
"- \"Use the `LogTo` function to save all GAP input and output into a text file.\"\n"
"- \"If calculation takes too long, press <Control>-C to interrupt it.\"\n"
"- \"Read 'A First Session with GAP' from the GAP Tutorial.\"\n"
"---"
msgstr ""
"---\n"
"title: \"Перша сесія з GAP\"\n"
"teaching: 30\n"
"exercises: 10\n"
"questions:\n"
"- \"Робота з командним рядком GAP\"\n"
"objectives:\n"
"- \"Поради та підказки, які заощадять час\"\n"
"- \"Використання довідкової системи GAP\"\n"
"- \"Базові об'єкти та конструкції в мові GAP\"\n"
"keypoints:\n"
"- \"Пам’ятайте, що GAP чутливий до регістру!\"\n"
"- \"Не панікуйте, якщо побачите `Error, Variable: 'FuncName' must have a value`.\"\n"
"- \"Звертайте увагу на імена змінних і функцій.\"\n"
"- \"Використовуйте редагування командного рядка.\"\n"
"- \"Використовуйте автозаповнення замість повного введення імен функцій і змінних.\"\n"
"- \"Використовуйте `?` та `??`, щоб переглянути сторінки довідки.\"\n"
"- \"Встановіть HTML в якості стандартного формату довідки за допомогою `SetHelpViewer`.\"\n"
"- \"Використовуйте функцію `LogTo`, щоб зберегти всі введення та виведення GAP у текстовий файл.\"\n"
"- \"Якщо обчислення триває занадто довго, натисніть <Control>-C, щоб перервати його.\"\n"
"- \"Прочитайте «Перше заняття з GAP» у підручнику з GAP.\"\n"
"---"

#: gap-lesson/_episodes/01-command-line.md:24
msgid ""
"If GAP is installed correctly you should be able to start it. Exactly how \n"
"you start GAP will depend on your operating system and how you installed\n"
"GAP. GAP starts with the *banner* displaying information about the version of\n"
"the system and loaded components, and then displays the command line prompt\n"
"`gap>`, for example:"
msgstr ""
"Якщо GAP встановлено правильно, ви повинні мати можливість його запустити. Як саме\n"
"це зробити, залежатиме від вашої операційної системи та способу встановлення\n"
"GAP. Після запуску, GAP виведе на екран свій *банер*, який відображає інформацію про версію\n"
"системи та завантажені компоненти, а потім запрошення командного рядка\n"
"`gap>`, наприклад:"

# code block
#: gap-lesson/_episodes/01-command-line.md:30
msgid ""
"~~~\n"
" ┌───────┐   GAP 4.9.2 of 04-Jul-2018\n"
" │  GAP  │   https://www.gap-system.org\n"
" └───────┘   Architecture: x86_64-apple-darwin16.7.0-default64\n"
" Configuration:  gmp 6.1.2, readline\n"
" Loading the library and packages ...\n"
" Packages:   AClib 1.3, Alnuth 3.1.0, AtlasRep 1.5.1, AutPGrp 1.9, \n"
"             Browse 1.8.8, CRISP 1.4.4, Cryst 4.1.17, CrystCat 1.1.8, \n"
"             CTblLib 1.2.2, FactInt 1.6.2, FGA 1.4.0, GAPDoc 1.6.1, IO 4.5.1, \n"
"             IRREDSOL 1.4, LAGUNA 3.9.0, Polenta 1.3.8, Polycyclic 2.14, \n"
"             PrimGrp 3.3.1, RadiRoot 2.8, ResClasses 4.7.1, SmallGrp 1.3, \n"
"             Sophus 1.24, SpinSym 1.5, TomLib 1.2.6, TransGrp 2.0.2, \n"
"             utils 0.54\n"
" Try '??help' for help. See also '?copyright', '?cite' and '?authors'\n"
"gap> \n"
"~~~"
msgstr ""
"~~~\n"
" ┌───────┐   GAP 4.9.2 of 04-Jul-2018\n"
" │  GAP  │   https://www.gap-system.org\n"
" └───────┘   Architecture: x86_64-apple-darwin16.7.0-default64\n"
" Configuration:  gmp 6.1.2, readline\n"
" Loading the library and packages ...\n"
" Packages:   AClib 1.3, Alnuth 3.1.0, AtlasRep 1.5.1, AutPGrp 1.9, \n"
"             Browse 1.8.8, CRISP 1.4.4, Cryst 4.1.17, CrystCat 1.1.8, \n"
"             CTblLib 1.2.2, FactInt 1.6.2, FGA 1.4.0, GAPDoc 1.6.1, IO 4.5.1, \n"
"             IRREDSOL 1.4, LAGUNA 3.9.0, Polenta 1.3.8, Polycyclic 2.14, \n"
"             PrimGrp 3.3.1, RadiRoot 2.8, ResClasses 4.7.1, SmallGrp 1.3, \n"
"             Sophus 1.24, SpinSym 1.5, TomLib 1.2.6, TransGrp 2.0.2, \n"
"             utils 0.54\n"
" Try '??help' for help. See also '?copyright', '?cite' and '?authors'\n"
"gap> \n"
"~~~"

# SC/DC Template label
#: gap-lesson/_episodes/01-command-line.md:46
#: gap-lesson/_episodes/01-command-line.md:69
#: gap-lesson/_episodes/01-command-line.md:113
#: gap-lesson/_episodes/01-command-line.md:130
#: gap-lesson/_episodes/01-command-line.md:169
#: gap-lesson/_episodes/01-command-line.md:182
#: gap-lesson/_episodes/01-command-line.md:198
#: gap-lesson/_episodes/01-command-line.md:212
#: gap-lesson/_episodes/01-command-line.md:236
#: gap-lesson/_episodes/01-command-line.md:248
#: gap-lesson/_episodes/01-command-line.md:260
#: gap-lesson/_episodes/01-command-line.md:276
#: gap-lesson/_episodes/01-command-line.md:291
#: gap-lesson/_episodes/01-command-line.md:355
#: gap-lesson/_episodes/01-command-line.md:405
#: gap-lesson/_episodes/01-command-line.md:420
#: gap-lesson/_episodes/01-command-line.md:437
#: gap-lesson/_episodes/01-command-line.md:454
#: gap-lesson/_episodes/01-command-line.md:469
#: gap-lesson/_episodes/01-command-line.md:496
#: gap-lesson/_episodes/01-command-line.md:526
#: gap-lesson/_episodes/01-command-line.md:544
#: gap-lesson/_episodes/01-command-line.md:561
#: gap-lesson/_episodes/01-command-line.md:574
#: gap-lesson/_episodes/01-command-line.md:607
#: gap-lesson/_episodes/01-command-line.md:619
#: gap-lesson/_episodes/01-command-line.md:631
#: gap-lesson/_episodes/01-command-line.md:643
#: gap-lesson/_episodes/01-command-line.md:655
#: gap-lesson/_episodes/02-some-objects.md:39
#: gap-lesson/_episodes/02-some-objects.md:51
#: gap-lesson/_episodes/02-some-objects.md:63
#: gap-lesson/_episodes/02-some-objects.md:78
#: gap-lesson/_episodes/02-some-objects.md:88
#: gap-lesson/_episodes/02-some-objects.md:98
#: gap-lesson/_episodes/02-some-objects.md:109
#: gap-lesson/_episodes/02-some-objects.md:119
#: gap-lesson/_episodes/02-some-objects.md:135
#: gap-lesson/_episodes/02-some-objects.md:151
#: gap-lesson/_episodes/02-some-objects.md:164
#: gap-lesson/_episodes/02-some-objects.md:178
#: gap-lesson/_episodes/02-some-objects.md:190
#: gap-lesson/_episodes/02-some-objects.md:204
#: gap-lesson/_episodes/02-some-objects.md:215
#: gap-lesson/_episodes/03-func.md:32 gap-lesson/_episodes/03-func.md:42
#: gap-lesson/_episodes/03-func.md:55 gap-lesson/_episodes/03-func.md:69
#: gap-lesson/_episodes/03-func.md:84 gap-lesson/_episodes/03-func.md:94
#: gap-lesson/_episodes/03-func.md:138 gap-lesson/_episodes/03-func.md:152
#: gap-lesson/_episodes/03-func.md:195 gap-lesson/_episodes/03-func.md:230
#: gap-lesson/_episodes/03-func.md:287 gap-lesson/_episodes/03-func.md:301
#: gap-lesson/_episodes/03-func.md:369 gap-lesson/_episodes/03-func.md:401
#: gap-lesson/_episodes/03-func.md:411 gap-lesson/_episodes/03-func.md:422
#: gap-lesson/_episodes/04-testing.md:79
#: gap-lesson/_episodes/04-testing.md:141
#: gap-lesson/_episodes/04-testing.md:205
#: gap-lesson/_episodes/04-testing.md:235
#: gap-lesson/_episodes/05-small-groups.md:61
#: gap-lesson/_episodes/05-small-groups.md:81
#: gap-lesson/_episodes/05-small-groups.md:91
#: gap-lesson/_episodes/05-small-groups.md:127
#: gap-lesson/_episodes/05-small-groups.md:137
#: gap-lesson/_episodes/05-small-groups.md:182
#: gap-lesson/_episodes/05-small-groups.md:228
#: gap-lesson/_episodes/05-small-groups.md:244
#: gap-lesson/_episodes/05-small-groups.md:259
#: gap-lesson/_episodes/05-small-groups.md:272
#: gap-lesson/_episodes/05-small-groups.md:351
#: gap-lesson/_episodes/05-small-groups.md:377
#: gap-lesson/_episodes/05-small-groups.md:460
#: gap-lesson/_episodes/05-small-groups.md:486
#: gap-lesson/_episodes/06-attributes.md:39
#: gap-lesson/_episodes/06-attributes.md:52
#: gap-lesson/_episodes/06-attributes.md:78
#: gap-lesson/_episodes/06-attributes.md:92
#: gap-lesson/_episodes/06-attributes.md:126
#: gap-lesson/_episodes/06-attributes.md:164
#: gap-lesson/_episodes/06-attributes.md:222
#: gap-lesson/_episodes/06-attributes.md:232 gap-lesson/_extras/discuss.md:172
#: gap-lesson/_extras/discuss.md:182
msgid "{: .output}"
msgstr "{: .output}"

#: gap-lesson/_episodes/01-command-line.md:48
msgid ""
"To leave GAP, type `quit;` at the GAP prompt. Remember that all GAP commands,\n"
"including this one, must be finished with a semicolon! Practice entering\n"
"`quit;` to leave GAP, and then starting a new GAP session. Before continuing, you\n"
"may wish to enter the following command to display GAP prompts and user inputs\n"
"in different colours:"
msgstr ""
"Щоб вийти з GAP, введіть `quit;` у командному рядку GAP. Пам’ятайте, що всі команди GAP,\n"
"включно з цією, мають закінчуватися крапкою з комою! Потренуйтеся вводити\n"
"`quit;`, щоб вийти з GAP, а потім починати новий сеанс GAP. Перш ніж продовжити, ви\n"
"можливо забажаєте ввести наступну команду, щоб відображати запрошення GAP та команди, введені користувачем\n"
"у різних кольорах:"

# code block
#: gap-lesson/_episodes/01-command-line.md:54
msgid ""
"~~~\n"
" ColorPrompt(true);\n"
"~~~"
msgstr ""
"~~~\n"
" ColorPrompt(true);\n"
"~~~"

# SC/DC Template label
#: gap-lesson/_episodes/01-command-line.md:57
#: gap-lesson/_episodes/01-command-line.md:64
#: gap-lesson/_episodes/01-command-line.md:77
#: gap-lesson/_episodes/01-command-line.md:93
#: gap-lesson/_episodes/01-command-line.md:108
#: gap-lesson/_episodes/01-command-line.md:125
#: gap-lesson/_episodes/01-command-line.md:143
#: gap-lesson/_episodes/01-command-line.md:164
#: gap-lesson/_episodes/01-command-line.md:177
#: gap-lesson/_episodes/01-command-line.md:193
#: gap-lesson/_episodes/01-command-line.md:205
#: gap-lesson/_episodes/01-command-line.md:229
#: gap-lesson/_episodes/01-command-line.md:243
#: gap-lesson/_episodes/01-command-line.md:255
#: gap-lesson/_episodes/01-command-line.md:271
#: gap-lesson/_episodes/01-command-line.md:286
#: gap-lesson/_episodes/01-command-line.md:312
#: gap-lesson/_episodes/01-command-line.md:374
#: gap-lesson/_episodes/01-command-line.md:393
#: gap-lesson/_episodes/01-command-line.md:400
#: gap-lesson/_episodes/01-command-line.md:412
#: gap-lesson/_episodes/01-command-line.md:431
#: gap-lesson/_episodes/01-command-line.md:448
#: gap-lesson/_episodes/01-command-line.md:462
#: gap-lesson/_episodes/01-command-line.md:489
#: gap-lesson/_episodes/01-command-line.md:510
#: gap-lesson/_episodes/01-command-line.md:521
#: gap-lesson/_episodes/01-command-line.md:539
#: gap-lesson/_episodes/01-command-line.md:556
#: gap-lesson/_episodes/01-command-line.md:569
#: gap-lesson/_episodes/01-command-line.md:602
#: gap-lesson/_episodes/01-command-line.md:614
#: gap-lesson/_episodes/01-command-line.md:626
#: gap-lesson/_episodes/01-command-line.md:638
#: gap-lesson/_episodes/01-command-line.md:650
#: gap-lesson/_episodes/02-some-objects.md:33
#: gap-lesson/_episodes/02-some-objects.md:44
#: gap-lesson/_episodes/02-some-objects.md:56
#: gap-lesson/_episodes/02-some-objects.md:73
#: gap-lesson/_episodes/02-some-objects.md:83
#: gap-lesson/_episodes/02-some-objects.md:93
#: gap-lesson/_episodes/02-some-objects.md:103
#: gap-lesson/_episodes/02-some-objects.md:114
#: gap-lesson/_episodes/02-some-objects.md:129
#: gap-lesson/_episodes/02-some-objects.md:142
#: gap-lesson/_episodes/02-some-objects.md:158
#: gap-lesson/_episodes/02-some-objects.md:172
#: gap-lesson/_episodes/02-some-objects.md:185
#: gap-lesson/_episodes/02-some-objects.md:197
#: gap-lesson/_episodes/02-some-objects.md:209
#: gap-lesson/_episodes/03-func.md:27 gap-lesson/_episodes/03-func.md:37
#: gap-lesson/_episodes/03-func.md:50 gap-lesson/_episodes/03-func.md:64
#: gap-lesson/_episodes/03-func.md:79 gap-lesson/_episodes/03-func.md:89
#: gap-lesson/_episodes/03-func.md:133 gap-lesson/_episodes/03-func.md:145
#: gap-lesson/_episodes/03-func.md:183 gap-lesson/_episodes/03-func.md:190
#: gap-lesson/_episodes/03-func.md:203 gap-lesson/_episodes/03-func.md:217
#: gap-lesson/_episodes/03-func.md:225 gap-lesson/_episodes/03-func.md:246
#: gap-lesson/_episodes/03-func.md:253 gap-lesson/_episodes/03-func.md:260
#: gap-lesson/_episodes/03-func.md:277 gap-lesson/_episodes/03-func.md:296
#: gap-lesson/_episodes/03-func.md:319 gap-lesson/_episodes/03-func.md:326
#: gap-lesson/_episodes/03-func.md:359 gap-lesson/_episodes/03-func.md:376
#: gap-lesson/_episodes/03-func.md:395 gap-lesson/_episodes/03-func.md:406
#: gap-lesson/_episodes/03-func.md:416 gap-lesson/_episodes/03-func.md:438
#: gap-lesson/_episodes/04-testing.md:58 gap-lesson/_episodes/04-testing.md:74
#: gap-lesson/_episodes/04-testing.md:129
#: gap-lesson/_episodes/04-testing.md:136
#: gap-lesson/_episodes/04-testing.md:160
#: gap-lesson/_episodes/04-testing.md:168
#: gap-lesson/_episodes/04-testing.md:221
#: gap-lesson/_episodes/04-testing.md:230
#: gap-lesson/_episodes/05-small-groups.md:69
#: gap-lesson/_episodes/05-small-groups.md:76
#: gap-lesson/_episodes/05-small-groups.md:86
#: gap-lesson/_episodes/05-small-groups.md:115
#: gap-lesson/_episodes/05-small-groups.md:122
#: gap-lesson/_episodes/05-small-groups.md:132
#: gap-lesson/_episodes/05-small-groups.md:167
#: gap-lesson/_episodes/05-small-groups.md:174
#: gap-lesson/_episodes/05-small-groups.md:200
#: gap-lesson/_episodes/05-small-groups.md:207
#: gap-lesson/_episodes/05-small-groups.md:237
#: gap-lesson/_episodes/05-small-groups.md:252
#: gap-lesson/_episodes/05-small-groups.md:267
#: gap-lesson/_episodes/05-small-groups.md:289
#: gap-lesson/_episodes/05-small-groups.md:296
#: gap-lesson/_episodes/05-small-groups.md:329
#: gap-lesson/_episodes/05-small-groups.md:336
#: gap-lesson/_episodes/05-small-groups.md:372
#: gap-lesson/_episodes/05-small-groups.md:439
#: gap-lesson/_episodes/06-attributes.md:34
#: gap-lesson/_episodes/06-attributes.md:44
#: gap-lesson/_episodes/06-attributes.md:69
#: gap-lesson/_episodes/06-attributes.md:87
#: gap-lesson/_episodes/06-attributes.md:104
#: gap-lesson/_episodes/06-attributes.md:118
#: gap-lesson/_episodes/06-attributes.md:147
#: gap-lesson/_episodes/06-attributes.md:156
#: gap-lesson/_episodes/06-attributes.md:183
#: gap-lesson/_episodes/06-attributes.md:197
#: gap-lesson/_episodes/06-attributes.md:217
#: gap-lesson/_episodes/06-attributes.md:227 gap-lesson/_extras/discuss.md:159
#: gap-lesson/_extras/discuss.md:167 gap-lesson/_extras/discuss.md:177
msgid "{: .source}"
msgstr "{: .source}"

#: gap-lesson/_episodes/01-command-line.md:59
msgid "The easiest way to start trying GAP out is as a calculator:"
msgstr ""
"Найпростіший шлях розпочати роботу з GAP - це використовувати GAP як "
"калькулятор:"

# code block
#: gap-lesson/_episodes/01-command-line.md:61
#: gap-lesson/_episodes/01-command-line.md:105
msgid ""
"~~~\n"
"( 1 + 2^32 ) / (1 - 2*3*107 );\n"
"~~~"
msgstr ""
"~~~\n"
"( 1 + 2^32 ) / (1 - 2*3*107 );\n"
"~~~"

# code block
#: gap-lesson/_episodes/01-command-line.md:66
#: gap-lesson/_episodes/01-command-line.md:110
msgid ""
"~~~\n"
"-6700417\n"
"~~~"
msgstr ""
"~~~\n"
"-6700417\n"
"~~~"

#: gap-lesson/_episodes/01-command-line.md:71
msgid ""
"If you want to record what you did in a GAP session, so you can look over it\n"
"later, you can enable logging with the `LogTo` function, like this."
msgstr ""
"Якщо ви хочете записати те, що ви робили під час сеансу GAP, щоб ви могли переглянути це\n"
" пізніше, ви можете ввімкнути ведення журналу за допомогою функції `LogTo`, як наведено далі."

# code block
#: gap-lesson/_episodes/01-command-line.md:74
msgid ""
"~~~\n"
"LogTo(\"gap-intro.log\");\n"
"~~~"
msgstr ""
"~~~\n"
"LogTo(\"gap-intro.log\");\n"
"~~~"

#: gap-lesson/_episodes/01-command-line.md:79
msgid ""
"This will create a file file `gap-intro.log` in the current directory which\n"
"will contain all subsequent input and output that appears on your terminal.\n"
"To stop logging, you can call `LogTo` without arguments, as in `LogTo();`,\n"
"or leave GAP. Note that `LogTo` blanks the file before starting, if it\n"
"already exists!"
msgstr ""
"Це створить файл `gap-intro.log` у поточному каталозі, який\n"
"міститиме всі подальші вхідні та вихідні дані, які з’являтимуться у вашому терміналі.\n"
"Щоб припинити ведення журналу, ви можете викликати `LogTo` без аргументів, як у `LogTo();`,\n"
"або залишити GAP. Зауважте, що `LogTo` очищає файл перед запуском, якщо він\n"
"уже існує!"

#: gap-lesson/_episodes/01-command-line.md:85
msgid ""
"It can be useful to leave some comments in the log file in case you\n"
"return to it in the future. A comment in GAP starts with the symbol `#` and\n"
"continues to the end of the line. You can enter the following after the\n"
"GAP prompt:"
msgstr ""
"Може бути корисним залишити кілька коментарів у файлі журналу на випадок,\n"
"якщо ви повернетеся до нього в майбутньому. Коментар у GAP починається з символу `#` і\n"
"продовжується до кінця рядка. Ви можете ввести наступне після\n"
"підказки GAP:"

# code block
#: gap-lesson/_episodes/01-command-line.md:90
msgid ""
"~~~\n"
"# GAP Software Carpentry Lesson\n"
"~~~"
msgstr ""
"~~~\n"
"# Урок Software Carpentry GAP\n"
"~~~"

#: gap-lesson/_episodes/01-command-line.md:95
msgid ""
"then after pressing the Return key, GAP will display a new prompt but the comment\n"
"will be written to the log file."
msgstr ""
"тоді після натискання клавіші Return GAP відобразить нову підказку, але коментар\n"
"буде записаний у файл журналу."

#: gap-lesson/_episodes/01-command-line.md:98
msgid ""
"The log file records all interaction with GAP that happens after the call\n"
"to `LogTo`, but not before. We can repeat our calculation from above\n"
"if we want to record it as well. Instead of retyping it, we will use the Up and Down\n"
"arrow keys to scroll the *command line history*. Repeat this until you see\n"
"the formula again, then press Return (the location of the cursor in the command\n"
"line does not matter):"
msgstr ""
"Файл журналу записує всю взаємодію з GAP, яка відбувається після виклику\n"
"`LogTo`, але не раніше. Ми можемо повторити наші обчислення вище,\n"
"якщо ми також хочемо їх записати. Замість того, щоб вводити їх повторно, ми будемо використовувати клавіші зі стрілками вгору та вниз\n"
"для прокручування *історії командного рядка*. Повторюйте це, доки знову не побачите\n"
"формулу, потім натисніть Return (розташування курсору в командному\n"
"рядку не має значення):"

#: gap-lesson/_episodes/01-command-line.md:115
msgid ""
"You can also edit existing commands. Press Up once more, and then use the\n"
"Left and Right arrow keys, Delete or Backspace to edit it and replace\n"
"32 by 64 (some other useful shortcuts are\n"
"Ctrl-A and Ctrl-E to move the cursor to the beginning and end of the\n"
"line, respectively). Now press the Return key (at any position of the\n"
"cursor in the command line):"
msgstr ""
"Ви також можете редагувати команди, що вже існують. Натисніть клавішу «Вгору» ще раз, а потім використовуйте\n"
"клавіші зі стрілками вліво та вправо, Delete або Backspace, щоб відредагувати їх та замінити 32 на 64 (інші корисні комбінації клавіш —\n"
"Ctrl-A та Ctrl-E, щоб перемістити курсор на початок і кінець\n"
"рядку, відповідно). Тепер натисніть клавішу Return (у будь-якій позиції\n"
"курсору в командному рядку):"

# code block
#: gap-lesson/_episodes/01-command-line.md:122
msgid ""
"~~~\n"
"( 1 + 2^64 ) / (1 - 2*3*107 );\n"
"~~~"
msgstr ""
"~~~\n"
"( 1 + 2^64 ) / (1 - 2*3*107 );\n"
"~~~"

# code block
#: gap-lesson/_episodes/01-command-line.md:127
#: gap-lesson/_episodes/01-command-line.md:166
msgid ""
"~~~\n"
"-18446744073709551617/641\n"
"~~~"
msgstr ""
"~~~\n"
"-18446744073709551617/641\n"
"~~~"

#: gap-lesson/_episodes/01-command-line.md:132
msgid ""
"It is useful to know that if the command line history is long, one could\n"
"perform a partial search by typing the initial part of the command and using\n"
"Up and Down arrow keys after that, to scroll only the lines that begin with\n"
"the same string."
msgstr ""
"Корисно знати, що якщо історія командного рядка велика, можна\n"
"виконати частковий пошук, ввівши початкову частину команди, а потім використовуючи\n"
"клавіші зі стрілками вгору та вниз, щоб прокрутити лише ті рядки, які починаються\n"
"з введених символів."

#: gap-lesson/_episodes/01-command-line.md:137
msgid ""
"If you want to store a value for later use, you can assign it to a name\n"
"using `:=` "
msgstr ""
"Якщо ви бажаєте зберегти значення для подальшого використання, ви можете присвоїти йому ім'я\n"
"за допомогою `:=`"

# code block
#: gap-lesson/_episodes/01-command-line.md:140
msgid ""
"~~~\n"
"universe := 6*7;\n"
"~~~"
msgstr ""
"~~~\n"
"universe := 6*7;\n"
"~~~"

# blockquote, which can be cascaded
#: gap-lesson/_episodes/01-command-line.md:145
msgid "> ## `:=`, `=` and `<>`"
msgstr "> ## `:=`, `=` і `<>`"

#: gap-lesson/_episodes/01-command-line.md:146
msgid ""
">\n"
"> * In other languages you might be more familiar with using `=`, to assign\n"
">   variables, but GAP uses `:=`.\n"
">\n"
"> * GAP uses `=` to compare if two things are the same (where other languages might\n"
">   use `==`).\n"
">\n"
"> * Finally, GAP uses `<>` to check if two things are not equal (rather than the `!=`\n"
">   you might have seen before)."
msgstr ""
">\n"
"> * В інших мовах Ви можете бути більш знайомі з використанням `=`, щоб присвоювати значення\n"
"> змінним, але GAP використовує `:=`.\n"
">\n"
"> * GAP використовує `=` для порівняння, якщо дві об'єкти однакові (де інші мови можуть\n"
">  використовувати `==`).\n"
">\n"
"> * Нарешті, GAP використовує `<>`, щоб перевірити, чи два об'єкти не рівні (замість `!=`, що\n"
">  ви могли бачити раніше)."

# SC/DC Template label
#: gap-lesson/_episodes/01-command-line.md:155
#: gap-lesson/_episodes/01-command-line.md:222
#: gap-lesson/_episodes/01-command-line.md:481
#: gap-lesson/_episodes/01-command-line.md:586
#: gap-lesson/_episodes/03-func.md:108 gap-lesson/_episodes/03-func.md:447
#: gap-lesson/_episodes/05-small-groups.md:97
#: gap-lesson/_episodes/05-small-groups.md:144
#: gap-lesson/_episodes/05-small-groups.md:307
#: gap-lesson/_episodes/06-attributes.md:24
#: gap-lesson/_episodes/06-attributes.md:176
#: gap-lesson/_episodes/06-attributes.md:207
msgid "{: .callout}"
msgstr "{: .callout}"

#: gap-lesson/_episodes/01-command-line.md:157
msgid ""
"Whitespace characters (i.e. Spaces, Tabs and Returns) are insignificant in GAP,\n"
"except if they occur inside a string. For example, the previous input\n"
"could be typed without spaces:"
msgstr ""
"Пробільні символи (тобто пробіли, табуляції та символи переводу рядка) не мають значення в GAP,\n"
"за винятком випадків, коли вони знаходяться всередині рядка. Наприклад, попереднє введеня\n"
"можна ввести без пробілів:"

# code block
#: gap-lesson/_episodes/01-command-line.md:161
msgid ""
"~~~\n"
"(1+2^64)/(1-2*3*107);\n"
"~~~"
msgstr ""
"~~~\n"
"(1+2^64)/(1-2*3*107);\n"
"~~~"

#: gap-lesson/_episodes/01-command-line.md:171
msgid ""
"Whitespace symbols are often used to format more complicated commands for\n"
"better readability. For example, the following input which creates a 3×3 matrix:"
msgstr ""
"Пробіли часто використовуються для форматування більш складних команд\n"
"для кращої читабельності. Наприклад, наступне введення, яке створює матрицю 3×3:"

# code block
#: gap-lesson/_episodes/01-command-line.md:174
msgid ""
"~~~\n"
"m:=[[1,2,3],[4,5,6],[7,8,9]];\n"
"~~~"
msgstr ""
"~~~\n"
"m:=[[1,2,3],[4,5,6],[7,8,9]];\n"
"~~~"

# code block
#: gap-lesson/_episodes/01-command-line.md:179
#: gap-lesson/_episodes/01-command-line.md:195
msgid ""
"~~~\n"
"[ [ 1, 2, 3 ], [ 4, 5, 6 ], [ 7, 8, 9 ] ]\n"
"~~~"
msgstr ""
"~~~\n"
"[ [ 1, 2, 3 ], [ 4, 5, 6 ], [ 7, 8, 9 ] ]\n"
"~~~"

#: gap-lesson/_episodes/01-command-line.md:184
msgid ""
"We can instead write our matrix over 3 lines. In this case, instead of the full prompt\n"
"`gap>`, a partial prompt `>` will be displayed until the user finishes\n"
"the input with a semicolon:"
msgstr ""
"Замість цього ми можемо записати нашу матрицю в 3 рядки. У цьому випадку замість повної підказки\n"
"`gap>` відображатиметься часткова підказка `>`, доки користувач не завершить\n"
"введення крапкою з комою:"

# code block
#: gap-lesson/_episodes/01-command-line.md:188
msgid ""
"~~~\n"
"gap> m:=[[ 1, 2, 3 ],\n"
">        [ 4, 5, 6 ],\n"
">        [ 7, 8, 9 ]];\n"
"~~~"
msgstr ""
"~~~\n"
"gap> m:=[[ 1, 2, 3 ],\n"
">        [ 4, 5, 6 ],\n"
">        [ 7, 8, 9 ]];\n"
"~~~"

#: gap-lesson/_episodes/01-command-line.md:200
msgid ""
"You can use `Display` to pretty-print variables, including this matrix:"
msgstr ""
"Ви можете використовувати `Display` для красивого друку змінних, включаючи "
"цю матрицю:"

# code block
#: gap-lesson/_episodes/01-command-line.md:202
msgid ""
"~~~\n"
"Display(m);\n"
"~~~"
msgstr ""
"~~~\n"
"Display(m);\n"
"~~~"

# code block
#: gap-lesson/_episodes/01-command-line.md:207
msgid ""
"~~~\n"
"[ [  1,  2,  3 ],\n"
"  [  4,  5,  6 ],\n"
"  [  7,  8,  9 ] ]\n"
"~~~"
msgstr ""
"~~~\n"
"[ [  1,  2,  3 ],\n"
"  [  4,  5,  6 ],\n"
"  [  7,  8,  9 ] ]\n"
"~~~"

#: gap-lesson/_episodes/01-command-line.md:214
msgid ""
"In general GAP functions like `LogTo` and `Display` are called using brackets,\n"
"which contain a (possibly empty) list of arguments."
msgstr ""
"Загалом функції GAP, як наприклад `LogTo` і `Display`, викликаються за допомогою дужок,\n"
"які містять (можливо, порожній) список аргументів."

# blockquote, which can be cascaded
#: gap-lesson/_episodes/01-command-line.md:217
msgid "> ## Functions are also GAP objects"
msgstr "> ## Функції також є об’єктами GAP"

#: gap-lesson/_episodes/01-command-line.md:218
msgid ""
">\n"
"> Check what happens if you forget to add brackets,\n"
"> e.g. type `LogTo;` and `Factorial;`\n"
"> We will explain the differences in these outputs later."
msgstr ""
">\n"
"> Перевірте, що станеться, якщо ви забудете додати дужки,\n"
"> наприклад, введіть `LogTo;` і `Factorial;`\n"
"> Пізніше ми пояснимо відмінності в цих результатах."

#: gap-lesson/_episodes/01-command-line.md:224
msgid "Here are some examples of calling other GAP functions:"
msgstr "Нижче наведені декілька прикладів виклику інших функцій GAP:"

# code block
#: gap-lesson/_episodes/01-command-line.md:226
msgid ""
"~~~\n"
"Factorial(100);\n"
"~~~"
msgstr ""
"~~~\n"
"Factorial(100);\n"
"~~~"

# code block
#: gap-lesson/_episodes/01-command-line.md:231
msgid ""
"~~~\n"
"93326215443944152681699238856266700490715968264381621468\\\n"
"59296389521759999322991560894146397615651828625369792082\\\n"
"7223758251185210916864000000000000000000000000\n"
"~~~"
msgstr ""
"~~~\n"
"93326215443944152681699238856266700490715968264381621468\\\n"
"59296389521759999322991560894146397615651828625369792082\\\n"
"7223758251185210916864000000000000000000000000\n"
"~~~"

#: gap-lesson/_episodes/01-command-line.md:238
msgid "(the exact width of output will depend on your terminal settings),"
msgstr "(точна ширина виводу залежатиме від налаштувань вашого терміналу),"

# code block
#: gap-lesson/_episodes/01-command-line.md:240
msgid ""
"~~~\n"
"Determinant(m);\n"
"~~~"
msgstr ""
"~~~\n"
"Determinant(m);\n"
"~~~"

# code block
#: gap-lesson/_episodes/01-command-line.md:245
#: gap-lesson/_episodes/03-func.md:39
msgid ""
"~~~\n"
"0\n"
"~~~"
msgstr ""
"~~~\n"
"0\n"
"~~~"

#: gap-lesson/_episodes/01-command-line.md:250
msgid "and"
msgstr "та"

# code block
#: gap-lesson/_episodes/01-command-line.md:252
msgid ""
"~~~\n"
"Factors(2^64-1);\n"
"~~~"
msgstr ""
"~~~\n"
"Factors(2^64-1);\n"
"~~~"

# code block
#: gap-lesson/_episodes/01-command-line.md:257
msgid ""
"~~~\n"
"[ 3, 5, 17, 257, 641, 65537, 6700417 ]\n"
"~~~"
msgstr ""
"~~~\n"
"[ 3, 5, 17, 257, 641, 65537, 6700417 ]\n"
"~~~"

#: gap-lesson/_episodes/01-command-line.md:262
msgid ""
"Functions may be combined in various ways, and may be\n"
"used as arguments of other functions, for example, the\n"
"`Filtered` function takes a list and a function, returning\n"
"all elements of the list which satisfy the function.\n"
"`IsEvenInt`, unsurprisingly, checks if an integer is even!"
msgstr ""
"Функції можна комбінувати різними способами та\n"
"використовувати як аргументи інших функцій, наприклад,\n"
"функція `Filtered` приймає список і функцію, повертаючи\n"
"всі елементи списку, які задовольняють функцію.\n"
"`IsEvenInt` (\"Is Even Integer\" з англ. \"чи є ціле число парним\"), як не дивно, перевіряє, чи є ціле число парним!"

# code block
#: gap-lesson/_episodes/01-command-line.md:268
msgid ""
"~~~\n"
"Filtered( [2,9,6,3,4,5], IsEvenInt);\n"
"~~~"
msgstr ""
"~~~\n"
"Filtered( [2,9,6,3,4,5], IsEvenInt);\n"
"~~~"

# code block
#: gap-lesson/_episodes/01-command-line.md:273
msgid ""
"~~~\n"
"[ 2, 6, 4 ]\n"
"~~~"
msgstr ""
"~~~\n"
"[ 2, 6, 4 ]\n"
"~~~"

#: gap-lesson/_episodes/01-command-line.md:279
msgid ""
"A useful time-saving feature of the GAP command-line interfaces is completion\n"
"of identifiers when the Tab key is pressed. For example, type `Fib` and then\n"
"press the Tab key to complete the input to `Fibonacci`:"
msgstr ""
"Корисною функцією інтерфейсу командного рядка GAP, яка економить час, є заповнення\n"
"ідентифікаторів під час натискання клавіші Tab. Наприклад, введіть `Fib`, а потім\n"
"натисніть клавішу Tab, щоб завершити введення `Fibonacci`:"

# code block
#: gap-lesson/_episodes/01-command-line.md:283
msgid ""
"~~~\n"
"Fibonacci(100);\n"
"~~~"
msgstr ""
"~~~\n"
"Fibonacci(100);\n"
"~~~"

# code block
#: gap-lesson/_episodes/01-command-line.md:288
msgid ""
"~~~\n"
"354224848179261915075\n"
"~~~"
msgstr ""
"~~~\n"
"354224848179261915075\n"
"~~~"

#: gap-lesson/_episodes/01-command-line.md:293
msgid ""
"In the case that a unique completion is not possible, GAP will try to perform\n"
"partial completion, and pressing the Tab key second time will display all possible\n"
"completions of the identifier. Try, for example, to enter `GroupHomomorphismByImages`\n"
"or `NaturalHomomorphismByNormalSubgroup` using completion."
msgstr ""
"У випадку, якщо унікальне доповнення неможливе, GAP спробує виконати\n"
"часткове доповнення, а натискання клавіші Tab вдруге відобразить усі можливі\n"
"доповнення ідентифікатора. Спробуйте, наприклад, ввести `GroupHomomorphismByImages`\n"
"або `NaturalHomomorphismByNormalSubgroup` за допомогою доповнення."

#: gap-lesson/_episodes/01-command-line.md:298
msgid ""
"The way functions are named in GAP will hopefully help you to memorise or even guess names\n"
"of library functions. If a variable name consists of several words then the\n"
"first letter of each word is capitalised (remember that GAP is case-sensitive!).\n"
"Further details on naming conventions used in GAP are documented in the GAP\n"
"manual [here](http://www.gap-system.org/Manuals/doc/ref/chap5.html#X81F732457F7BC851).\n"
"Functions with names in `ALL_CAPITAL_LETTERS` are internal functions not intended\n"
"for general use. Use them with extreme care!"
msgstr ""
"Сподіваємось, те, як функції називаються в GAP, допоможе вам запам’ятовувати або навіть вгадувати назви\n"
"бібліотечних функцій. Якщо назва змінної складається з кількох слів,\n"
"то перша літера кожного слова пишеться з великої літери (пам’ятайте, що GAP чутливий до регістру!).\n"
"Подальші відомості про правила іменування, які використовуються в GAP,\n"
"задокументовані в посібнику GAP [тут](http://www.gap-system.org/Manuals/doc/ref/chap5.html#X81F732457F7BC851).\n"
"Функції з назвами `У_ВЕРХНЬОМУ_РЕГІСТРІ` є внутрішніми функціями, не призначеними\n"
"для загального використання. Використовуйте їх з особливою обережністю!"

#: gap-lesson/_episodes/01-command-line.md:306
msgid ""
"It is important to remember that GAP is case-sensitive. For example, the following\n"
"input causes an error:"
msgstr ""
"Важливо пам’ятати, що GAP чутливий до регістру. Наприклад, наступне\n"
"введення викликає помилку:"

# code block
#: gap-lesson/_episodes/01-command-line.md:309
msgid ""
"~~~\n"
"factorial(100);\n"
"~~~"
msgstr ""
"~~~\n"
"factorial(100);\n"
"~~~"

# code block
#: gap-lesson/_episodes/01-command-line.md:314
msgid ""
"~~~\n"
"Error, Variable: 'factorial' must have a value\n"
"not in any function at line 14 of *stdin*\n"
"~~~"
msgstr ""
"~~~\n"
"Error, Variable: 'factorial' must have a value\n"
"not in any function at line 14 of *stdin*\n"
"~~~"

# SC/DC Template label
#: gap-lesson/_episodes/01-command-line.md:318
#: gap-lesson/_episodes/03-func.md:209 gap-lesson/_episodes/03-func.md:269
#: gap-lesson/_episodes/03-func.md:342 gap-lesson/_episodes/03-func.md:386
msgid "{: .error}"
msgstr "{: .error}"

#: gap-lesson/_episodes/01-command-line.md:320
msgid ""
"because the name of the GAP library function is `Factorial`. Using lowercase\n"
"instead of uppercase or vice versa also affects name completion."
msgstr ""
"тому що назва функції бібліотеки GAP – `Factorial`. Використання малих літер\n"
"замість великих або навпаки також впливає на доповнення назви."

#: gap-lesson/_episodes/01-command-line.md:323
msgid ""
"Now let's consider the following problem: for a finite group _G_, calculate the\n"
"average order of its elements (that is, the sum of orders of its elements divided\n"
"by the order of the group). Where to start?"
msgstr ""
"Тепер давайте розглянемо таку задачу: для скінченної групи _G_ обчислити\n"
"середній порядок її елементів (тобто суму порядків її елементів, поділену\n"
"на порядок групи). З чого почати?"

#: gap-lesson/_episodes/01-command-line.md:327
msgid ""
"Enter `?Group`, and you will see all help entries, starting with `Group`:"
msgstr ""
"Введіть `?Group`, і ви побачите всі записи довідкової системи, що "
"починаються з `Group`:"

# code block
#: gap-lesson/_episodes/01-command-line.md:329
msgid ""
"~~~\n"
"┌──────────────────────────────────────────────────────────────────────────────┐\n"
"│   Choose an entry to view, 'q' for none (or use ?<nr> later):                │\n"
"│[1]    AutoDoc (not loaded): @Group                                           │\n"
"│[2]    loops (not loaded): group                                              │\n"
"│[3]    polycyclic: Group                                                      │\n"
"│[4]    RCWA (not loaded): Group                                               │\n"
"│[5]    Tutorial: Groups and Homomorphisms                                     │\n"
"│[6]    Tutorial: Group Homomorphisms by Images                                │\n"
"│[7]    Tutorial: group general mapping                                        │\n"
"│[8]    Tutorial: GroupHomomorphismByImages vs. GroupGeneralMappingByImages    │\n"
"│[9]    Tutorial: group general mapping single-valued                          │\n"
"│[10]   Tutorial: group general mapping total                                  │\n"
"│[11]   Reference: Groups                                                      │\n"
"│[12]   Reference: Group Elements                                              │\n"
"│[13]   Reference: Group Properties                                            │\n"
"│[14]   Reference: Group Homomorphisms                                         │\n"
"│[15]   Reference: GroupHomomorphismByFunction                                 │\n"
"│[16]   Reference: Group Automorphisms                                         │\n"
"│[17]   Reference: Groups of Automorphisms                                     │\n"
"│[18]   Reference: Group Actions                                               │\n"
"│[19]   Reference: Group Products                                              │\n"
"│[20]   Reference: Group Libraries                                             │\n"
"│ > > >                                                                        │\n"
"└─────────────── [ <Up>/<Down> select, <Return> show, q quit ] ────────────────┘\n"
"~~~"
msgstr ""
"~~~\n"
"┌──────────────────────────────────────────────────────────────────────────────┐\n"
"│   Choose an entry to view, 'q' for none (or use ?<nr> later):                │\n"
"│[1]    AutoDoc (not loaded): @Group                                           │\n"
"│[2]    loops (not loaded): group                                              │\n"
"│[3]    polycyclic: Group                                                      │\n"
"│[4]    RCWA (not loaded): Group                                               │\n"
"│[5]    Tutorial: Groups and Homomorphisms                                     │\n"
"│[6]    Tutorial: Group Homomorphisms by Images                                │\n"
"│[7]    Tutorial: group general mapping                                        │\n"
"│[8]    Tutorial: GroupHomomorphismByImages vs. GroupGeneralMappingByImages    │\n"
"│[9]    Tutorial: group general mapping single-valued                          │\n"
"│[10]   Tutorial: group general mapping total                                  │\n"
"│[11]   Reference: Groups                                                      │\n"
"│[12]   Reference: Group Elements                                              │\n"
"│[13]   Reference: Group Properties                                            │\n"
"│[14]   Reference: Group Homomorphisms                                         │\n"
"│[15]   Reference: GroupHomomorphismByFunction                                 │\n"
"│[16]   Reference: Group Automorphisms                                         │\n"
"│[17]   Reference: Groups of Automorphisms                                     │\n"
"│[18]   Reference: Group Actions                                               │\n"
"│[19]   Reference: Group Products                                              │\n"
"│[20]   Reference: Group Libraries                                             │\n"
"│ > > >                                                                        │\n"
"└─────────────── [ <Up>/<Down> select, <Return> show, q quit ] ────────────────┘\n"
"~~~"

#: gap-lesson/_episodes/01-command-line.md:357
msgid ""
"You may use arrow keys to move up and down the list, and open help pages by\n"
"pressing Return key. For this exercise, open `Tutorial: Groups and Homomorphisms`\n"
"first. Note the navigation instructions at the bottom of the screen. Look at\n"
"first two pages, then press `q` to return to the selection menu. Next, navigate to\n"
"`Reference: Groups` and open it. Within two first pages you will find the\n"
"function `Group` and mentioning of `Order`."
msgstr ""
"Ви можете використовувати клавіші зі стрілками для переміщення вгору та вниз по списку, а також відкривати сторінки довідки,\n"
"натискаючи клавішу Return. Для цієї вправи спочатку відкрийте `Tutorial: Groups and Homomorphisms`.\n"
"Зверніть увагу на навігаційні інструкції внизу екрана. Перегляньте\n"
"перші дві сторінки, потім натисніть `q`, щоб повернутися до меню вибору. Далі перейдіть до елементу\n"
"`Reference: Groups` і відкрийте його. На перших двох сторінках ви знайдете\n"
"функцію `Group` та згадку `Order`."

#: gap-lesson/_episodes/01-command-line.md:364
msgid ""
"GAP manual comes in several formats: text is good to view in a terminal,\n"
"PDF is good for printing and HTML (especially with MathJax support) is\n"
"very efficient for exploring with a browser. If you are running GAP on your\n"
"own computer, you can set the help viewer to the default browser. If you are\n"
"running GAP on a remote machine, this (probably) will not work. (see\n"
"`?WriteGapIniFile` on how to make this setting permanent):"
msgstr ""
"Посібник GAP доступний у кількох форматах: текстовий зручний для перегляду в терміналі,\n"
"PDF зручний для друку, а HTML (особливо з підтримкою MathJax)\n"
"дуже ефективний для перегляду за допомогою браузера. Якщо ви\n"
"використовуєте GAP на віддаленій машині, це (імовірно) не працюватиме. (див.\n"
"`?WriteGapIniFile` про те, як зробити це налаштування постійним):"

# code block
#: gap-lesson/_episodes/01-command-line.md:371
msgid ""
"~~~\n"
"SetHelpViewer(\"browser\");\n"
"~~~"
msgstr ""
"~~~\n"
"SetHelpViewer(\"browser\");\n"
"~~~"

#: gap-lesson/_episodes/01-command-line.md:376
msgid "After that, invoke the help again, and see the difference!"
msgstr "Після цього викличте довідку знову та побачите різницю!"

#: gap-lesson/_episodes/01-command-line.md:378
msgid ""
"Let's now copy the following input from the first example of the GAP Reference\n"
"manual chapter on groups. It shows how to create permutations, and assign values\n"
"to variables. This is `Reference: Groups`. You can select it by typing `?11`, where\n"
"you replace `11` with whatever number appears before `Reference: Groups` on your machine."
msgstr ""
"Давайте тепер скопіюємо наступні вхідні дані з першого прикладу глави довідкового посібника GAP\n"
"про групи. У ньому показано, як створювати перестановки та присвоювати значення\n"
"змінним. Це `Reference: Groups`. Ви можете вибрати його, ввівши `?11`, де\n"
"ви заміните `11` на те значення, яке з’явиться перед `Reference: Groups` на вашому комп'ютері."

#: gap-lesson/_episodes/01-command-line.md:383
msgid ""
"If you are viewing the GAP documentation in a terminal, you might find it helpful to\n"
"open two copies of GAP, one for reading documentation and one for writing code!"
msgstr ""
"Якщо ви переглядаєте документацію GAP у терміналі, вам може бути корисно\n"
"відкрити дві копії GAP, одну для читання документації та одну для написання коду!"

#: gap-lesson/_episodes/01-command-line.md:386
msgid ""
"This guide shows how permutations in GAP are written in cycle notation, and also\n"
"shows common functions which are used with groups. Also, in some places two semi-colons\n"
"are used at the end of a line. This stops GAP from showing the result of a computation."
msgstr ""
"Цей посібник показує, як перестановки в GAP записуються в циклічній нотації, а також\n"
"показує загальні функції, які використовуються з групами. Крім того, у деяких місцях використовуються дві крапки з комою\n"
"в кінці рядка. Це не дозволить GAP показувати результат обчислення."

# code block
#: gap-lesson/_episodes/01-command-line.md:390
msgid ""
"~~~\n"
"a:=(1,2,3);;b:=(2,3,4);;\n"
"~~~"
msgstr ""
"~~~\n"
"a:=(1,2,3);;b:=(2,3,4);;\n"
"~~~"

#: gap-lesson/_episodes/01-command-line.md:395
msgid "Next, let `G` be a group generated by `a` and `b`:"
msgstr "Далі, нехай `G` - група, утворена за допомогою `a` та `b`:"

# code block
#: gap-lesson/_episodes/01-command-line.md:397
msgid ""
"~~~\n"
"G:=Group(a,b);\n"
"~~~"
msgstr ""
"~~~\n"
"G:=Group(a,b);\n"
"~~~"

# code block
#: gap-lesson/_episodes/01-command-line.md:402
msgid ""
"~~~\n"
"Group([ (1,2,3), (2,3,4) ])\n"
"~~~"
msgstr ""
"~~~\n"
"Group([ (1,2,3), (2,3,4) ])\n"
"~~~"

#: gap-lesson/_episodes/01-command-line.md:407
msgid "We may explore some properties of `G` and its generators:"
msgstr "Ми можемо дослідити деякі властивості групи `G` та її породжувачів:"

# code block
#: gap-lesson/_episodes/01-command-line.md:409
msgid ""
"~~~\n"
"Size(G); IsAbelian(G); StructureDescription(G); Order(a);\n"
"~~~"
msgstr ""
"~~~\n"
"Size(G); IsAbelian(G); StructureDescription(G); Order(a);\n"
"~~~"

# code block
#: gap-lesson/_episodes/01-command-line.md:414
msgid ""
"~~~\n"
"12\n"
"false\n"
"\"A4\"\n"
"3\n"
"~~~"
msgstr ""
"~~~\n"
"12\n"
"false\n"
"\"A4\"\n"
"3\n"
"~~~"

#: gap-lesson/_episodes/01-command-line.md:422
msgid ""
"Our next task is to find out how to obtain a list of `G`'s elements and their orders.\n"
"Enter `?elements` and explore the list of help topics. After inspection,\n"
"the entry from the Tutorial does not seem relevant, but the entry from the\n"
"Reference manual is. It also explains the difference between using `AsSSortedList`\n"
"and `AsList`. So, this is the list of elements of `G`:"
msgstr ""
"Нашим наступним завданням є з'ясувати, як отримати список елементів `G` та їх порядок.\n"
"Введіть `?elements` і перегляньте список тем довідки. Після перевірки запис у Tutorial не здається актуальним, але  є запис у\n"
"довідковому посібнику (Reference). Тут також пояснюється різниця між використанням `AsSSortedList`\n"
"і `AsList`. Отже, це список елементів `G`:"

# code block
#: gap-lesson/_episodes/01-command-line.md:428
msgid ""
"~~~\n"
"AsList(G);\n"
"~~~"
msgstr ""
"~~~\n"
"AsList(G);\n"
"~~~"

# code block
#: gap-lesson/_episodes/01-command-line.md:433
#: gap-lesson/_episodes/01-command-line.md:450
msgid ""
"~~~\n"
"[ (), (2,3,4), (2,4,3), (1,2)(3,4), (1,2,3), (1,2,4), (1,3,2), (1,3,4),\n"
"  (1,3)(2,4), (1,4,2), (1,4,3), (1,4)(2,3) ]\n"
"~~~"
msgstr ""
"~~~\n"
"[ (), (2,3,4), (2,4,3), (1,2)(3,4), (1,2,3), (1,2,4), (1,3,2), (1,3,4),\n"
"  (1,3)(2,4), (1,4,2), (1,4,3), (1,4)(2,3) ]\n"
"~~~"

#: gap-lesson/_episodes/01-command-line.md:439
msgid ""
"The returned object is a _list_. We would like to assign it to a variable\n"
"to explore and reuse. We forgot to do it when we were calculating it. Of\n"
"course, we may use the command line history to restore the last command, edit\n"
"it and call again. But instead, we will use `last` which is a special variable\n"
"holding the last result returned by GAP:"
msgstr ""
"Повернений об’єкт є _списком_. Ми хотіли б призначити його змінній\n"
"для дослідження та повторного використання. Ми забули це зробити, коли обчислювали. Звичайно,\n"
"ми можемо використовувати історію командного рядка, щоб відновити останню команду, відредагувати\n"
" її та викликати знову. Але замість цього ми будемо використовувати `last`, яка є спеціальною змінною,\n"
"що містить останній результат, повернутий GAP:"

# code block
#: gap-lesson/_episodes/01-command-line.md:445
msgid ""
"~~~\n"
"elts:=last;\n"
"~~~"
msgstr ""
"~~~\n"
"elts:=last;\n"
"~~~"

#: gap-lesson/_episodes/01-command-line.md:456
msgid ""
"This is a list. Lists in GAP are indexed from 1.\n"
"The following commands are (hopefully!) self-explanatory:"
msgstr ""
"Це список. Списки в GAP індексуються від 1.\n"
"Наступні команди (сподіваємося!) не потребують пояснень:"

# code block
#: gap-lesson/_episodes/01-command-line.md:459
msgid ""
"~~~\n"
"gap> elts[1]; elts[3]; Length(elts);\n"
"~~~"
msgstr ""
"~~~\n"
"gap> elts[1]; elts[3]; Length(elts);\n"
"~~~"

# code block
#: gap-lesson/_episodes/01-command-line.md:464
msgid ""
"~~~\n"
"()\n"
"(2,4,3)\n"
"12\n"
"~~~"
msgstr ""
"~~~\n"
"()\n"
"(2,4,3)\n"
"12\n"
"~~~"

# blockquote, which can be cascaded
#: gap-lesson/_episodes/01-command-line.md:471
msgid "> ## Lists are more than arrays"
msgstr "> ## Списки — це більше, ніж масиви"

#: gap-lesson/_episodes/01-command-line.md:472
msgid ""
">\n"
"> * May contain holes or be empty\n"
">\n"
"> * May dynamically change their length (with `Add`, `Append` or direct assigment)\n"
">\n"
"> * Not required to contain objects of the same type\n"
">\n"
">\n"
"> * See more in [GAP Tutorial: Lists and Records](http://www.gap-system.org/Manuals/doc/tut/chap3.html)"
msgstr ""
">\n"
"> * Може містити дірки або бути порожнім\n"
">\n"
"> * Може динамічно змінювати їх довжину (за допомогою `Add`, `Append` або прямого призначення)\n"
">\n"
"> * Не обов’язково містить об’єкти одного типу\n"
">\n"
">\n"
"> * Дивіться більше в [GAP Tutorial: Lists and Records](http://www.gap-system.org/Manuals/doc/tut/chap3.html)"

#: gap-lesson/_episodes/01-command-line.md:483
msgid ""
"Many functions in GAP refer to `Set`s. A set in GAP is just a list that happens to have\n"
"no repetitions, no holes, and elements in increasing order. Here are some examples:"
msgstr ""
"Багато функцій у GAP посилаються на `Множини`. Множина у GAP — це лише список,\n"
"який не має повторень, жодних дірок і елементів у порядку зростання. Ось кілька прикладів:"

# code block
#: gap-lesson/_episodes/01-command-line.md:486
msgid ""
"~~~\n"
"gap> IsSet([1,3,5]); IsSet([1,5,3]); IsSet([1,3,3]);\n"
"~~~"
msgstr ""
"~~~\n"
"gap> IsSet([1,3,5]); IsSet([1,5,3]); IsSet([1,3,3]);\n"
"~~~"

# code block
#: gap-lesson/_episodes/01-command-line.md:491
msgid ""
"~~~\n"
"true\n"
"false\n"
"false\n"
"~~~"
msgstr ""
"~~~\n"
"true\n"
"false\n"
"false\n"
"~~~"

#: gap-lesson/_episodes/01-command-line.md:498
msgid ""
"Now let us consider an interesting calculation -- the average order of elements\n"
"of `G`. There are many different ways to do this, we will consider a few of them\n"
"here."
msgstr ""
"Тепер давайте розглянемо цікаве обчислення - середній порядок елементів\n"
"групи `G`. Існує багато різних способів зробити це, ми розглянемо деякі з них\n"
"тут."

#: gap-lesson/_episodes/01-command-line.md:502
msgid ""
"A `for` loop in GAP allows you to do something for every member of a collection.\n"
"The general form of a `for` loop is:"
msgstr ""
"Цикл `for` у GAP дозволяє щось робити для кожного члена колекції.\n"
"Загальна форма циклу \"for\" така:"

# code block
#: gap-lesson/_episodes/01-command-line.md:505
msgid ""
"~~~\n"
"for val in collection do\n"
"  <something with val>\n"
"od;\n"
"~~~"
msgstr ""
"~~~\n"
"for val in collection do\n"
"  <something with val>\n"
"od;\n"
"~~~"

#: gap-lesson/_episodes/01-command-line.md:512
msgid "For example, to find the average order of our group `G` we can do."
msgstr "Наприклад, ми можемо знайти середній порядок нашої групи `G`."

# code block
#: gap-lesson/_episodes/01-command-line.md:514
msgid ""
"~~~\n"
"s:=0;;\n"
"for g in elts do\n"
"  s := s + Order(g);\n"
"od;\n"
"s/Length(elts);\n"
"~~~"
msgstr ""
"~~~\n"
"s:=0;;\n"
"for g in elts do\n"
"  s := s + Order(g);\n"
"od;\n"
"s/Length(elts);\n"
"~~~"

# code block
#: gap-lesson/_episodes/01-command-line.md:523
#: gap-lesson/_episodes/01-command-line.md:541
#: gap-lesson/_episodes/01-command-line.md:558
#: gap-lesson/_episodes/01-command-line.md:571
msgid ""
"~~~\n"
"31/12\n"
"~~~"
msgstr ""
"~~~\n"
"31/12\n"
"~~~"

#: gap-lesson/_episodes/01-command-line.md:528
msgid ""
"Actually, we can just directly loop over the elements of `G` (in general GAP\n"
"will let you loop over most types of object). We have to switch to using `Size`\n"
"instead of `Length`, as groups don't have a length!"
msgstr ""
"Насправді, ми можемо просто перебирати елементи `G` (загалом GAP\n"
"дозволить вам перебирати більшість типів об’єктів).  Нам потрібно перейти на використання `Size`\n"
"замість `Length`, оскільки групи не мають довжини!"

# code block
#: gap-lesson/_episodes/01-command-line.md:532
msgid ""
"~~~\n"
"s:=0;;\n"
"for g in G do\n"
"  s := s + Order(g);\n"
"od;\n"
"s/Size(G);\n"
"~~~"
msgstr ""
"~~~\n"
"s:=0;;\n"
"for g in G do\n"
"  s := s + Order(g);\n"
"od;\n"
"s/Size(G);\n"
"~~~"

#: gap-lesson/_episodes/01-command-line.md:546
msgid ""
"There are other ways of looping. For example, we can instead loop over a range of integers,\n"
"and accept `elts` like an array:"
msgstr ""
"Існують і інші способи зациклювання. Наприклад, натомість ми можемо перейти до діапазону цілих чиселі\n"
"прийняти `elts` як масив:"

# code block
#: gap-lesson/_episodes/01-command-line.md:549
msgid ""
"~~~\n"
"s:=0;;\n"
"for i in [ 1 .. Length(elts) ] do\n"
"  s := s + Order( elts[i] );\n"
"od;\n"
"s/Length(elts);\n"
"~~~"
msgstr ""
"~~~\n"
"s:=0;;\n"
"for i in [ 1 .. Length(elts) ] do\n"
"  s := s + Order( elts[i] );\n"
"od;\n"
"s/Length(elts);\n"
"~~~"

#: gap-lesson/_episodes/01-command-line.md:563
msgid ""
"However, often there are more compact ways of doing things. Here is a very\n"
"short way:"
msgstr ""
"Однак часто існують більш компактні способи виконання завдань. Ось дуже\n"
"короткий шлях:"

# code block
#: gap-lesson/_episodes/01-command-line.md:566
msgid ""
"~~~\n"
"Sum( List( elts, Order ) ) / Length( elts );\n"
"~~~"
msgstr ""
"~~~\n"
"Sum( List( elts, Order ) ) / Length( elts );\n"
"~~~"

#: gap-lesson/_episodes/01-command-line.md:576
msgid "Let's break this last part down:"
msgstr "Давайте розберемо останню частину:"

# unordered list
#: gap-lesson/_episodes/01-command-line.md:578
msgid "* `Order` finds the order of a single permutation."
msgstr "* `Order` знаходить порядок однієї перестановки."

# unordered list
#: gap-lesson/_episodes/01-command-line.md:579
msgid ""
"* `List(L,F)` makes a new list where the function `F` is applied to each"
msgstr "* `List(L,F)` створює новий список, де функція `F` застосовується"

#: gap-lesson/_episodes/01-command-line.md:580
msgid ""
"   member of the list `L`.\n"
"* `Sum(L)` adds up the members of a list `L`."
msgstr ""
"до кожного члена списку `L`.\n"
"* `Sum(L)` додає члени списку `L`."

# blockquote, which can be cascaded
#: gap-lesson/_episodes/01-command-line.md:583
msgid "> ## Which approach is best?"
msgstr "> ## Який підхід найкращий?"

#: gap-lesson/_episodes/01-command-line.md:584
msgid ""
">\n"
"> Compare these approaches. Which one would you prefer to use?"
msgstr ""
">\n"
"> Порівняйте ці підходи. Якому із них ви віддасте перевагу?"

#: gap-lesson/_episodes/01-command-line.md:589
msgid ""
"GAP has very helpful list manipulation tools. We will now show a few more "
"examples."
msgstr ""
"GAP має дуже корисні інструменти для роботи зі списками. Зараз ми покажемо "
"ще кілька прикладів."

#: gap-lesson/_episodes/01-command-line.md:591
msgid ""
"Sometimes, GAP does not have the exact function we want.\n"
"For example, `NrMovedPoints` gives the number of moved points of a permutation,\n"
"but what if we want to find all permutations which move `4` points? This is where\n"
"GAP's arrow notation comes in. `g -> e` makes a new function which takes one argument `g`,\n"
"and returns the value of the expression `e`. Here are some examples:"
msgstr ""
"Іноді GAP не має тієї функції, яка нам потрібна.\n"
"Наприклад, `NrMovedPoints` дає кількість переміщених точок перестановки,\n"
"але що, якщо ми хочемо знайти всі перестановки, які пересувають 4 точки? Ось тут\n"
"і з’являється позначення GAP зі стрілками. `g -> e` створює нову функцію, яка отримує один аргумент `g`\n"
"і повертає значення виразу `e`. Ось деякі приклади:"

# unordered list
#: gap-lesson/_episodes/01-command-line.md:597
msgid "* finding all elements of `G` with no fixed points:"
msgstr "* знаходження всіх елементів `G` без фіксованих точок:"

# code block
#: gap-lesson/_episodes/01-command-line.md:599
msgid ""
"~~~\n"
"Filtered( elts, g -> NrMovedPoints(g) = 4 );\n"
"~~~"
msgstr ""
"~~~\n"
"Filtered( elts, g -> NrMovedPoints(g) = 4 );\n"
"~~~"

# code block
#: gap-lesson/_episodes/01-command-line.md:604
msgid ""
"~~~\n"
"[ (1,2)(3,4), (1,3)(2,4), (1,4)(2,3) ]\n"
"~~~"
msgstr ""
"~~~\n"
"[ (1,2)(3,4), (1,3)(2,4), (1,4)(2,3) ]\n"
"~~~"

# unordered list
#: gap-lesson/_episodes/01-command-line.md:609
msgid "* finding a permutation in `G` that conjugates (1,2) to (2,3)"
msgstr "* знаходження перестановки в `G`, яка спрягає (1,2) та (2,3)"

# code block
#: gap-lesson/_episodes/01-command-line.md:611
msgid ""
"~~~\n"
"First( elts, g -> (1,2)^g = (2,3) );\n"
"~~~"
msgstr ""
"~~~\n"
"First( elts, g -> (1,2)^g = (2,3) );\n"
"~~~"

# code block
#: gap-lesson/_episodes/01-command-line.md:616
msgid ""
"~~~\n"
"(1,2,3)\n"
"~~~"
msgstr ""
"~~~\n"
"(1,2,3)\n"
"~~~"

#: gap-lesson/_episodes/01-command-line.md:621
msgid ""
"Let's check this (remember that in GAP permutations are multiplied from left"
" to right!):"
msgstr ""
"Давайте перевіримо це (пам’ятайте, що в GAP перестановки множаться зліва "
"направо!):"

# code block
#: gap-lesson/_episodes/01-command-line.md:623
msgid ""
"~~~\n"
"(1,2,3)^-1*(1,2)*(1,2,3)=(2,3);\n"
"~~~"
msgstr ""
"~~~\n"
"(1,2,3)^-1*(1,2)*(1,2,3)=(2,3);\n"
"~~~"

# code block
#: gap-lesson/_episodes/01-command-line.md:628
#: gap-lesson/_episodes/04-testing.md:76
#: gap-lesson/_episodes/04-testing.md:138
#: gap-lesson/_episodes/04-testing.md:232
msgid ""
"~~~\n"
"true\n"
"~~~"
msgstr ""
"~~~\n"
"true\n"
"~~~"

# unordered list
#: gap-lesson/_episodes/01-command-line.md:633
msgid "* checking whether all elements of `G` move the point 1 to 2:"
msgstr "* перевірка, чи всі елементи `G` пересувають точку 1 у 2:"

# code block
#: gap-lesson/_episodes/01-command-line.md:635
msgid ""
"~~~\n"
"ForAll( elts, g -> 1^g <> 2 );\n"
"~~~"
msgstr ""
"~~~\n"
"ForAll( elts, g -> 1^g <> 2 );\n"
"~~~"

# code block
#: gap-lesson/_episodes/01-command-line.md:640
#: gap-lesson/_episodes/01-command-line.md:652
msgid ""
"~~~\n"
"false\n"
"~~~"
msgstr ""
"~~~\n"
"false\n"
"~~~"

# unordered list
#: gap-lesson/_episodes/01-command-line.md:645
msgid ""
"* checking whether there is an element in `G` which moves exactly two "
"points:"
msgstr "* перевірка того, чи є елемент у `G`, який переміщує рівно дві точки:"

# code block
#: gap-lesson/_episodes/01-command-line.md:647
msgid ""
"~~~\n"
"ForAny( elts, g -> NrMovedPoints(g) = 2 );\n"
"~~~"
msgstr ""
"~~~\n"
"ForAny( elts, g -> NrMovedPoints(g) = 2 );\n"
"~~~"

# blockquote, which can be cascaded
#: gap-lesson/_episodes/01-command-line.md:657
msgid ""
"> ## Use list operations to select from `elts` the stabiliser of the point 2"
" and the centraliser of the permutation (1,2)"
msgstr ""
"> ## Використовуйте операції зі списком, щоб вибрати з `elts` стабілізатор "
"точки 2 і централізатор перестановки (1,2)"

#: gap-lesson/_episodes/01-command-line.md:658
msgid ""
">\n"
"> * `Filtered( elts, g -> 2^g = 2 );`\n"
">\n"
"> * `Filtered( elts, g -> (1,2)^g = (1,2) );`"
msgstr ""
">\n"
"> * `Filtered( elts, g -> 2^g = 2 );`\n"
">\n"
"> * `Filtered( elts, g -> (1,2)^g = (1,2) );`"

# SC/DC Template label
#: gap-lesson/_episodes/01-command-line.md:662
#: gap-lesson/_episodes/02-some-objects.md:228
#: gap-lesson/_episodes/05-small-groups.md:499
#: gap-lesson/_episodes/06-attributes.md:241
msgid "{: .challenge}"
msgstr "{: .challenge}"
