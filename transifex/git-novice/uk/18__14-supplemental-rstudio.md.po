# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Sofiia Matios, 2023
# Oleksandr Miroshkin <miroshkinan@gmail.com>, 2023
# 
msgid ""
msgstr ""
"Project-Id-Version: i18n\n"
"Report-Msgid-Bugs-To: https://github.com/haiwen/seafile-docs/issues\n"
"POT-Creation-Date: 2023-02-12 20:18:53+0000\n"
"PO-Revision-Date: 2023-02-12 20:20+0000\n"
"Last-Translator: Oleksandr Miroshkin <miroshkinan@gmail.com>, 2023\n"
"Language-Team: Ukrainian (https://app.transifex.com/carpentries-i18n/teams/98915/uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != 11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % 100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || (n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

# Front Matter
#: git-novice/_episodes/14-supplemental-rstudio.md:1
msgid ""
"---\n"
"title: \"Supplemental: Using Git from RStudio\"\n"
"teaching: 10\n"
"exercises: 0\n"
"questions:\n"
"- \"How can I use Git with RStudio?\"\n"
"objectives:\n"
"- \"Understand how to use Git from RStudio.\"\n"
"keypoints:\n"
"- \"Using RStudio's Git integration allows you to version control a project over time.\"\n"
"---"
msgstr ""
"---\n"
"title: \"Додатково: Використання Git від RStudio\"\n"
"teaching: 10\n"
"exercises: 0\n"
"questions:\n"
"- \"Як я можу використовувати Git за допомогою RStudio?\"\n"
"objectives:\n"
"- \"Зрозуміти, як використовувати Git з RStudio.\"\n"
"keypoints:\n"
"- \"Використання Git інтеграції RStudio дозволяє з часом конторолювати версіями проєкту.\"\n"
"---"

#: git-novice/_episodes/14-supplemental-rstudio.md:13
msgid ""
"Version control can be very useful when developing data analysis scripts. For\n"
"that reason, the popular development environment\n"
"[RStudio][rstudio] for the R programming language has built-in\n"
"integration with Git. While some advanced Git features still require the\n"
"command-line, RStudio has a nice interface for many common Git operations."
msgstr ""
"Контроль версій може бути дуже корисним при розробці сценаріїв аналізу даних. З\n"
"цієї причини популярне середовище розвитку\n"
"[RStudio][rstudio] для мови програмування R має вбудовану\n"
"Хоча деякі розширені функції Git все ще вимагають \n"
"командного рядка, RStudio має хороший інтерфейс для багатьох поширених операцій Git."

#: git-novice/_episodes/14-supplemental-rstudio.md:19
msgid ""
"RStudio allows us to create a [project][rstudio-projects] associated with a\n"
"given directory to keep track of various related files. To be able to track the\n"
"development of the project over time, to be able to revert to previous\n"
"versions, and to collaborate with others, we version control the Rstudio\n"
"project with Git. To get started using Git in RStudio, we create a new project:"
msgstr ""
"RStudio дозволяє нам створювати [проєкт][rstudio-проєкти], пов'язані з\n"
"даним каталогом для відстеження різних пов'язаних файлів. Щоб мати\n"
"можливість відстежувати розвиток проєкту з плином часу, щоб мати можливість повернутися до\n"
"попередніх версій, і співпрацювати з іншими, ми виконуємо керування проектом Rstudio з Git.\n"
"Для початку використання Git в RStudio ми створюємо новий проєкт:"

#: git-novice/_episodes/14-supplemental-rstudio.md:25
msgid ""
"![RStudio screenshot showing the file menu dropdown with \"New Project...\" "
"selected](../fig/RStudio_screenshot_newproject.png)"
msgstr ""
"![[Знімок екрана RStudio, що показує меню файлу, випадаюче з вибраним "
"пунктом \"New Project...\"](../fig/RStudio_screenshot_newproject.png)"

#: git-novice/_episodes/14-supplemental-rstudio.md:27
msgid ""
"This opens a dialog asking us how we want to create the project. We have\n"
"some options here. Let's say that we want to use RStudio with the planets\n"
"repository that we already made. Since that repository lives in a directory on\n"
"our computer, we choose the option \"Existing Directory\":"
msgstr ""
"Відкриває діалогове вікно з запитанням про те, як ми хочемо створити проєкт. У нас є\n"
"деякі варіанти тут. Припустимо, що ми хочемо використовувати RStudio з\n"
"репозиторієм planets, який ми вже створили. Оскільки цей репозиторій живе в каталозі на нашому комп'ютері, ми\n"
"вибираємо опцію \"Existing Directory\":"

#: git-novice/_episodes/14-supplemental-rstudio.md:32
msgid ""
"![RStudio screenshot showing New Project dialog window with \"Create project"
" from existing directory\" "
"selected](../fig/RStudio_screenshot_existingdirectory.png)"
msgstr ""
"![Знімок екрана RStudio, що показує діалогове вікно New Project за допомогою"
" обраного \"Create project from existing "
"directory\"](../fig/RStudio_screenshot_existingdirectory.png)"

# blockquote, which can be cascaded
#: git-novice/_episodes/14-supplemental-rstudio.md:34
msgid "> ## Do You See a \"Version Control\" Option?"
msgstr "> ## Ви бачите опцію \"Version Control\"?"

#: git-novice/_episodes/14-supplemental-rstudio.md:35
msgid ""
">\n"
"> Although we're not going to use it here, there should be a \"version control\"\n"
"> option on this menu. That is what you would click on if you wanted to\n"
"> create a project on your computer by cloning a repository from GitHub.\n"
"> If that option is not present, it probably means that RStudio doesn't know\n"
"> where your Git executable is, and you won't be able to progress further\n"
"> in this lesson until you tell RStudio where it is.  \n"
">\n"
"> ### Find your Git Executable\n"
">\n"
"> First let's make sure that Git is installed on your computer.\n"
"> Open your shell on Mac or Linux, or on Windows open the command prompt\n"
"> and then type:\n"
"> - `which git` (macOS, Linux)\n"
"> - `where git` (Windows)\n"
">\n"
"> If there is no version of Git on your computer, please follow the \n"
"> [Git installation instructions](https://swcarpentry.github.io/git-novice/setup.html)\n"
"> in the setup of this lesson to install Git now. Next open your shell or command prompt \n"
"> and type `which git` (macOS, Linux), or `where git` (Windows).\n"
"> Copy the path to the git executable.\n"
">\n"
"> On one Windows computer which had GitHub Desktop installed on it, the path was:\n"
"> `C:/Users/UserName/AppData/Local/GitHubDesktop/app-1.1.1/resources/app/git/cmd/git.exe`\n"
">\n"
"> NOTE: The path on your computer will be somewhat different.\n"
">\n"
"> ### Tell RStudio where to find GitHub\n"
">\n"
"> In RStudio, go to the `Tools` menu > `Global Options` > `Git/SVN` and then\n"
"> browse to the Git executable you found in the command prompt or shell. Now restart\n"
"> RStudio.\n"
"> Note: Even if you have Git installed, you may need\n"
"> to accept the Xcode license if you are using macOS."
msgstr ""
">\n"
"> Хоча ми не збираємося використовувати її тут, в цьому меню повинна бути опція \"version control\"\n"
"> option on this menu. Це те, що ви б натиснули, якщо ви хочете\n"
"> створити проєкт на вашому комп'ютері, клонуючи репозиторій з GitHub.\n"
"> Якщо цей параметр відсутній, це, ймовірно, означає, що RStudio не знає,\n"
"> де знаходиться ваш виконуваний файл Git, і ви не зможете прогресувати далі\n"
"> в цьому уроці, поки ви не скажете RStudio, де це.  \n"
">\n"
"> ### Знайдіть виконуваний файл Git\n"
">\n"
"> Спочатку давайте переконаємося, що Git встановлений на вашому комп'ютері.\n"
"> Відкрийте свій shell на Mac або Linux, або в Windows відкрийте командний рядок,\n"
"> а потім введіть:\n"
"> - `which git` (macOS, Linux)\n"
"> - `where git` (Windows)\n"
">\n"
"> Якщо на вашому комп'ютері немає версії Git, будь ласка, дотримуйтесь \n"
"> [Інструкції по установці Git](https://swcarpentry.github.io/git-novice/setup.html)\n"
"> в налаштуванні цього уроку, щоб встановити Git зараз. Далі відкрийте shell або командний рядок \n"
"> і введіть `which git` (macOS, Linux), або `where git` (Windows).\n"
"> Скопіюйте шлях до виконуваного файла git.\n"
">\n"
"> На одному комп'ютері Windows, на якому встановлено GitHub Desktop, шлях був:\n"
"> `C:/Users/UserName/AppData/Local/GitHubDesktop/app-1.1.1/resources/app/git/cmd/git.exe`\n"
">\n"
"> ПРИМІТКА: Шлях на вашому комп'ютері буде дещо іншим.\n"
">\n"
"> ### Скажіть RStudio де знайти GitHub\n"
">\n"
"> У RStudio перейдіть до меню `Tools` > `Global Options` > `Git/SVN`, а потім\n"
"> перейдіть до виконуваного файлу Git, який ви знайшли в командному рядку або shell. Тепер перезапустіть\n"
"> RStudio.\n"
"> Примітка: Навіть якщо у вас встановлений Git, вам може знадобитися прийняти ліцензію\n"
"> Xcode. якщо ви використовуєте macOS."

#: git-novice/_episodes/14-supplemental-rstudio.md:71
msgid ""
"Next, RStudio will ask which existing directory we want to use. Click\n"
"\"Browse...\" and navigate to the correct directory, then click \"Create Project\":"
msgstr ""
"Далі RStudio запитає, який існуючий каталог ми хочемо використовувати. Натисніть\n"
"\"Browse...\" і перейдіть до правильної директорії, потім натисніть\"Create Project\":"

#: git-novice/_episodes/14-supplemental-rstudio.md:74
msgid "![](../fig/RStudio_screenshot_navigateexisting.png)"
msgstr "![](../fig/RStudio_screenshot_navigateexisting.png)"

#: git-novice/_episodes/14-supplemental-rstudio.md:76
msgid ""
"Ta-da! We have created a new project in RStudio within the existing planets\n"
"repository. Notice the vertical \"Git\" menu in the menu bar. RStudio has\n"
"recognized that the current directory is a Git repository, and gives us a\n"
"number of tools to use Git:"
msgstr ""
"Та-да! Ми створили новий проект в RStudio в рамках існуючого planets\n"
"репозиторію. Зверніть увагу на вертикальне меню \"Git\" на панелі меню. RStudio визнав, що\n"
"поточна директорія є Git репозиторієм, і дає нам\n"
"ряд інструментів для використання Git:"

#: git-novice/_episodes/14-supplemental-rstudio.md:81
msgid ""
"![RStudio window after new project is created with large arrow pointing to "
"vertical Git menu bar.](../fig/RStudio_screenshot_afterclone.png)"
msgstr ""
"! [RStudio вікно після створення нового проєкту з великою стрілкою, що "
"вказує на вертикальну панель меню "
"Git.](../fig/RStudio_screenshot_afterclone.png)"

#: git-novice/_episodes/14-supplemental-rstudio.md:83
msgid ""
"To edit the existing files in the repository, we can click on them in the\n"
"\"Files\" panel on the lower right. Now let's add some additional information\n"
"about Pluto:"
msgstr ""
"Щоб редагувати існуючі файли в репозиторії, ми можемо натиснути на них в панелі\n"
"\"Files\" у правому нижньому куті. Тепер додамо додаткову інформацію\n"
"про Плутон:"

#: git-novice/_episodes/14-supplemental-rstudio.md:87
msgid "![](../fig/RStudio_screenshot_editfiles.png)"
msgstr "![](../fig/RStudio_screenshot_editfiles.png)"

#: git-novice/_episodes/14-supplemental-rstudio.md:89
msgid ""
"Once we have saved our edited files, we can use RStudio to commit the changes\n"
"by clicking on \"Commit...\" in the Git menu:"
msgstr ""
"Після того, як ми зберегли наші відредаговані файли, ми можемо використовувати RStudio для фіксації змін, \n"
"натиснувши на \"Commit...\" в меню Git:"

#: git-novice/_episodes/14-supplemental-rstudio.md:92
msgid ""
"![RStudio screenshot showing the Git menu dropdown with \"Commit...\" "
"selected](../fig/RStudio_screenshot_commit.png)"
msgstr ""
"![Знімок екрана RStudio, що показує меню Git, що випадає з вибраним пунктом "
"\"Commit...\"](../fig/RStudio_screenshot_commit.png)"

#: git-novice/_episodes/14-supplemental-rstudio.md:94
msgid ""
"This will open a dialogue where we can select which files to commit (by\n"
"checking the appropriate boxes in the \"Staged\" column), and enter a commit\n"
"message (in the upper right panel). The icons in the \"Status\" column indicate\n"
"the current status of each file. Clicking on a file shows information about\n"
"changes in the lower panel (using output of `git diff`). Once everything is the\n"
"way we want it, we click \"Commit\":"
msgstr ""
"Це відкриє діалогове вікно, де ми можемо вибрати, які файли для фіксації (перевіряючи відповідні поля\n"
"в стовпці \"Staged\"), і ввести повідомлення коміту\n"
"(у верхній правій панелі). Іконки у стовпці \"Status\" вказують \n"
"поточний стан кожного файлу. Клацання на файлі показує інформацію про зміни на нижній\n"
"панелі (за допомогою результату `git diff`). Як тільки \n"
"все так, як ми хочемо, ми натискаємо \"Commit\":"

#: git-novice/_episodes/14-supplemental-rstudio.md:101
msgid "![](../fig/RStudio_screenshot_review.png)"
msgstr "![](../fig/RStudio_screenshot_review.png)"

#: git-novice/_episodes/14-supplemental-rstudio.md:103
msgid ""
"The changes can be pushed by selecting \"Push Branch\" from the Git menu. There\n"
"are also options to pull from the remote repository, and to view the commit\n"
"history:"
msgstr ""
"Зміни можна відправити, вибравши \"Push Branch\" з меню Git. \n"
"Існують також варіанти отримання змін з віддаленого репозиторію та перегляду історії \n"
"комітів:"

#: git-novice/_episodes/14-supplemental-rstudio.md:107
msgid ""
"![RStudio screenshot showing the git menu dropdown with \"History\" "
"selected](../fig/RStudio_screenshot_history.png)"
msgstr ""
"![Знімок екрана RStudio, що показує спадне меню git з вибраним пунктом "
"\"History\"](../fig/RStudio_screenshot_history.png)"

# blockquote, which can be cascaded
#: git-novice/_episodes/14-supplemental-rstudio.md:109
msgid "> ## Are the Push/Pull Commands Grayed Out?"
msgstr "> ## Чи Є Команди Push/Pull Неактивними?"

#: git-novice/_episodes/14-supplemental-rstudio.md:110
msgid ""
">\n"
"> Grayed out Push/Pull commands generally mean that RStudio doesn't know the\n"
"> location of your remote repository (e.g. on GitHub). To fix this, open a\n"
"> terminal to the repository and enter the command: `git push -u origin\n"
"> main`. Then restart RStudio."
msgstr ""
">\n"
"> Неактивні команди Push/Pull зазвичай означають, що RStudio не знає\n"
"> місцезнаходження вашого віддаленого репозиторію (наприклад, на GitHub). Щоб виправити це, відкрийте \n"
"> термінал у репозиторії і введіть команду: `git push -u origin\n"
"> main`. Потім перезавантажте RStudio."

#: git-novice/_episodes/14-supplemental-rstudio.md:117
msgid ""
"If we click on \"History\", we can see a graphical version of what `git log`\n"
"would tell us:"
msgstr ""
"Якщо натиснути на \"History\", ми можемо побачити графічну версію того, що `git log`\n"
"сказав би нам:"

#: git-novice/_episodes/14-supplemental-rstudio.md:120
msgid "![](../fig/RStudio_screenshot_viewhistory.png)"
msgstr "![](../fig/RStudio_screenshot_viewhistory.png)"

#: git-novice/_episodes/14-supplemental-rstudio.md:122
msgid ""
"RStudio creates a number of files that it uses to keep track of a project. We\n"
"often don't want to track these, in which case we add them to our `.gitignore`\n"
"file:"
msgstr ""
"RStudio створює ряд файлів, які він використовує для відстеження проєкту. Ми часто\n"
"не хочемо відстежувати їх; в цьому випадку ми додаємо їх до нашого `.gitignore`\n"
"файлу:"

#: git-novice/_episodes/14-supplemental-rstudio.md:126
msgid ""
"![RStudio screenshot showing .gitignore open in the editor pane with the "
"files .Rproj.user, .Rhistory, .RData, and \\*.Rproj added to the "
"end](../fig/RStudio_screenshot_gitignore.png)"
msgstr ""
"![Знімок екрану RStudio, що показує .gitignore, відкритий у вікні редактора "
"з файлами .Rproj.user, .Rhistory, .RData, та \\*.Rproj, доданий до "
"кінця](../fig/RStudio_screenshot_gitignore.png)"

# blockquote, which can be cascaded
#: git-novice/_episodes/14-supplemental-rstudio.md:128
msgid "> ## Tip: versioning disposable output"
msgstr "> ## Порада: версіонування одноразового результату"

#: git-novice/_episodes/14-supplemental-rstudio.md:129
msgid ""
">\n"
"> Generally you do not want to version control disposable output (or read-only\n"
"> data). You should modify the `.gitignore` file to tell Git to ignore these\n"
"> files and directories."
msgstr ""
">\n"
"> Як правило, ви не хочете, щоб контролювати версії одноразового результату (або тільки для\n"
"> читання даних). Ви повинні змінити файл `.gitignore`, щоб повідомити Git ігнорувати ці\n"
"> файли та директорії."

# blockquote, which can be cascaded
#: git-novice/_episodes/14-supplemental-rstudio.md:135
msgid "> ## Challenge"
msgstr "> ## Виклик"

#: git-novice/_episodes/14-supplemental-rstudio.md:136
msgid ""
">\n"
"> 1. Create a new directory within your project called `graphs`.\n"
"> 2. Modify the `.gitignore` so that the `graphs` directory is not version controlled.\n"
">\n"
">\n"
"> > ## Solution to Challenge\n"
"> >\n"
"> > This can be done in Rstudio:\n"
"> > ```\n"
"> > dir.create(\"./graphs\")\n"
"> > ```\n"
"> > {: .language-r}\n"
"> > Then open up the `.gitignore` file from the right-hand panel of Rstudio and add \n"
"> > `graphs/` to the list of files to ignore."
msgstr ""
">\n"
"> 1. Створіть нову директорію у вашому проєкті під назвою `graphs`.\n"
"> 2. Змініть `.gitignore`, щоб директорія `graphs` не контролювалася версіями.\n"
">\n"
">\n"
"> > ## Вирішення Виклику\n"
"> >\n"
"> > Це можна зробити в Rstudio:\n"
"> > ```\n"
"> > dir.create(\"./graphs\")\n"
"> > ```\n"
"> > {: .language-r}\n"
"> > Потім відкрийте файл `.gitignore` з правої панелі Rstudio та додайте \n"
"> > `graphs/` до списку файлів, які слід ігнорувати."

#: git-novice/_episodes/14-supplemental-rstudio.md:153
msgid ""
"There are many more features in the RStudio Git menu, but these should be\n"
"enough to get you started!"
msgstr ""
"Є багато інших функцій в меню RStudio Git, але цих повинно бути\n"
"достатньо, щоб почати!"

#: git-novice/_episodes/14-supplemental-rstudio.md:157
msgid ""
"[rstudio]: https://www.rstudio.com/\n"
"[rstudio-projects]: https://support.rstudio.com/hc/en-us/articles/200526207-Using-Projects"
msgstr ""
"[rstudio]: https://www.rstudio.com/\n"
"[rstudio-projects]: https://support.rstudio.com/hc/en-us/articles/200526207-Using-Projects"
