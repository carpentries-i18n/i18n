# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
msgid ""
msgstr ""
"Project-Id-Version: i18n\n"
"Report-Msgid-Bugs-To: https://github.com/haiwen/seafile-docs/issues\n"
"POT-Creation-Date: 2023-02-12 20:18:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: git-novice/_extras/guide.md:1
# Front Matter
msgid "---\n"
"layout: page\n"
"title: \"Instructor Notes\"\n"
"---"
msgstr ""

#: git-novice/_extras/guide.md:5
msgid "Using a software tool to handle the versions of your project files\n"
"lets you focus on the more interesting/innovative aspects of your project."
msgstr ""

#: git-novice/_extras/guide.md:8
# unordered list
msgid "*   Version control's advantages"
msgstr ""

#: git-novice/_extras/guide.md:9
# unordered list
msgid "    *   It's easy to set up"
msgstr ""

#: git-novice/_extras/guide.md:10
# unordered list
msgid "    *   Every copy of a Git repository is a full backup of a project and its history"
msgstr ""

#: git-novice/_extras/guide.md:11
# unordered list
msgid "    *   A few easy-to-remember commands are all you need for most day-to-day version control tasks"
msgstr ""

#: git-novice/_extras/guide.md:12
# unordered list
msgid "    *   The [GitHub][github] hosting service provides a web-based collaboration service"
msgstr ""

#: git-novice/_extras/guide.md:13
# unordered list
msgid "*   Two main concepts"
msgstr ""

#: git-novice/_extras/guide.md:14
# unordered list
msgid "    *   *commit*: a recorded set of changes in your project's files"
msgstr ""

#: git-novice/_extras/guide.md:15
# unordered list
msgid "    *   *repository*: the history of all your project's commits"
msgstr ""

#: git-novice/_extras/guide.md:16
# unordered list
msgid "*   Why use GitHub?"
msgstr ""

#: git-novice/_extras/guide.md:17
# unordered list
msgid "    *   No need for a server: easy to set up"
msgstr ""

#: git-novice/_extras/guide.md:18
# unordered list
msgid "    *   GitHub's strong community: your colleagues are probably already there"
msgstr ""

#: git-novice/_extras/guide.md:20
# header
msgid "## Overall"
msgstr ""

#: git-novice/_extras/guide.md:22
msgid "Version control might be the most important topic we teach, but Git is\n"
"definitely the most complicated tool.  However, GitHub presently dominates the\n"
"open software repository landscape, so the time and effort required to teach\n"
"fundamental Git is justified and worthwhile."
msgstr ""

#: git-novice/_extras/guide.md:27
msgid "Because of this complexity, we don't teach novice learners about many\n"
"interesting topics, such as branching, hashes, and commit objects."
msgstr ""

#: git-novice/_extras/guide.md:30
msgid "Instead we try to convince them that version control is useful for researchers\n"
"working in teams or not, because it is"
msgstr ""

#: git-novice/_extras/guide.md:33
# unordered list
msgid "*   a better way to \"undo\" changes,"
msgstr ""

#: git-novice/_extras/guide.md:34
# unordered list
msgid "*   a better way to collaborate than mailing files back and forth, and"
msgstr ""

#: git-novice/_extras/guide.md:35
# unordered list
msgid "*   a better way to share your code and other scientific work with the world."
msgstr ""

#: git-novice/_extras/guide.md:37
# header
msgid "## Teaching Notes"
msgstr ""

#: git-novice/_extras/guide.md:39
# unordered list
msgid "*   You can \"split\" your shell so that recent commands remain in view using [this](https://github.com/rgaiacs/swc-shell-split-window) script."
msgstr ""

#: git-novice/_extras/guide.md:41
# unordered list
msgid "*   Make sure the network is working *before* starting this lesson."
msgstr ""

#: git-novice/_extras/guide.md:43
# unordered list
msgid "*   Drawings are particularly useful in this lesson: if you have a whiteboard,"
msgstr ""

#: git-novice/_extras/guide.md:44
msgid "    [use it][drawings]!"
msgstr ""

#: git-novice/_extras/guide.md:46
# unordered list
msgid "*   Version control is usually not the first subject in a workshop,"
msgstr ""

#: git-novice/_extras/guide.md:47
msgid "    so get learners to create a GitHub account after the session before.\n"
"    Remind learners that the username and email they use for GitHub (and setup\n"
"    during Git configuration) will be viewable to the public by default.\n"
"    However, there are many reasons why a learner may not want their personal\n"
"    information viewable, and GitHub has [resources for keeping an email address\n"
"    private][github-privacy]."
msgstr ""

#: git-novice/_extras/guide.md:54
# unordered list
msgid "*   If some learners are using Windows, there will inevitably be issues"
msgstr ""

#: git-novice/_extras/guide.md:55
msgid "    merging files with different line endings.  (Even if everyone's on\n"
"    some flavor of Unix, different editors may or may not add a\n"
"    newline to the last line of a file.) Take a moment to explain\n"
"    these issues, since learners will almost certainly trip over them\n"
"    again.  If learners are running into line ending problems, GitHub\n"
"    has a [page][github-line-endings] that helps with troubleshooting.\n"
"    Specifically, the [section on refreshing a repository][github-line-endings-refresh]\n"
"    may be helpful if learners need to change the `core.autocrlf` setting\n"
"    after already having made one or more commits."
msgstr ""

#: git-novice/_extras/guide.md:65
# unordered list
msgid "*   We don't use a Git GUI in these notes because we haven't found one that"
msgstr ""

#: git-novice/_extras/guide.md:66
msgid "    installs easily and runs reliably on the three major operating systems, and\n"
"    because we want learners to understand what commands are being run.  That\n"
"    said, instructors should demo a GUI on their desktop at some point during\n"
"    this lesson and point learners at [this page][github-gui]."
msgstr ""

#: git-novice/_extras/guide.md:71
# unordered list
msgid "*   Instructors should show learners graphical diff/merge tools like"
msgstr ""

#: git-novice/_extras/guide.md:72
msgid "    [DiffMerge][diffmerge]."
msgstr ""

#: git-novice/_extras/guide.md:74
# unordered list
msgid "*   When appropriate, explain that we teach Git rather than CVS, Subversion, or"
msgstr ""

#: git-novice/_extras/guide.md:75
msgid "    Mercurial primarily because of GitHub's growing popularity: CVS and\n"
"    Subversion are now seen as legacy systems, and Mercurial isn't nearly as\n"
"    widely used in the sciences right now."
msgstr ""

#: git-novice/_extras/guide.md:79
# unordered list
msgid "*   Further resources:"
msgstr ""

#: git-novice/_extras/guide.md:80
# unordered list
msgid "    *    [git-it][git-it] is a self-paced command-line Git demo,"
msgstr ""

#: git-novice/_extras/guide.md:81
msgid "         with [git-it-electron][git-it-electron] its GitHub Desktop successor.\n"
"    *    [Code School][code-school] has a free interactive course, [Try Git][try-git].\n"
"    *    for instructors, [the Git parable][git-parable] is useful background reading"
msgstr ""

#: git-novice/_extras/guide.md:85
# header
msgid "## [Automated Version Control]({{ page.root }}{% link _episodes/01-basics.md %})"
msgstr ""

#: git-novice/_extras/guide.md:87
# unordered list
msgid "*   Ask, \"Who uses 'undo' in their editor?\" All say \"Me\". 'Undo' is the simplest"
msgstr ""

#: git-novice/_extras/guide.md:88
msgid "    form of version control."
msgstr ""

#: git-novice/_extras/guide.md:90
# unordered list
msgid "*   Give learners a five-minute overview of what version control does for them"
msgstr ""

#: git-novice/_extras/guide.md:91
msgid "    before diving into the watch-and-do practicals.  Most of them will have\n"
"    tried to co-author papers by emailing files back and forth, or will have\n"
"    biked into the office only to realize that the USB key with last night's\n"
"    work is still on the kitchen table.  Instructors can also make jokes about\n"
"    directories with names like \"final version\", \"final version revised\",\n"
"    \"final version with reviewer three's corrections\", \"really final version\",\n"
"    and, \"come on this really has to be the last version\" to motivate version\n"
"    control as a better way to collaborate and as a better way to back work up."
msgstr ""

#: git-novice/_extras/guide.md:100
# header
msgid "## [Setting Up Git]({{ page.root }}{% link _episodes/02-setup.md %})"
msgstr ""

#: git-novice/_extras/guide.md:102
# unordered list
msgid "*   We suggest instructors and students use `nano` as the text editor for this"
msgstr ""

#: git-novice/_extras/guide.md:103
msgid "    lessons because"
msgstr ""

#: git-novice/_extras/guide.md:105
# unordered list
msgid "    *   it runs in all three major operating systems,"
msgstr ""

#: git-novice/_extras/guide.md:106
# unordered list
msgid "    *   it runs inside the shell (switching windows can be confusing to students), and"
msgstr ""

#: git-novice/_extras/guide.md:107
# unordered list
msgid "    *   it has shortcut help at the bottom of the window."
msgstr ""

#: git-novice/_extras/guide.md:109
msgid "    Please point out to students during setup that they can and should use\n"
"    another text editor if they're already familiar with it."
msgstr ""

#: git-novice/_extras/guide.md:112
# unordered list
msgid "*   When setting up Git, be very clear what learners have to enter: it is"
msgstr ""

#: git-novice/_extras/guide.md:113
msgid "    common for them to edit the instructor's details (e.g. email).  Check at\n"
"    the end using `git config --list`."
msgstr ""

#: git-novice/_extras/guide.md:116
# unordered list
msgid "*   When setting up the default branch name, if learners have a Git version"
msgstr ""

#: git-novice/_extras/guide.md:117
msgid "    older than 2.28, the default branch name can be changed for the lesson\n"
"    using `git branch -M main` if there are currently commits in the repository,\n"
"    or `git checkout -b main` if there are no commits/the repository is completely empty."
msgstr ""

#: git-novice/_extras/guide.md:121
# header
msgid "## [Creating a Repository]({{ page.root }}{% link _episodes/03-create.md %})"
msgstr ""

#: git-novice/_extras/guide.md:123
# unordered list
msgid "*   When you do `git status`, Mac users may see a `.DS_Store` file showing as"
msgstr ""

#: git-novice/_extras/guide.md:124
msgid "    untracked. This a file that Mac OS creates in each directory."
msgstr ""

#: git-novice/_extras/guide.md:126
# unordered list
msgid "*   The challenge \"Places to create repositories\" tries to reinforce the idea"
msgstr ""

#: git-novice/_extras/guide.md:127
msgid "    that the `.git` folder contains the whole Git repo and deleting this folder\n"
"    undoes a `git init`. It also gives the learner the way to fix the common\n"
"    mistake of putting unwanted folders (like `Desktop`) under version control."
msgstr ""

#: git-novice/_extras/guide.md:131
msgid "    Instead of removing the `.git` folder directly, you can choose to move it\n"
"    first to a safer directory and remove it from there:"
msgstr ""

#: git-novice/_extras/guide.md:134
msgid "    ~~~\n"
"    $ mv .git temp_git\n"
"    $ rm -rf  temp_git\n"
"    ~~~\n"
"    {: .language-bash}"
msgstr ""

#: git-novice/_extras/guide.md:140
msgid "    The challenge suggests that it is a bad idea to create a Git repo inside another repo.\n"
"    For more discussion on this topic, please see [this issue][repos-in-repos]."
msgstr ""

#: git-novice/_extras/guide.md:143
# header
msgid "## [Tracking Changes]({{ page.root }}{% link _episodes/04-changes.md %})"
msgstr ""

#: git-novice/_extras/guide.md:145
# unordered list
msgid "*   It's important that learners do a full commit cycle by themselves (make"
msgstr ""

#: git-novice/_extras/guide.md:146
msgid "    changes, `git diff`, `git add`, and `git commit`). The \"`bio` repository\"\n"
"    challenge does that."
msgstr ""

#: git-novice/_extras/guide.md:149
# unordered list
msgid "*   This is a good moment to show a diff with a graphical diff tool. If you"
msgstr ""

#: git-novice/_extras/guide.md:150
msgid "    skip it because you're short on time, show it once in GitHub."
msgstr ""

#: git-novice/_extras/guide.md:152
# unordered list
msgid "*   One thing may cause confusion is recovering old versions.  If, instead of"
msgstr ""

#: git-novice/_extras/guide.md:153
msgid "    doing `$ git checkout f22b25e mars.txt`, someone does `$ git checkout\n"
"    f22b25e`, they wind up in the \"detached HEAD\" state and confusion abounds.\n"
"    It's then possible to keep on committing, but things like `git push origin\n"
"    main` a bit later will not give easily comprehensible results.  It also\n"
"    makes it look like commits can be lost.  To \"re-attach\" HEAD, use\n"
"    `git checkout main`."
msgstr ""

#: git-novice/_extras/guide.md:160
# unordered list
msgid "*   This is a good moment to show a log within a Git GUI. If you skip it"
msgstr ""

#: git-novice/_extras/guide.md:161
msgid "    because you're short on time, show it once in GitHub."
msgstr ""

#: git-novice/_extras/guide.md:163
# header
msgid "## [Ignoring Things]({{ page.root }}{% link _episodes/06-ignore.md %})"
msgstr ""

#: git-novice/_extras/guide.md:165
msgid "Just remember that you can use wildcards and regular expressions to ignore a\n"
"particular set of files in `.gitignore`."
msgstr ""

#: git-novice/_extras/guide.md:168
# header
msgid "## [Remotes in GitHub]({{ page.root }}{% link _episodes/07-github.md %})"
msgstr ""

#: git-novice/_extras/guide.md:170
# unordered list
msgid "*   Make it clear that Git and GitHub are not the same thing: Git is an open"
msgstr ""

#: git-novice/_extras/guide.md:171
msgid "    source version control tool, GitHub is a company that hosts Git\n"
"    repositories in the web and provides a web interface to interact with repos\n"
"    they host."
msgstr ""

#: git-novice/_extras/guide.md:175
# unordered list
msgid "*   If your learners are advanced enough to be comfortable with SSH, tell them"
msgstr ""

#: git-novice/_extras/guide.md:176
msgid "    they can use keys to authenticate on GitHub instead of passwords, but don't\n"
"    try to set this up during class: it takes too long, and is a distraction\n"
"    from the core ideas of the lesson."
msgstr ""

#: git-novice/_extras/guide.md:180
# unordered list
msgid "*   It is very useful to draw a diagram showing the different repositories"
msgstr ""

#: git-novice/_extras/guide.md:181
msgid "    involved."
msgstr ""

#: git-novice/_extras/guide.md:183
# unordered list
msgid "*   When pushing to a remote, the output from Git can vary slightly depending on"
msgstr ""

#: git-novice/_extras/guide.md:184
msgid "    what leaners execute. The lesson displays the output from git if a learner\n"
"    executes `git push origin main`. However, some learners might use syntax\n"
"    suggested by GitHub for pushing to a remote with an existing repository,\n"
"    which is `git push -u origin main`. Learners using syntax from GitHub,\n"
"    `git push -u origin main`, will have slightly different output, including\n"
"    the line `Branch main set up to track remote branch main from origin by rebasing.`"
msgstr ""

#: git-novice/_extras/guide.md:191
# header
msgid "## [Collaborating]({{ page.root }}{% link _episodes/08-collab.md %})"
msgstr ""

#: git-novice/_extras/guide.md:193
# unordered list
msgid "*   Decide in advance whether all the learners will work in one shared"
msgstr ""

#: git-novice/_extras/guide.md:194
msgid "    repository, or whether they will work in pairs (or other small groups) in\n"
"    separate repositories.  The former is easier to set up; the latter runs\n"
"    more smoothly."
msgstr ""

#: git-novice/_extras/guide.md:198
# unordered list
msgid "*   Role playing between two instructors can be effective when teaching the"
msgstr ""

#: git-novice/_extras/guide.md:199
msgid "    collaboration and conflict sections of the lesson.  One instructor can play\n"
"    the role of the repository owner, while the second instructor can play the\n"
"    role of the collaborator.  If it is possible, try to use two projectors so\n"
"    that the computer screens of both instructors can be seen.  This makes for\n"
"    a very clear illustration to the students as to who does what."
msgstr ""

#: git-novice/_extras/guide.md:205
# unordered list
msgid "*   It is also effective to pair up students during this lesson and assign one"
msgstr ""

#: git-novice/_extras/guide.md:206
msgid "    member of the pair to take the role of the owner and the other the role of\n"
"    the collaborator.  In this setup, challenges can include asking the\n"
"    collaborator to make a change, commit it, and push the change to the remote\n"
"    repository so that the owner can then retrieve it, and vice-versa.  The\n"
"    role playing between the instructors can get a bit \"dramatic\" in the\n"
"    conflicts part of the lesson if the instructors want to inject some humor\n"
"    into the room."
msgstr ""

#: git-novice/_extras/guide.md:214
# unordered list
msgid "*   If you don't have two projectors, have two instructors at the front of the"
msgstr ""

#: git-novice/_extras/guide.md:215
msgid "    room.  Each instructor does their piece of the collaboration demonstration\n"
"    on their own computer and then passes the projector cord back and forth\n"
"    with the other instructor when it's time for them to do the other part of\n"
"    the collaborative workflow.  It takes less than 10 seconds for each\n"
"    switchover, so it doesn't interrupt the flow of the lesson.\n"
"    And of course it helps to give each of the instructors a different-colored\n"
"    hat, or put different-colored sticky notes on their foreheads."
msgstr ""

#: git-novice/_extras/guide.md:223
# unordered list
msgid "*   If you're the only instructor, the best way to create is clone the two"
msgstr ""

#: git-novice/_extras/guide.md:224
msgid "    repos in your Desktop, but under different names, e.g., pretend one is your\n"
"    computer at work:"
msgstr ""

#: git-novice/_extras/guide.md:227
msgid "    ~~~\n"
"    $ git clone https://github.com/vlad/planets.git planets-at-work\n"
"    ~~~\n"
"    {: .language-bash}"
msgstr ""

#: git-novice/_extras/guide.md:232
# unordered list
msgid "*   It's very common that learners mistype the remote alias or the remote URL"
msgstr ""

#: git-novice/_extras/guide.md:233
msgid "    when adding a remote, so they cannot `push`. You can diagnose this with\n"
"    `git remote -v` and checking carefully for typos.\n"
"    - To fix a wrong alias, you can do `git remote rename <old> <new>`.\n"
"    - To fix a wrong URL, you can do `git remote set-url <alias> <newurl> `."
msgstr ""

#: git-novice/_extras/guide.md:238
# unordered list
msgid "*   Before cloning the repo, be sure that nobody is inside another repo. The"
msgstr ""

#: git-novice/_extras/guide.md:239
msgid "    best way to achieve this is moving to the `Desktop` before cloning: `cd &&\n"
"    cd Desktop`."
msgstr ""

#: git-novice/_extras/guide.md:242
# unordered list
msgid "*   If both repos are in the `Desktop`, have them to clone their collaborator"
msgstr ""

#: git-novice/_extras/guide.md:243
msgid "    repo under a given directory using a second argument:"
msgstr ""

#: git-novice/_extras/guide.md:245
msgid "    ~~~\n"
"    $ git clone https://github.com/vlad/planets.git vlad-planet\n"
"    ~~~\n"
"    {: .language-bash}"
msgstr ""

#: git-novice/_extras/guide.md:250
# unordered list
msgid "*   The most common mistake is that learners `push` before `pull`ing. If they"
msgstr ""

#: git-novice/_extras/guide.md:251
msgid "    `pull` afterward, they may get a conflict."
msgstr ""

#: git-novice/_extras/guide.md:253
# unordered list
msgid "*   Conflicts, sometimes weird, will start to arise. Stay tight: conflicts are"
msgstr ""

#: git-novice/_extras/guide.md:254
msgid "    next."
msgstr ""

#: git-novice/_extras/guide.md:256
# unordered list
msgid "*   Learners may have slightly different output from `git push` and `git pull`"
msgstr ""

#: git-novice/_extras/guide.md:257
msgid "    depending on the version of git, and if upstream (`-u`) is used."
msgstr ""

#: git-novice/_extras/guide.md:259
# header
msgid "## [Conflicts]({{ page.root }}{% link _episodes/09-conflict.md %})"
msgstr ""

#: git-novice/_extras/guide.md:261
# unordered list
msgid "*   Expect the learners to make mistakes. Expect *yourself* to make mistakes."
msgstr ""

#: git-novice/_extras/guide.md:262
msgid "    This happens because it is late in the lesson and everyone is tired."
msgstr ""

#: git-novice/_extras/guide.md:264
# unordered list
msgid "*   If you're the only instructor, the best way to create a conflict is:"
msgstr ""

#: git-novice/_extras/guide.md:266
# unordered list
msgid "    *   Clone your repo in a different directory, pretending is your computer at"
msgstr ""

#: git-novice/_extras/guide.md:267
msgid "        work: `git clone https://github.com/vlad/planets.git planets-at-work`.\n"
"    *   At the office, you make a change, commit and push.\n"
"    *   At your laptop repo, you (forget to pull and) make a change, commit and\n"
"        try to push.\n"
"    *   `git pull` now and show the conflict."
msgstr ""

#: git-novice/_extras/guide.md:273
# unordered list
msgid "*   Learners usually forget to `git add` the file after fixing the conflict and"
msgstr ""

#: git-novice/_extras/guide.md:274
msgid "    just (try to) commit. You can diagnose this with `git status`."
msgstr ""

#: git-novice/_extras/guide.md:276
# unordered list
msgid "*   Remember that you can discard one of the two parents of the merge:"
msgstr ""

#: git-novice/_extras/guide.md:278
# unordered list
msgid "    *   discard the remote file, `git checkout --ours conflicted_file.txt`"
msgstr ""

#: git-novice/_extras/guide.md:279
# unordered list
msgid "    *   discard the local file, `git checkout --theirs conflicted_file.txt`"
msgstr ""

#: git-novice/_extras/guide.md:281
msgid "    You still have to `git add` and `git commit` after this. This is\n"
"    particularly useful when working with binary files."
msgstr ""

#: git-novice/_extras/guide.md:284
# unordered list
msgid "*  Keep in mind that depending on the Git version used, the outputs for"
msgstr ""

#: git-novice/_extras/guide.md:285
msgid "   `git push` and `git pull` can vary slightly."
msgstr ""

#: git-novice/_extras/guide.md:287
# header
msgid "## [Open Science]({{ page.root }}{% link _episodes/10-open.md %})"
msgstr ""

#: git-novice/_extras/guide.md:289
# header
msgid "## [Licensing]({{ page.root }}{% link _episodes/11-licensing.md %})"
msgstr ""

#: git-novice/_extras/guide.md:291
msgid "We teach about licensing because questions about who owns what, or can use\n"
"what, arise naturally once we start talking about using public services like\n"
"GitHub to store files. Also, the discussion gives learners a chance to catch\n"
"their breath after what is often a frustrating couple of hours."
msgstr ""

#: git-novice/_extras/guide.md:296
msgid "The Creative Commons family of licenses is recommended for many types of\n"
"works (including software documentation and images used in software) but not\n"
"software itself. Creative Commons [recommends][cc-faq-software] a\n"
"software-specific license instead."
msgstr ""

#: git-novice/_extras/guide.md:301
# header
msgid "## [Citation]({{ page.root }}{% link _episodes/12-citation.md %})"
msgstr ""

#: git-novice/_extras/guide.md:303
# header
msgid "## [Hosting]({{ page.root }}{% link _episodes/13-hosting.md %})"
msgstr ""

#: git-novice/_extras/guide.md:305
msgid "A common concern for learners is having their work publicly available on\n"
"GitHub.  While we encourage open science, sometimes private repos are the\n"
"only choice. It's always interesting to mention the options to have\n"
"web-hosted private repositories."
msgstr ""

#: git-novice/_extras/guide.md:310
msgid "[cc-faq-software]: https://creativecommons.org/faq/#can-i-apply-a-creative-commons-license-to-software\n"
"[code-school]: https://www.codeschool.com/\n"
"[diffmerge]: https://sourcegear.com/diffmerge/\n"
"[drawings]: https://marklodato.github.io/visual-git-guide/index-en.html\n"
"[git-it]: https://github.com/jlord/git-it\n"
"[git-it-electron]: https://github.com/jlord/git-it-electron\n"
"[git-parable]: http://tom.preston-werner.com/2009/05/19/the-git-parable.html\n"
"[github]: https://github.com/\n"
"[github-gui]: https://git-scm.com/downloads/guis\n"
"[github-line-endings]: https://docs.github.com/en/github/using-git/configuring-git-to-handle-line-endings\n"
"[github-line-endings-refresh]: https://docs.github.com/en/github/using-git/configuring-git-to-handle-line-endings#refreshing-a-repository-after-changing-line-endings\n"
"[github-privacy]: https://help.github.com/articles/keeping-your-email-address-private/\n"
"[repos-in-repos]: https://github.com/swcarpentry/git-novice/issues/272\n"
"[try-git]: https://try.github.io"
msgstr ""

