# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
msgid ""
msgstr ""
"Project-Id-Version: i18n\n"
"Report-Msgid-Bugs-To: https://github.com/haiwen/seafile-docs/issues\n"
"POT-Creation-Date: 2020-08-15 19:10:39+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: r-raster-vector-geospatial/CODE_OF_CONDUCT.md:1
# Front Matter
msgid "---\n"
"layout: page\n"
"title: \"Contributor Code of Conduct\"\n"
"---"
msgstr ""

#: r-raster-vector-geospatial/CODE_OF_CONDUCT.md:5
msgid "As contributors and maintainers of this project,\n"
"we pledge to follow the [Carpentry Code of Conduct][coc]."
msgstr ""

#: r-raster-vector-geospatial/CODE_OF_CONDUCT.md:8
msgid "Instances of abusive, harassing, or otherwise unacceptable behavior\n"
"may be reported by following our [reporting guidelines][coc-reporting]."
msgstr ""

#: r-raster-vector-geospatial/CODE_OF_CONDUCT.md:11
#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:645
#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:473
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:448
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:587
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:723
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:335
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:846
#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:320
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:402
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:539
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:693
#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:575
#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:381
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:685
#: r-raster-vector-geospatial/_extras/discuss.md:6
#: r-raster-vector-geospatial/_extras/figures.md:67
#: r-raster-vector-geospatial/_extras/guide.md:146
msgid "{% include links.md %}"
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:1
# header
msgid "# Contributing"
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:3
msgid "[Software Carpentry][swc-site] and [Data Carpentry][dc-site] are open source projects,\n"
"and we welcome contributions of all kinds:\n"
"new lessons,\n"
"fixes to existing material,\n"
"bug reports,\n"
"and reviews of proposed changes are all welcome."
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:10
# header
msgid "## Contributor Agreement"
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:12
msgid "By contributing,\n"
"you agree that we may redistribute your work under [our license](LICENSE.md).\n"
"In exchange,\n"
"we will address your issues and/or assess your change proposal as promptly as we can,\n"
"and help you become a member of our community.\n"
"Everyone involved in [Software Carpentry][swc-site] and [Data Carpentry][dc-site]\n"
"agrees to abide by our [code of conduct](CODE_OF_CONDUCT.md)."
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:20
# header
msgid "## How to Contribute"
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:22
msgid "The easiest way to get started is to file an issue\n"
"to tell us about a spelling mistake,\n"
"some awkward wording,\n"
"or a factual error.\n"
"This is a good way to introduce yourself\n"
"and to meet some of our community members."
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:29
# ordered list
msgid "1.  If you do not have a [GitHub][github] account,"
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:30
msgid "    you can [send us comments by email][contact].\n"
"    However,\n"
"    we will be able to respond more quickly if you use one of the other methods described below."
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:34
# ordered list
msgid "2.  If you have a [GitHub][github] account,"
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:35
msgid "    or are willing to [create one][github-join],\n"
"    but do not know how to use Git,\n"
"    you can report problems or suggest improvements by [creating an issue][issues].\n"
"    This allows us to assign the item to someone\n"
"    and to respond to it in a threaded discussion."
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:41
# ordered list
msgid "3.  If you are comfortable with Git,"
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:42
msgid "    and would like to add or change material,\n"
"    you can submit a pull request (PR).\n"
"    Instructions for doing this are [included below](#using-github)."
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:46
# header
msgid "## Where to Contribute"
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:48
# ordered list
msgid "1.  If you wish to change this lesson,"
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:49
msgid "    please work in <https://github.com/datacarpentry/r-raster-vector-geospatial/>,\n"
"    which can be viewed at <https://datacarpentry.org/r-raster-vector-geospatial/>."
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:52
# ordered list
msgid "2.  If you wish to change the example lesson,"
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:53
msgid "    please work in <https://github.com/carpentries/lesson-example>,\n"
"    which documents the format of our lessons\n"
"    and can be viewed at <https://carpentries.github.io/lesson-example>."
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:57
# ordered list
msgid "3.  If you wish to change the template used for workshop websites,"
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:58
msgid "    please work in <https://github.com/carpentries/workshop-template>.\n"
"    The home page of that repository explains how to set up workshop websites,\n"
"    while the extra pages in <https://carpentries.github.io/workshop-template>\n"
"    provide more background on our design choices."
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:63
# ordered list
msgid "4.  If you wish to change CSS style files, tools,"
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:64
msgid "    or HTML boilerplate for lessons or workshops stored in `_includes` or `_layouts`,\n"
"    please work in <https://github.com/carpentries/styles>."
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:67
# header
msgid "## What to Contribute"
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:69
msgid "There are many ways to contribute,\n"
"from writing new exercises and improving existing ones\n"
"to updating or filling in the documentation\n"
"and submitting [bug reports][issues]\n"
"about things that don't work, aren't clear, or are missing.\n"
"If you are looking for ideas,\n"
"please see [the list of issues for this repository][issues],\n"
"or the issues for [Data Carpentry][dc-issues]\n"
"and [Software Carpentry][swc-issues] projects."
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:79
msgid "Comments on issues and reviews of pull requests are just as welcome:\n"
"we are smarter together than we are on our own.\n"
"Reviews from novices and newcomers are particularly valuable:\n"
"it's easy for people who have been using these lessons for a while\n"
"to forget how impenetrable some of this material can be,\n"
"so fresh eyes are always welcome."
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:86
# header
msgid "## What *Not* to Contribute"
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:88
msgid "Our lessons already contain more material than we can cover in a typical workshop,\n"
"so we are usually *not* looking for more concepts or tools to add to them.\n"
"As a rule,\n"
"if you want to introduce a new idea,\n"
"you must (a) estimate how long it will take to teach\n"
"and (b) explain what you would take out to make room for it.\n"
"The first encourages contributors to be honest about requirements;\n"
"the second, to think hard about priorities."
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:97
msgid "We are also not looking for exercises or other material that only run on one platform.\n"
"Our workshops typically contain a mixture of Windows, Mac OS X, and Linux users;\n"
"in order to be usable,\n"
"our lessons must run equally well on all three."
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:102
# header
msgid "## Using GitHub"
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:104
msgid "If you choose to contribute via GitHub,\n"
"you may want to look at\n"
"[How to Contribute to an Open Source Project on GitHub][how-contribute].\n"
"In brief:"
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:109
# ordered list
msgid "1.  The website for the lesson is generated from the gh-pages branch. "
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:110
msgid "  The content in this branch is generated automatically by Travis CI from the master branch. \n"
"  Make your contributions by creating a new branch from master. In this repository, \n"
"  please do not work from gh-branch."
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:114
# ordered list
msgid "2.  We use [GitHub flow][github-flow] to manage changes:"
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:115
msgid "    1.  Create a new branch in your desktop copy of this repository for each significant change.\n"
"    2.  Commit the change in that branch.\n"
"    3.  Push that branch to your fork of this repository on GitHub.\n"
"    4.  Submit a pull request from that branch to the [master repository][repo].\n"
"    5.  If you receive feedback,\n"
"        make changes on your desktop and push to your branch on GitHub:\n"
"        the pull request will update automatically."
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:123
# ordered list
msgid "3.  This repository contains two repositories for storing the lesson episodes: "
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:124
msgid "    `_episodes` and `_episodes_rmd`. To modify episodes, make changes to the\n"
"    files in the `_episodes_rmd` directory **NOT** the `_episodes` directory.\n"
"    The Markdown files in `_episodes` render automatically from the RMarkdown\n"
"    files in the `_episodes_rmd` directory."
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:129
msgid "Each lesson has at least two Maintainers who review issues and pull requests\n"
"or encourage others to do so.\n"
"The Maintainers are community volunteers,\n"
"and have final say over what gets merged into the lesson."
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:134
# header
msgid "## Other Resources"
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:136
msgid "General discussion of [Software Carpentry][swc-site] and [Data Carpentry][dc-site]\n"
"happens on the [discussion mailing list][discuss-list],\n"
"which everyone is welcome to join.\n"
"You can also [reach us by email][contact]."
msgstr ""

#: r-raster-vector-geospatial/CONTRIBUTING.md:141
msgid "[contact]: mailto:admin@software-carpentry.org\n"
"[dc-issues]: https://github.com/issues?q=user%3Adatacarpentry\n"
"[dc-lessons]: http://datacarpentry.org/lessons/\n"
"[dc-site]: http://datacarpentry.org/\n"
"[discuss-list]: https://carpentries.topicbox.com/groups/discuss\n"
"[github]: http://github.com\n"
"[github-flow]: https://guides.github.com/introduction/flow/\n"
"[github-join]: https://github.com/join\n"
"[how-contribute]: https://egghead.io/series/how-to-contribute-to-an-open-source-project-on-github\n"
"[issues]: https://github.com/datacarpentry/r-raster-vector-geospatial/issues\n"
"[repo]: https://github.com/datacarpentry/r-raster-vector-geospatial\n"
"[swc-issues]: https://github.com/issues?q=user%3Aswcarpentry\n"
"[swc-lessons]: http://software-carpentry.org/lessons/\n"
"[swc-site]: http://software-carpentry.org/"
msgstr ""

#: r-raster-vector-geospatial/LICENSE.md:1
# Front Matter
msgid "---\n"
"layout: page\n"
"title: \"Licenses\"\n"
"root: .\n"
"---"
msgstr ""

#: r-raster-vector-geospatial/LICENSE.md:6
# header
msgid "## Instructional Material"
msgstr ""

#: r-raster-vector-geospatial/LICENSE.md:8
msgid "All Software Carpentry and Data Carpentry instructional material is\n"
"made available under the [Creative Commons Attribution\n"
"license][cc-by-human]. The following is a human-readable summary of\n"
"(and not a substitute for) the [full legal text of the CC BY 4.0\n"
"license][cc-by-legal]."
msgstr ""

#: r-raster-vector-geospatial/LICENSE.md:14
msgid "You are free:"
msgstr ""

#: r-raster-vector-geospatial/LICENSE.md:16
# unordered list
msgid "* to **Share**---copy and redistribute the material in any medium or format"
msgstr ""

#: r-raster-vector-geospatial/LICENSE.md:17
# unordered list
msgid "* to **Adapt**---remix, transform, and build upon the material"
msgstr ""

#: r-raster-vector-geospatial/LICENSE.md:19
msgid "for any purpose, even commercially."
msgstr ""

#: r-raster-vector-geospatial/LICENSE.md:21
msgid "The licensor cannot revoke these freedoms as long as you follow the\n"
"license terms."
msgstr ""

#: r-raster-vector-geospatial/LICENSE.md:24
msgid "Under the following terms:"
msgstr ""

#: r-raster-vector-geospatial/LICENSE.md:26
# unordered list
msgid "* **Attribution**---You must give appropriate credit (mentioning that"
msgstr ""

#: r-raster-vector-geospatial/LICENSE.md:27
msgid "  your work is derived from work that is Copyright © Software\n"
"  Carpentry and, where practical, linking to\n"
"  http://software-carpentry.org/), provide a [link to the\n"
"  license][cc-by-human], and indicate if changes were made. You may do\n"
"  so in any reasonable manner, but not in any way that suggests the\n"
"  licensor endorses you or your use."
msgstr ""

#: r-raster-vector-geospatial/LICENSE.md:34
msgid "**No additional restrictions**---You may not apply legal terms or\n"
"technological measures that legally restrict others from doing\n"
"anything the license permits.  With the understanding that:"
msgstr ""

#: r-raster-vector-geospatial/LICENSE.md:38
msgid "Notices:"
msgstr ""

#: r-raster-vector-geospatial/LICENSE.md:40
# unordered list
msgid "* You do not have to comply with the license for elements of the"
msgstr ""

#: r-raster-vector-geospatial/LICENSE.md:41
msgid "  material in the public domain or where your use is permitted by an\n"
"  applicable exception or limitation.\n"
"* No warranties are given. The license may not give you all of the\n"
"  permissions necessary for your intended use. For example, other\n"
"  rights such as publicity, privacy, or moral rights may limit how you\n"
"  use the material."
msgstr ""

#: r-raster-vector-geospatial/LICENSE.md:48
# header
msgid "## Software"
msgstr ""

#: r-raster-vector-geospatial/LICENSE.md:50
msgid "Except where otherwise noted, the example programs and other software\n"
"provided by Software Carpentry and Data Carpentry are made available under the\n"
"[OSI][osi]-approved\n"
"[MIT license][mit-license]."
msgstr ""

#: r-raster-vector-geospatial/LICENSE.md:55
msgid "Permission is hereby granted, free of charge, to any person obtaining\n"
"a copy of this software and associated documentation files (the\n"
"\"Software\"), to deal in the Software without restriction, including\n"
"without limitation the rights to use, copy, modify, merge, publish,\n"
"distribute, sublicense, and/or sell copies of the Software, and to\n"
"permit persons to whom the Software is furnished to do so, subject to\n"
"the following conditions:"
msgstr ""

#: r-raster-vector-geospatial/LICENSE.md:63
msgid "The above copyright notice and this permission notice shall be\n"
"included in all copies or substantial portions of the Software."
msgstr ""

#: r-raster-vector-geospatial/LICENSE.md:66
msgid "THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n"
"EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n"
"MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n"
"NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n"
"LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n"
"OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n"
"WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
msgstr ""

#: r-raster-vector-geospatial/LICENSE.md:74
# header
msgid "## Trademark"
msgstr ""

#: r-raster-vector-geospatial/LICENSE.md:76
msgid "\"Software Carpentry\" and \"Data Carpentry\" and their respective logos\n"
"are registered trademarks of [Community Initiatives][CI]."
msgstr ""

#: r-raster-vector-geospatial/LICENSE.md:79
msgid "[cc-by-human]: https://creativecommons.org/licenses/by/4.0/\n"
"[cc-by-legal]: https://creativecommons.org/licenses/by/4.0/legalcode\n"
"[mit-license]: https://opensource.org/licenses/mit-license.html\n"
"[ci]: http://communityin.org/\n"
"[osi]: https://opensource.org"
msgstr ""

#: r-raster-vector-geospatial/README.md:1
msgid "[![DOI](https://zenodo.org/badge/44772343.svg)](https://zenodo.org/badge/latestdoi/44772343)\n"
"[![Build Status](https://travis-ci.org/datacarpentry/r-raster-vector-geospatial.svg?branch=master)](https://travis-ci.org/datacarpentry/r-raster-vector-geospatial)\n"
"[![Create a Slack Account with us](https://img.shields.io/badge/Create_Slack_Account-The_Carpentries-071159.svg)](https://swc-slack-invite.herokuapp.com/)\n"
"[![Slack Status](https://img.shields.io/badge/Slack_Channel-dc--geospatial-E01563.svg)](https://swcarpentry.slack.com/messages/C9ME7G5RD)"
msgstr ""

#: r-raster-vector-geospatial/README.md:7
# header
msgid "# R for Raster and Vector Data"
msgstr ""

#: r-raster-vector-geospatial/README.md:9
# header
msgid "## Contributing to lesson development"
msgstr ""

#: r-raster-vector-geospatial/README.md:11
# unordered list
msgid "* The lesson files to be edited are in the `_epiodes_rmd` folder. This repository uses the `master` branch for development."
msgstr ""

#: r-raster-vector-geospatial/README.md:12
# unordered list
msgid "* You can visualize the changes locally by typing `make serve` at your terminal. The site will be rendered at <http://localhost:4000>"
msgstr ""

#: r-raster-vector-geospatial/README.md:13
# unordered list
msgid "* Each time you push a change to GitHub, Travis-CI rebuilds the lesson, and when it's successful (look for the green badge at the top of the README file), it publishes the result at <http://www.datacarpentry.org/r-raster-vector-geospatial/>"
msgstr ""

#: r-raster-vector-geospatial/README.md:14
# unordered list
msgid "* Note: any manual commit to `gh-pages` will be erased and lost during the automated build and deploy cycle operated by Travis-CI."
msgstr ""

#: r-raster-vector-geospatial/README.md:18
# header
msgid "#### Lesson Maintainers:"
msgstr ""

#: r-raster-vector-geospatial/README.md:20
# unordered list
msgid "* [Leah Wasser][wasser_leah]"
msgstr ""

#: r-raster-vector-geospatial/README.md:21
# unordered list
msgid "* [Joseph Stachelek][stachelek_joseph]"
msgstr ""

#: r-raster-vector-geospatial/README.md:22
# unordered list
msgid "* Tyson Swetnam"
msgstr ""

#: r-raster-vector-geospatial/README.md:23
# unordered list
msgid "* Lauren O'Brien"
msgstr ""

#: r-raster-vector-geospatial/README.md:24
# unordered list
msgid "* Janani Selvaraj"
msgstr ""

#: r-raster-vector-geospatial/README.md:25
# unordered list
msgid "* [Lachlan Deer][deer_lachlan]"
msgstr ""

#: r-raster-vector-geospatial/README.md:26
# unordered list
msgid "* Chris Prener"
msgstr ""

#: r-raster-vector-geospatial/README.md:27
# unordered list
msgid "* Juan Fung"
msgstr ""

#: r-raster-vector-geospatial/README.md:29
msgid "[wasser_leah]: https://software-carpentry.org/team/#wasser_leah\n"
"[stachelek_joseph]: https://software-carpentry.org/team/#stachelek_joseph\n"
"<!-- [swetnam_tyson]: https://software-carpentry.org/team/#swetnam_tyson -->\n"
"<!-- [obrien_laura]: https://software-carpentry.org/team/#obrien_laura -->\n"
"<!-- [selvaraj_janini]: https://software-carpentry.org/team/#selvaraj_janini -->\n"
"[deer_lachlan]: https://software-carpentry.org/team/#deer_lachlan\n"
"<!-- [prener_chris]: https://software-carpentry.org/team/#prener_chris -->\n"
"<!-- [fung_juan]: https://software-carpentry.org/team/ -->"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:1
# Front Matter
msgid "---\n"
"# Please do not edit this file directly; it is auto generated.\n"
"# Instead, please edit 01-raster-structure.md in _episodes_rmd/\n"
"title: \"Intro to Raster Data in R\"\n"
"teaching: 40\n"
"exercises: 20\n"
"questions:\n"
"-  \"What is a raster dataset?\"\n"
"-  \"How do I work with and plot raster data in R?\"\n"
"-  \"How can I handle missing or bad data values for a raster?\"\n"
"objectives:\n"
"-  \"Describe the fundamental attributes of a raster dataset.\"\n"
"-  \"Explore raster attributes and metadata using R.\"\n"
"-  \"Import rasters into R using the `raster` package.\"\n"
"-  \"Plot a raster file in R using the `ggplot2` package.\"\n"
"-  \"Describe the difference between single- and multi-band rasters.\"\n"
"keypoints:\n"
"- \"The GeoTIFF file format includes metadata about the raster data.\" \n"
"- \"To plot raster data with the `ggplot2` package, we need to convert it to a dataframe.\"\n"
"- \"R stores CRS information in the Proj4 format.\"\n"
"- \"Be careful when dealing with missing or bad data values.\"\n"
"source: Rmd\n"
"---"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:29
# blockquote, which can be cascaded
msgid "> ## Things You'll Need To Complete This Episode"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:30
#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:51
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:63
msgid ">\n"
"> See the [lesson homepage]({{ site.baseurl }}) for detailed information about the software,\n"
"> data, and other prerequisites you will need to work through the examples in this episode."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:33
#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:30
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:24
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:29
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:27
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:31
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:50
#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:54
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:28
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:58
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:66
#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:30
#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:61
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:61
#: r-raster-vector-geospatial/index.md:56
# SC/DC Template label
msgid "{: .prereq}"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:35
msgid "In this episode, we will introduce the fundamental principles, packages and\n"
"metadata/raster attributes that are needed to work with raster data in R. We will\n"
"discuss some of the core metadata elements that we need to understand to work with\n"
"rasters in R, including CRS and resolution. We will also explore missing and bad\n"
"data values as stored in a raster and how R handles these elements."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:41
msgid "We will continue to work with the `dplyr` and `ggplot2` packages that were introduced\n"
"in the [Introduction to R for Geospatial Data](https://datacarpentry.org/r-intro-geospatial/) lesson. We will use two additional packages in this episode to work with raster data - the\n"
"`raster` and `rgdal` packages. Make sure that you have these packages loaded."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:46
# code block
msgid "~~~\n"
"library(raster)\n"
"library(rgdal)\n"
"library(ggplot2)\n"
"library(dplyr)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:52
#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:77
#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:114
#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:142
#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:166
#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:197
#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:224
#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:233
#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:255
#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:297
#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:354
#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:368
#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:407
#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:552
#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:577
#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:53
#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:63
#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:82
#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:112
#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:135
#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:147
#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:170
#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:184
#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:206
#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:231
#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:247
#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:299
#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:323
#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:345
#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:375
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:60
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:71
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:87
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:105
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:121
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:208
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:217
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:232
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:247
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:265
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:301
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:315
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:334
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:341
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:355
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:372
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:388
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:146
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:160
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:189
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:201
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:213
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:389
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:398
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:410
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:438
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:51
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:59
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:68
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:137
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:145
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:154
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:180
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:188
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:210
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:259
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:283
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:291
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:312
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:332
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:359
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:387
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:398
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:564
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:581
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:600
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:49
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:69
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:109
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:126
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:143
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:163
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:193
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:83
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:98
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:114
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:130
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:220
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:238
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:258
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:272
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:292
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:318
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:456
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:472
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:485
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:504
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:518
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:620
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:646
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:669
#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:94
#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:117
#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:140
#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:169
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:127
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:145
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:164
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:185
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:202
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:233
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:247
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:289
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:304
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:345
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:94
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:131
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:153
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:167
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:195
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:209
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:242
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:262
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:276
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:290
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:312
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:327
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:345
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:369
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:537
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:148
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:166
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:186
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:206
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:229
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:244
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:258
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:272
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:286
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:397
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:422
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:430
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:443
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:476
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:490
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:517
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:535
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:555
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:569
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:604
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:618
#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:71
#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:96
#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:105
#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:134
#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:179
#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:272
#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:285
#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:305
#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:318
#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:352
#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:386
#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:449
#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:459
#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:472
#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:94
#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:116
#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:164
#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:182
#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:199
#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:236
#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:261
#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:279
#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:294
#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:310
#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:332
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:88
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:113
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:140
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:164
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:175
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:212
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:229
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:237
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:263
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:271
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:288
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:305
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:449
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:483
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:495
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:559
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:577
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:601
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:625
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:644
msgid "{: .language-r}"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:54
# blockquote, which can be cascaded
msgid "> ## Introduce the Data"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:55
msgid ">\n"
"> If not already discussed, introduce the datasets that will be used in this\n"
"> lesson. A brief introduction to the datasets can be found on the \n"
"> [Geospatial workshop homepage](https://datacarpentry.org/geospatial-workshop/#data).\n"
"> \n"
"> For more detailed information about the datasets, check\n"
"out the [Geospatial workshop data\n"
"page](http://datacarpentry.org/geospatial-workshop/data/)."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:63
#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:131
#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:262
#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:276
#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:387
#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:512
#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:643
#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:126
#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:356
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:186
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:51
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:369
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:381
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:114
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:539
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:554
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:91
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:683
#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:154
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:276
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:324
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:413
#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:86
#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:209
#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:216
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:552
# SC/DC Template label
msgid "{: .callout}"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:65
# header
msgid "## View Raster File Attributes"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:67
msgid "We will be working with a series of GeoTIFF files in this lesson. The\n"
"GeoTIFF format contains a set of embedded tags with metadata about the raster\n"
"data. We can use the function `GDALinfo()` to get information about our raster\n"
"data before we read that data into R. It is ideal to do this before importing\n"
"your data."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:74
# code block
msgid "~~~\n"
"GDALinfo(\"data/NEON-DS-Airborne-Remote-Sensing/HARV/DSM/HARV_dsmCrop.tif\")\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:81
# code block
msgid "~~~\n"
"rows        1367 \n"
"columns     1697 \n"
"bands       1 \n"
"lower left origin.x        731453 \n"
"lower left origin.y        4712471 \n"
"res.x       1 \n"
"res.y       1 \n"
"ysign       -1 \n"
"oblique.x   0 \n"
"oblique.y   0 \n"
"driver      GTiff \n"
"projection  +proj=utm +zone=18 +datum=WGS84 +units=m +no_defs \n"
"file        data/NEON-DS-Airborne-Remote-Sensing/HARV/DSM/HARV_dsmCrop.tif \n"
"apparent band summary:\n"
"   GDType hasNoDataValue NoDataValue blockSize1 blockSize2\n"
"1 Float64           TRUE       -9999          1       1697\n"
"apparent band statistics:\n"
"    Bmin   Bmax    Bmean      Bsd\n"
"1 305.07 416.07 359.8531 17.83169\n"
"Metadata:\n"
"AREA_OR_POINT=Area \n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:104
#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:156
#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:186
#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:210
#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:243
#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:305
#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:361
#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:375
#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:414
#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:559
#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:71
#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:95
#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:120
#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:160
#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:191
#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:313
#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:333
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:225
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:239
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:258
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:276
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:308
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:322
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:348
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:362
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:220
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:202
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:250
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:274
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:303
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:319
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:571
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:588
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:117
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:141
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:160
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:174
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:202
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:216
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:406
#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:124
#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:187
#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:359
#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:439
#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:172
#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:247
#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:269
#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:287
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:102
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:126
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:153
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:188
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:220
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:244
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:296
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:312
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:566
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:614
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:638
# SC/DC Template label
msgid "{: .output}"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:106
msgid "If you wish to store this information in R, you can do the following:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:109
# code block
msgid "~~~\n"
"HARV_dsmCrop_info <- capture.output(\n"
"  GDALinfo(\"data/NEON-DS-Airborne-Remote-Sensing/HARV/DSM/HARV_dsmCrop.tif\")\n"
")\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:116
msgid "Each line of text that was printed to the console is now stored as an element of\n"
"the character vector `HARV_dsmCrop_info`. We will be exploring this data throughout this \n"
"episode. By the end of this episode, you will be able to explain and understand the output above."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:120
# header
msgid "## Open a Raster in R"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:122
msgid "Now that we've previewed the metadata for our GeoTIFF, let's import this\n"
"raster dataset into R and explore its metadata more closely. We can use the `raster()` \n"
"function to open a raster in R."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:126
# blockquote, which can be cascaded
msgid "> ## Data Tip - Object names"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:127
# blockquote, which can be cascaded
msgid "> To improve code"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:128
# blockquote, which can be cascaded
msgid "> readability, file and object names should be used that make it clear what is in"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:129
# blockquote, which can be cascaded
msgid "> the file. The data for this episode were collected from Harvard Forest so"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:130
# blockquote, which can be cascaded
msgid "> we'll use a naming convention of `datatype_HARV`."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:133
msgid "First we will load our raster file into R and view the data structure."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:136
# code block
msgid "~~~\n"
"DSM_HARV <- \n"
"  raster(\"data/NEON-DS-Airborne-Remote-Sensing/HARV/DSM/HARV_dsmCrop.tif\")\n"
"\n"
"DSM_HARV\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:146
# code block
msgid "~~~\n"
"class      : RasterLayer \n"
"dimensions : 1367, 1697, 2319799  (nrow, ncol, ncell)\n"
"resolution : 1, 1  (x, y)\n"
"extent     : 731453, 733150, 4712471, 4713838  (xmin, xmax, ymin, ymax)\n"
"crs        : +proj=utm +zone=18 +datum=WGS84 +units=m +no_defs \n"
"source     : /home/travis/build/datacarpentry/r-raster-vector-geospatial/_episodes_rmd/data/NEON-DS-Airborne-Remote-Sensing/HARV/DSM/HARV_dsmCrop.tif \n"
"names      : HARV_dsmCrop \n"
"values     : 305.07, 416.07  (min, max)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:158
msgid "The information above includes a report of min and max values, but no other data\n"
"range statistics. Similar to other R data structures like vectors and data frame\n"
"columns, descriptive statistics for raster data can be retrieved like"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:163
# code block
msgid "~~~\n"
"summary(DSM_HARV)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:170
# code block
msgid "~~~\n"
"Warning in .local(object, ...): summary is an estimate based on a sample of 1e+05 cells (4.31% of all cells)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:173
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:227
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:26
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:76
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:116
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:133
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:150
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:170
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:200
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:25
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:31
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:38
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:45
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:90
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:105
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:121
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:137
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:227
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:245
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:265
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:279
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:299
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:325
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:463
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:492
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:525
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:627
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:653
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:676
#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:28
#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:34
#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:41
#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:48
#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:101
#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:124
#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:147
#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:176
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:23
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:47
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:54
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:61
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:68
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:134
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:152
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:171
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:192
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:209
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:240
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:254
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:296
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:311
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:352
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:26
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:32
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:39
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:46
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:53
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:249
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:269
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:283
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:297
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:319
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:334
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:352
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:376
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:25
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:32
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:39
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:46
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:53
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:60
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:95
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:102
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:109
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:116
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:122
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:155
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:173
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:193
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:213
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:236
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:251
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:265
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:279
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:293
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:369
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:376
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:382
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:450
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:483
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:497
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:524
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:542
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:562
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:576
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:611
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:625
#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:168
#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:55
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:56
# SC/DC Template label
msgid "{: .error}"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:177
# code block
msgid "~~~\n"
"        HARV_dsmCrop\n"
"Min.        305.5500\n"
"1st Qu.     345.6500\n"
"Median      359.6450\n"
"3rd Qu.     374.2825\n"
"Max.        413.9000\n"
"NA's          0.0000\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:188
msgid "but note the warning - unless you force R to calculate these statistics using\n"
"every cell in the raster, it will take a random sample of 100,000 cells and\n"
"calculate from that instead. To force calculation on more, or even all values,\n"
"you can use the parameter `maxsamp`:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:194
# code block
msgid "~~~\n"
"summary(DSM_HARV, maxsamp = ncell(DSM_HARV))\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:201
# code block
msgid "~~~\n"
"        HARV_dsmCrop\n"
"Min.          305.07\n"
"1st Qu.       345.59\n"
"Median        359.67\n"
"3rd Qu.       374.28\n"
"Max.          416.07\n"
"NA's            0.00\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:212
msgid "You may not see major differences in summary stats as `maxsamp` increases,\n"
"except with very large rasters."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:215
msgid "To visualise this data in R using `ggplot2`, we need to convert it to a\n"
"dataframe. We learned about dataframes in [an earlier\n"
"lesson](https://datacarpentry.org/r-intro-geospatial/04-data-structures-part2/index.html).\n"
"The `raster` package has an built-in function for conversion to a plotable dataframe."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:221
# code block
msgid "~~~\n"
"DSM_HARV_df <- as.data.frame(DSM_HARV, xy = TRUE)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:226
msgid "Now when we view the structure of our data, we will see a standard\n"
"dataframe format."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:230
# code block
msgid "~~~\n"
"str(DSM_HARV_df)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:237
# code block
msgid "~~~\n"
"'data.frame':	2319799 obs. of  3 variables:\n"
" $ x           : num  731454 731454 731456 731456 731458 ...\n"
" $ y           : num  4713838 4713838 4713838 4713838 4713838 ...\n"
" $ HARV_dsmCrop: num  409 408 407 407 409 ...\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:245
msgid "We can use `ggplot()` to plot this data. We will set the color scale to `scale_fill_viridis_c`\n"
"which is a color-blindness friendly color scale. We will also use the `coord_quickmap()` function to use an approximate Mercator projection for our plots. This approximation is suitable for small areas that are not too close to the poles. Other coordinate systems are available in ggplot2 if needed, you can learn about them at their help page `?coord_map`."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:249
# code block
msgid "~~~\n"
"ggplot() +\n"
"    geom_raster(data = DSM_HARV_df , aes(x = x, y = y, fill = HARV_dsmCrop)) +\n"
"    scale_fill_viridis_c() +\n"
"    coord_quickmap()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:257
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-01-ggplot-raster-1.png\" title=\"Raster plot with ggplot2 using the viridis color scale\" alt=\"Raster plot with ggplot2 using the viridis color scale\" width=\"612\" style=\"display: block; margin: auto;\" />\n"
"> ## Plotting Tip\n"
">\n"
"> More information about the Viridis palette used above at\n"
"> [R Viridis package documentation](https://cran.r-project.org/web/packages/viridis/vignettes/intro-to-viridis.html)."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:264
# blockquote, which can be cascaded
msgid "> ## Plotting Tip"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:265
# blockquote, which can be cascaded
msgid "> For faster, simpler plots, you can use the `plot` function from the `raster` package."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:266
# blockquote, which can be cascaded
msgid "> > ## Show plot"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:267
# blockquote, which can be cascaded
msgid "> >  See `?plot` for more arguments to customize the plot"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:268
#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:273
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:402
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:409
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:414
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:417
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:419
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:434
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:245
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:248
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:253
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:254
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:255
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:260
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:261
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:262
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:267
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:268
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:269
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:279
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:285
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:286
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:287
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:292
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:293
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:294
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:299
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:302
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:309
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:310
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:311
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:316
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:319
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:324
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:332
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:333
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:334
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:339
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:429
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:434
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:435
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:436
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:465
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:468
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:470
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:473
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:481
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:487
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:495
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:500
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:501
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:502
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:617
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:622
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:623
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:624
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:690
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:695
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:696
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:697
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:703
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:704
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:705
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:219
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:221
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:226
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:227
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:228
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:233
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:234
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:235
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:240
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:241
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:242
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:247
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:249
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:254
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:255
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:256
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:261
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:262
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:263
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:268
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:269
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:270
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:276
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:281
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:282
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:283
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:288
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:289
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:290
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:295
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:296
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:297
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:302
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:303
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:304
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:309
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:310
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:311
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:316
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:317
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:318
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:323
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:324
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:325
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:702
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:707
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:708
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:709
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:714
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:715
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:716
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:721
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:722
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:723
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:731
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:736
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:737
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:738
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:748
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:754
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:755
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:756
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:761
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:762
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:763
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:774
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:775
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:776
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:305
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:306
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:311
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:312
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:313
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:318
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:319
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:320
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:325
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:326
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:327
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:332
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:333
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:334
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:343
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:344
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:345
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:638
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:639
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:649
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:650
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:651
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:656
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:657
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:658
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:664
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:665
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:666
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:671
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:672
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:673
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:683
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:684
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:685
# blockquote, which can be cascaded
msgid "> > "
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:269
#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:271
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:403
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:432
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:249
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:251
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:256
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:258
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:263
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:265
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:270
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:272
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:280
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:283
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:288
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:290
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:295
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:297
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:303
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:307
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:312
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:314
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:320
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:330
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:335
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:337
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:430
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:432
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:437
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:463
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:474
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:476
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:482
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:485
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:496
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:498
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:503
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:529
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:618
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:620
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:625
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:687
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:691
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:693
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:698
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:701
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:706
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:715
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:222
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:224
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:229
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:231
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:236
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:238
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:243
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:245
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:250
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:252
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:257
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:259
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:264
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:266
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:271
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:273
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:277
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:279
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:284
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:286
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:291
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:293
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:298
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:300
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:305
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:307
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:312
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:314
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:319
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:321
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:326
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:328
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:703
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:705
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:710
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:712
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:717
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:719
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:724
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:726
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:732
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:734
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:739
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:741
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:749
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:752
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:757
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:759
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:764
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:772
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:777
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:779
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:307
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:309
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:314
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:316
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:321
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:323
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:328
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:330
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:335
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:341
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:346
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:348
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:640
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:647
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:652
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:654
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:659
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:662
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:667
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:669
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:674
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:681
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:686
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:688
# blockquote, which can be cascaded
msgid "> > ~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:270
# blockquote, which can be cascaded
msgid "> > plot(DSM_HARV)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:272
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:433
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:252
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:266
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:284
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:308
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:331
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:433
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:477
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:486
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:499
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:621
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:694
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:225
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:239
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:253
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:267
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:280
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:294
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:308
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:322
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:706
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:720
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:735
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:753
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:773
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:310
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:324
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:342
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:648
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:663
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:682
# blockquote, which can be cascaded
msgid "> > {: .language-r}"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:274
# blockquote, which can be cascaded
msgid "> > <img src=\"{{ site.baseurl }}/fig/rmd-01-unnamed-chunk-5-1.png\" title=\"plot of chunk unnamed-chunk-5\" alt=\"plot of chunk unnamed-chunk-5\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:275
#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:312
#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:511
#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:638
#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:279
#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:470
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:169
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:290
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:436
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:445
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:131
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:341
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:583
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:105
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:166
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:531
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:719
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:332
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:206
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:378
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:433
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:589
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:781
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:843
#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:280
#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:317
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:399
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:516
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:350
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:690
#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:256
#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:573
#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:145
#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:378
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:435
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:470
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:517
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:682
# SC/DC Template label
msgid "> {: .solution}"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:278
msgid "This map shows the elevation of our study site in Harvard Forest. From the\n"
"legend, we can see that the maximum elevation is ~400, but we can't tell whether\n"
"this is 400 feet or 400 meters because the legend doesn't show us the units. We\n"
"can look at the metadata of our object to see what the units are. Much of the\n"
"metadata that we're interested in is part of the CRS. We introduced the\n"
"concept of a CRS in [an earlier\n"
"lesson](https://datacarpentry.org/organization-geospatial/03-crs)."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:286
msgid "Now we will see how features of the CRS appear in our data file and what\n"
"meanings they have."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:289
# header
msgid "### View Raster Coordinate Reference System (CRS) in R"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:290
msgid "We can view the CRS string associated with our R object using the`crs()`\n"
"function."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:294
# code block
msgid "~~~\n"
"crs(DSM_HARV)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:301
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:221
# code block
msgid "~~~\n"
"CRS arguments:\n"
" +proj=utm +zone=18 +datum=WGS84 +units=m +no_defs \n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:307
#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:472
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:72
#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:120
# blockquote, which can be cascaded
msgid "> ## Challenge"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:308
# blockquote, which can be cascaded
msgid "> What units are our data in?"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:309
msgid ">\n"
"> > ## Answers\n"
"> > `+units=m` tells us that our data is in meters."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:313
#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:639
#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:280
#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:471
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:170
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:291
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:446
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:132
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:342
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:584
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:106
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:167
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:532
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:720
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:333
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:207
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:379
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:434
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:590
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:782
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:844
#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:281
#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:318
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:400
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:517
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:351
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:691
#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:257
#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:574
#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:146
#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:379
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:436
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:471
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:518
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:683
# SC/DC Template label
msgid "{: .challenge}"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:315
# header
msgid "## Understanding CRS in Proj4 Format"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:316
msgid "The CRS for our data is given to us by R in `proj4` format. Let's break down\n"
"the pieces of `proj4` string. The string contains all of the individual CRS\n"
"elements that R or another GIS might need. Each element is specified with a\n"
"`+` sign, similar to how a `.csv` file is delimited or broken up by a `,`. After\n"
"each `+` we see the CRS element being defined. For example projection (`proj=`)\n"
"and datum (`datum=`)."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:323
# header
msgid "### UTM Proj4 String"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:324
msgid "Our projection string for `DSM_HARV` specifies the UTM projection as follows:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:326
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:213
msgid "`+proj=utm +zone=18 +datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0`"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:328
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:215
# unordered list
msgid "* **proj=utm:** the projection is UTM, UTM has several zones."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:329
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:216
# unordered list
msgid "* **zone=18:** the zone is 18"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:330
# unordered list
msgid "* **datum=WGS84:** the datum is WGS84 (the datum refers to the  0,0 reference for"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:331
msgid "the coordinate system used in the projection)\n"
"* **units=m:** the units for the coordinates are in meters\n"
"* **ellps=WGS84:** the ellipsoid (how the earth's  roundness is calculated) for\n"
"the data is WGS84"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:336
msgid "Note that the zone is unique to the UTM projection. Not all CRSs will have a\n"
"zone. Image source: Chrismurf at English Wikipedia, via [Wikimedia Commons](https://en.wikipedia.org/wiki/Universal_Transverse_Mercator_coordinate_system#/media/File:Utm-zones-USA.svg) (CC-BY)."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:339
msgid "![The UTM zones across the continental United States. From: https://upload.wikimedia.org/wikipedia/commons/8/8d/Utm-zones-USA.svg]({{ site.baseurl }}/images/Utm-zones-USA.svg)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:341
# header
msgid "## Calculate Raster Min and Max Values"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:343
msgid "It is useful to know the minimum or maximum values of a raster dataset. In this\n"
"case, given we are working with elevation data, these values represent the\n"
"min/max elevation range at our site."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:347
msgid "Raster statistics are often calculated and embedded in a GeoTIFF for us. We\n"
"can view these values:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:351
# code block
msgid "~~~\n"
"minValue(DSM_HARV)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:358
# code block
msgid "~~~\n"
"[1] 305.07\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:365
# code block
msgid "~~~\n"
"maxValue(DSM_HARV)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:372
# code block
msgid "~~~\n"
"[1] 416.07\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:377
# blockquote, which can be cascaded
msgid "> ## Data Tip - Set min and max values"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:378
# blockquote, which can be cascaded
msgid "> If the minimum and maximum values haven't already been"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:379
# blockquote, which can be cascaded
msgid "> calculated, we can calculate them using the"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:380
# blockquote, which can be cascaded
msgid "> `setMinMax()` function."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:381
msgid ">\n"
"> \n"
"> ~~~\n"
"> DSM_HARV <- setMinMax(DSM_HARV)\n"
"> ~~~\n"
"> {: .language-r}"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:389
msgid "We can see that the elevation at our site ranges from 305.0700073m to\n"
"416.0699768m."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:392
# header
msgid "## Raster Bands"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:393
msgid "The Digital Surface Model object (`DSM_HARV`) that we've been working with is a\n"
"single band raster. This means that there is only one dataset stored in the\n"
"raster: surface elevation in meters for one time period."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:397
msgid "![Multi-band raster image]({{ site.baseurl }}/images/dc-spatial-raster/single_multi_raster.png)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:399
msgid "A raster dataset can contain one or more bands. We can use the `raster()`\n"
"function to import one single band from a single or multi-band raster. We can\n"
"view the number of bands in a raster using the `nlayers()` function."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:404
# code block
msgid "~~~\n"
"nlayers(DSM_HARV)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:411
# code block
msgid "~~~\n"
"[1] 1\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:416
msgid "However, raster data can also be multi-band, meaning that one raster file\n"
"contains data for more than one variable or time period for each cell. By\n"
"default the `raster()` function only imports the first band in a raster\n"
"regardless of whether it has one or more bands. Jump to a later episode in\n"
"this series for information on working with multi-band rasters:\n"
"[Work with Multi-band Rasters in R]({{ site.baseurl }}/05-raster-multi-band-in-r/)."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:423
# header
msgid "## Dealing with Missing Data"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:425
msgid "Raster data often has a `NoDataValue` associated with it. This is a value\n"
"assigned to pixels where data is missing or no data were collected."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:428
msgid "By default the shape of a raster is always rectangular. So if we have  a dataset\n"
"that has a shape that isn't rectangular, some pixels at the edge of the raster\n"
"will have `NoDataValue`s. This often happens when the data were collected by an\n"
"airplane which only flew over some part of a defined region."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:433
msgid "In the image below, the pixels that are black have `NoDataValue`s. The camera\n"
"did not collect data in these areas."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:436
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-01-demonstrate-no-data-black-ggplot-1.png\" title=\"plot of chunk demonstrate-no-data-black-ggplot\" alt=\"plot of chunk demonstrate-no-data-black-ggplot\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:438
msgid "In the next image, the black edges have been assigned `NoDataValue`. R doesn't\n"
"render pixels that contain a specified `NoDataValue`. R assigns missing data\n"
"with the `NoDataValue` as `NA`."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:442
msgid "The difference here shows up as ragged edges on the plot, rather than black\n"
"spaces where there is no data."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:445
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-01-demonstrate-no-data-ggplot-1.png\" title=\"plot of chunk demonstrate-no-data-ggplot\" alt=\"plot of chunk demonstrate-no-data-ggplot\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:447
msgid "If your raster already has `NA` values set correctly but you aren't sure where they are, you can deliberately plot them in a particular colour. This can be useful when checking a dataset's coverage. For instance, sometimes data can be missing where a sensor could not 'see' its target data, and you may wish to locate that missing data and fill it in."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:449
msgid "To highlight `NA` values in ggplot, alter the `scale_fill_*()` layer to contain a colour instruction for `NA` values, like `scale_fill_viridis_c(na.value = 'deeppink')`"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:451
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-01-napink-1.png\" title=\"plot of chunk napink\" alt=\"plot of chunk napink\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:453
msgid "The value that is conventionally used to take note of missing data (the\n"
"`NoDataValue` value) varies by the raster data type. For floating-point rasters,\n"
"the figure `-3.4e+38` is a common default, and for integers, `-9999` is\n"
"common. Some disciplines have specific conventions that vary from these\n"
"common values."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:459
msgid "In some cases, other `NA` values may be more appropriate. An `NA` value should\n"
"be a) outside the range of valid values, and b) a value that fits the data type\n"
"in use. For instance, if your data ranges continuously from -20 to 100, 0 is\n"
"not an acceptable `NA` value! Or, for categories that number 1-15, 0 might be\n"
"fine for `NA`, but using -.000003 will force you to save the GeoTIFF on disk\n"
"as a floating point raster, resulting in a bigger file."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:466
msgid "If we are lucky, our GeoTIFF file has a tag that tells us what is the\n"
"`NoDataValue`. If we are less lucky, we can find that information in the\n"
"raster's metadata. If a `NoDataValue` was stored in the GeoTIFF tag, when R\n"
"opens up the raster, it will assign each instance of the value to `NA`. Values\n"
"of `NA` will be ignored by R as demonstrated above."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:473
# blockquote, which can be cascaded
msgid "> Use the output from the `GDALinfo()` function to find out what `NoDataValue` is used for our `DSM_HARV` dataset."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:474
msgid ">\n"
"> > ## Answers\n"
"> >\n"
"> > \n"
"> > ~~~\n"
"> > GDALinfo(\"data/NEON-DS-Airborne-Remote-Sensing/HARV/DSM/HARV_dsmCrop.tif\")\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > rows        1367 \n"
"> > columns     1697 \n"
"> > bands       1 \n"
"> > lower left origin.x        731453 \n"
"> > lower left origin.y        4712471 \n"
"> > res.x       1 \n"
"> > res.y       1 \n"
"> > ysign       -1 \n"
"> > oblique.x   0 \n"
"> > oblique.y   0 \n"
"> > driver      GTiff \n"
"> > projection  +proj=utm +zone=18 +datum=WGS84 +units=m +no_defs \n"
"> > file        data/NEON-DS-Airborne-Remote-Sensing/HARV/DSM/HARV_dsmCrop.tif \n"
"> > apparent band summary:\n"
"> >    GDType hasNoDataValue NoDataValue blockSize1 blockSize2\n"
"> > 1 Float64           TRUE       -9999          1       1697\n"
"> > apparent band statistics:\n"
"> >     Bmin   Bmax    Bmean      Bsd\n"
"> > 1 305.07 416.07 359.8531 17.83169\n"
"> > Metadata:\n"
"> > AREA_OR_POINT=Area \n"
"> > ~~~\n"
"> > {: .output}\n"
"> >\n"
"> > `NoDataValue` are encoded as -9999."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:514
# header
msgid "## Bad Data Values in Rasters"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:516
msgid "Bad data values are different from `NoDataValue`s. Bad data values are values\n"
"that fall outside of the applicable range of a dataset."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:519
msgid "Examples of Bad Data Values:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:521
# unordered list
msgid "* The normalized difference vegetation index (NDVI), which is a measure of"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:522
msgid "greenness, has a valid range of -1 to 1. Any value outside of that range would\n"
"be considered a \"bad\" or miscalculated value.\n"
"* Reflectance data in an image will often range from 0-1 or 0-10,000 depending\n"
"upon how the data are scaled. Thus a value greater than 1 or greater than 10,000\n"
"is likely caused by an error in either data collection or processing."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:528
# header
msgid "### Find Bad Data Values"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:529
msgid "Sometimes a raster's metadata will tell us the range of expected values for a\n"
"raster. Values outside of this range are suspect and we need to consider that\n"
"when we analyze the data. Sometimes, we need to use some common sense and\n"
"scientific insight as we examine the data - just as we would for field data to\n"
"identify questionable values."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:535
msgid "Plotting data with appropriate highlighting can help reveal patterns in bad\n"
"values and may suggest a solution. Below, reclassification is used to highlight\n"
"elevation values over 400m with a contrasting colour."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:539
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-01-demo-bad-data-highlighting-1.png\" title=\"plot of chunk demo-bad-data-highlighting\" alt=\"plot of chunk demo-bad-data-highlighting\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:541
# header
msgid "## Create A Histogram of Raster Values"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:543
msgid "We can explore the distribution of values contained within our raster using the\n"
"`geom_histogram()` function which produces a histogram. Histograms are often\n"
"useful in identifying outliers and bad data values in our raster data."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:548
# code block
msgid "~~~\n"
"ggplot() +\n"
"    geom_histogram(data = DSM_HARV_df, aes(HARV_dsmCrop))\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:556
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:217
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:316
#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:356
# code block
msgid "~~~\n"
"`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:561
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-01-view-raster-histogram-1.png\" title=\"plot of chunk view-raster-histogram\" alt=\"plot of chunk view-raster-histogram\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:563
msgid "Notice that a warning message is thrown when R creates the histogram."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:565
msgid "`stat_bin()` using `bins = 30`. Pick better value with `binwidth`."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:567
msgid "This warning is caused by a default setting in `geom_histogram` enforcing that there are\n"
"30 bins for the data. We can define the number of bins we want in the histogram\n"
"by using the `bins` value in the `geom_histogram()` function."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:573
# code block
msgid "~~~\n"
"ggplot() +\n"
"    geom_histogram(data = DSM_HARV_df, aes(HARV_dsmCrop), bins = 40)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:579
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-01-view-raster-histogram2-1.png\" title=\"plot of chunk view-raster-histogram2\" alt=\"plot of chunk view-raster-histogram2\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:581
msgid "Note that the shape of this histogram looks similar to the previous one that\n"
"was created using the default of 30 bins. The distribution of elevation values\n"
"for our `Digital Surface Model (DSM)` looks reasonable. It is likely there are\n"
"no bad data values in this particular raster."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:586
# blockquote, which can be cascaded
msgid "> ## Challenge: Explore Raster Metadata"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:587
msgid ">\n"
"> Use `GDALinfo()` to determine the following about the `NEON-DS-Airborne-Remote-Sensing/HARV/DSM/HARV_DSMhill.tif` file:\n"
">\n"
"> 1. Does this file have the same CRS as `DSM_HARV`?\n"
"> 2. What is the `NoDataValue`?\n"
"> 3. What is resolution of the raster data?\n"
"> 4. How large would a 5x5 pixel area be on the Earth's surface?\n"
"> 5. Is the file a multi- or single-band raster?\n"
">\n"
"> Notice: this file is a hillshade. We will learn about hillshades in the [Working with\n"
"> Multi-band Rasters in R]({{ site.baseurl }}/05-raster-multi-band-in-r/)  episode.\n"
"> >\n"
"> > ## Answers\n"
"> >\n"
"> > \n"
"> > ~~~\n"
"> > GDALinfo(\"data/NEON-DS-Airborne-Remote-Sensing/HARV/DSM/HARV_DSMhill.tif\")\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > rows        1367 \n"
"> > columns     1697 \n"
"> > bands       1 \n"
"> > lower left origin.x        731453 \n"
"> > lower left origin.y        4712471 \n"
"> > res.x       1 \n"
"> > res.y       1 \n"
"> > ysign       -1 \n"
"> > oblique.x   0 \n"
"> > oblique.y   0 \n"
"> > driver      GTiff \n"
"> > projection  +proj=utm +zone=18 +datum=WGS84 +units=m +no_defs \n"
"> > file        data/NEON-DS-Airborne-Remote-Sensing/HARV/DSM/HARV_DSMhill.tif \n"
"> > apparent band summary:\n"
"> >    GDType hasNoDataValue NoDataValue blockSize1 blockSize2\n"
"> > 1 Float64           TRUE       -9999          1       1697\n"
"> > apparent band statistics:\n"
"> >         Bmin      Bmax     Bmean       Bsd\n"
"> > 1 -0.7136298 0.9999997 0.3125525 0.4812939\n"
"> > Metadata:\n"
"> > AREA_OR_POINT=Area \n"
"> > ~~~\n"
"> > {: .output}\n"
"> > 1. If this file has the same CRS as DSM_HARV?  Yes: UTM Zone 18, WGS84, meters.\n"
"> > 2. What format `NoDataValues` take?  -9999\n"
"> > 3. The resolution of the raster data? 1x1\n"
"> > 4. How large a 5x5 pixel area would be? 5mx5m How? We are given resolution of 1x1 and units in meters, therefore resolution of 5x5 means 5x5m.\n"
"> > 5. Is the file a multi- or single-band raster?  Single."
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:641
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:48
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:551
# blockquote, which can be cascaded
msgid "> ## More Resources"
msgstr ""

#: r-raster-vector-geospatial/_episodes/01-raster-structure.md:642
# blockquote, which can be cascaded
msgid "> * [Read more about the `raster` package in R.](http://cran.r-project.org/package=raster)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:1
# Front Matter
msgid "---\n"
"# Please do not edit this file directly; it is auto generated.\n"
"# Instead, please edit 02-raster-plot.md in _episodes_rmd/\n"
"title: \"Plot Raster Data in R\"\n"
"teaching: 40\n"
"exercises: 20\n"
"questions:\n"
"- \"How can I create categorized or customized maps of raster data?\"\n"
"- \"How can I customize the color scheme of a raster image?\"\n"
"- \"How can I layer raster data in a single image?\"\n"
"objectives:\n"
"- \"Build customized plots for a single band raster using the `ggplot2` package.\"\n"
"- \"Layer a raster dataset on top of a hillshade to create an elegant basemap.\"\n"
"keypoints:\n"
"- \"Continuous data ranges can be grouped into categories using `mutate()` and `cut()`.\"\n"
"- \"Use built-in `terrain.colors()` or set your preferred color scheme manually.\"\n"
"- \"Layer rasters on top of one another by using the `alpha` aesthetic.\"\n"
"source: Rmd\n"
"---"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:27
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:21
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:26
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:24
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:28
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:47
#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:50
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:25
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:55
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:62
#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:27
#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:58
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:58
# blockquote, which can be cascaded
msgid "> ## Things You’ll Need To Complete This Episode"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:28
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:22
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:27
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:25
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:29
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:48
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:26
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:56
#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:28
#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:59
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:59
# blockquote, which can be cascaded
msgid "> See the [lesson homepage]({{ site.baseurl }}) for detailed information about the software,"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:29
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:23
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:28
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:26
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:30
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:49
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:27
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:57
#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:29
#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:60
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:60
# blockquote, which can be cascaded
msgid "> data, and other prerequisites you will need to work through the examples in this episode."
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:32
# header
msgid "## Plot Raster Data in R"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:33
msgid "This episode covers how to plot a raster in R using the `ggplot2`\n"
"package with customized coloring schemes. \n"
"It also covers how to layer a raster on top of a hillshade to produce\n"
"an eloquent map. We will continue working with the Digital Surface Model (DSM) raster\n"
"for the NEON Harvard Forest Field Site. "
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:39
# header
msgid "## Plotting Data Using Breaks"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:40
msgid "In the previous episode, we viewed our data using a continuous color ramp. For \n"
"clarity and visibility of the plot, we may prefer to view the data \"symbolized\" or colored according to ranges of values. This is comparable to a \"classified\"\n"
"map. To do this, we need to tell `ggplot` how many groups to break our data into, and\n"
"where those breaks should be. To make these decisions, it is useful to first explore the distribution of the data using a bar plot. To begin with, we will use `dplyr`'s `mutate()` function combined with `cut()` to split the data into 3 bins."
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:46
# code block
msgid "~~~\n"
"DSM_HARV_df <- DSM_HARV_df %>%\n"
"                mutate(fct_elevation = cut(HARV_dsmCrop, breaks = 3))\n"
"\n"
"ggplot() +\n"
"    geom_bar(data = DSM_HARV_df, aes(fct_elevation))\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:55
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-02-histogram-breaks-ggplot-1.png\" title=\"plot of chunk histogram-breaks-ggplot\" alt=\"plot of chunk histogram-breaks-ggplot\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:57
msgid "If we want to know the cutoff values for the groups, we can ask for the unique values \n"
"of `fct_elevation`:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:60
# code block
msgid "~~~\n"
"unique(DSM_HARV_df$fct_elevation)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:67
# code block
msgid "~~~\n"
"[1] (379,416] (342,379] (305,342]\n"
"Levels: (305,342] (342,379] (379,416]\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:73
msgid "And we can get the count of values in each group using `dplyr`'s \n"
"`group_by()` and `count()` functions:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:77
# code block
msgid "~~~\n"
"DSM_HARV_df %>%\n"
"        group_by(fct_elevation) %>%\n"
"        count()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:86
# code block
msgid "~~~\n"
"# A tibble: 3 x 2\n"
"# Groups:   fct_elevation [3]\n"
"  fct_elevation       n\n"
"  <fct>           <int>\n"
"1 (305,342]      418891\n"
"2 (342,379]     1530073\n"
"3 (379,416]      370835\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:97
msgid "We might prefer to customize the cutoff values for these groups.\n"
"Lets round the cutoff values so that we have groups for the ranges of \n"
"301–350 m, 351–400 m, and 401–450 m.\n"
"To implement this we will give `mutate()` a numeric vector of break points instead \n"
"of the number of breaks we want."
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:104
# code block
msgid "~~~\n"
"custom_bins <- c(300, 350, 400, 450)\n"
"\n"
"DSM_HARV_df <- DSM_HARV_df %>%\n"
"  mutate(fct_elevation_2 = cut(HARV_dsmCrop, breaks = custom_bins))\n"
"\n"
"unique(DSM_HARV_df$fct_elevation_2)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:116
# code block
msgid "~~~\n"
"[1] (400,450] (350,400] (300,350]\n"
"Levels: (300,350] (350,400] (400,450]\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:122
#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:349
# blockquote, which can be cascaded
msgid "> ## Data Tips"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:123
# blockquote, which can be cascaded
msgid "> Note that when we assign break values a set of 4 values will result in 3 bins of data."
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:124
msgid ">\n"
"> The bin intervals are shown using `(` to mean exclusive and `]` to mean inclusive. For example: `(305, 342]` means \"from 306 through 342\"."
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:128
msgid "And now we can plot our bar plot again, using the new groups:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:131
# code block
msgid "~~~\n"
"ggplot() +\n"
"  geom_bar(data = DSM_HARV_df, aes(fct_elevation_2))\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:137
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-02-histogram-custom-breaks-1.png\" title=\"plot of chunk histogram-custom-breaks\" alt=\"plot of chunk histogram-custom-breaks\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:139
msgid "And we can get the count of values in each group in the same way we did before:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:142
# code block
msgid "~~~\n"
"DSM_HARV_df %>%\n"
"  group_by(fct_elevation_2) %>%\n"
"  count()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:151
# code block
msgid "~~~\n"
"# A tibble: 3 x 2\n"
"# Groups:   fct_elevation_2 [3]\n"
"  fct_elevation_2       n\n"
"  <fct>             <int>\n"
"1 (300,350]        741815\n"
"2 (350,400]       1567316\n"
"3 (400,450]         10668\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:162
msgid "We can use those groups to plot our raster data, with each group being a different color:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:165
# code block
msgid "~~~\n"
"ggplot() +\n"
"  geom_raster(data = DSM_HARV_df , aes(x = x, y = y, fill = fct_elevation_2)) + \n"
"  coord_quickmap()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:172
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-02-raster-with-breaks-1.png\" title=\"plot of chunk raster-with-breaks\" alt=\"plot of chunk raster-with-breaks\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:174
msgid "The plot above uses the default colors inside `ggplot` for raster objects. \n"
"We can specify our own colors to make the plot look a little nicer.\n"
"R has a built in set of colors for plotting terrain, which are built in\n"
"to the `terrain.colors()` function.\n"
"Since we have three bins, we want to create a 3-color palette:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:181
# code block
msgid "~~~\n"
"terrain.colors(3)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:188
# code block
msgid "~~~\n"
"[1] \"#00A600\" \"#ECB176\" \"#F2F2F2\"\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:193
msgid "The `terrain.colors()` function returns *hex colors* - \n"
" each of these character strings represents a color.\n"
"To use these in our map, we pass them across using the \n"
" `scale_fill_manual()` function."
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:199
# code block
msgid "~~~\n"
"ggplot() +\n"
" geom_raster(data = DSM_HARV_df , aes(x = x, y = y,\n"
"                                      fill = fct_elevation_2)) + \n"
"    scale_fill_manual(values = terrain.colors(3)) + \n"
"    coord_quickmap()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:208
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-02-ggplot-breaks-customcolors-1.png\" title=\"plot of chunk ggplot-breaks-customcolors\" alt=\"plot of chunk ggplot-breaks-customcolors\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:210
# header
msgid "### More Plot Formatting"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:212
msgid "If we need to create multiple plots using the same color palette, we can create\n"
"an R object (`my_col`) for the set of colors that we want to use. We can then\n"
"quickly change the palette across all plots by modifying the `my_col`\n"
"object, rather than each individual plot."
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:217
msgid "We can label the x- and y-axes of our plot too using `xlab` and `ylab`.\n"
"We can also give the legend a more meaningful title by passing a value \n"
"to the `name` argument of the `scale_fill_manual()` function."
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:222
# code block
msgid "~~~\n"
"my_col <- terrain.colors(3)\n"
"\n"
"ggplot() +\n"
" geom_raster(data = DSM_HARV_df , aes(x = x, y = y,\n"
"                                      fill = fct_elevation_2)) + \n"
"    scale_fill_manual(values = my_col, name = \"Elevation\") + \n"
"    coord_quickmap()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:233
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-02-add-ggplot-labels-1.png\" title=\"plot of chunk add-ggplot-labels\" alt=\"plot of chunk add-ggplot-labels\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:235
msgid "Or we can also turn off the labels of both axes by passing `element_blank()` to\n"
"the relevant part of the `theme()` function."
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:239
# code block
msgid "~~~\n"
"ggplot() +\n"
" geom_raster(data = DSM_HARV_df , aes(x = x, y = y,\n"
"                                      fill = fct_elevation_2)) + \n"
"    scale_fill_manual(values = my_col, name = \"Elevation\") +\n"
"    theme(axis.title = element_blank()) + \n"
"    coord_quickmap()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:249
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-02-turn-off-axes-1.png\" title=\"plot of chunk turn-off-axes\" alt=\"plot of chunk turn-off-axes\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:251
# blockquote, which can be cascaded
msgid "> ## Challenge: Plot Using Custom Breaks"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:252
msgid ">\n"
"> Create a plot of the Harvard Forest Digital Surface Model (DSM) that has:\n"
">\n"
"> 1. Six classified ranges of values (break points) that are evenly divided among the range of pixel values.\n"
"> 2. Axis labels.\n"
"> 3. A plot title.\n"
">\n"
"> > ## Answers\n"
"> > \n"
"> > ~~~\n"
"> > DSM_HARV_df <- DSM_HARV_df  %>%\n"
"> >                mutate(fct_elevation_6 = cut(HARV_dsmCrop, breaks = 6)) \n"
"> > \n"
"> >  my_col <- terrain.colors(6)\n"
"> > \n"
"> > ggplot() +\n"
"> >     geom_raster(data = DSM_HARV_df , aes(x = x, y = y,\n"
"> >                                       fill = fct_elevation_6)) + \n"
"> >     scale_fill_manual(values = my_col, name = \"Elevation\") + \n"
"> >     ggtitle(\"Classified Elevation Map - NEON Harvard Forest Field Site\") +\n"
"> >     xlab(\"UTM Westing Coordinate (m)\") +\n"
"> >     ylab(\"UTM Northing Coordinate (m)\") + \n"
"> >     coord_quickmap()\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > <img src=\"{{ site.baseurl }}/fig/rmd-02-challenge-code-plotting-1.png\" title=\"plot of chunk challenge-code-plotting\" alt=\"plot of chunk challenge-code-plotting\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:282
# header
msgid "## Layering Rasters"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:284
msgid "We can layer a raster on top of a hillshade raster for the same area, and use a\n"
"transparency factor to create a 3-dimensional shaded effect. A\n"
"hillshade is a raster that maps the shadows and texture that you would see from\n"
"above when viewing terrain.\n"
"We will add a custom color, making the plot grey. "
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:290
msgid "First we need to read in our DSM hillshade data and view the structure:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:293
# code block
msgid "~~~\n"
"DSM_hill_HARV <-\n"
"  raster(\"data/NEON-DS-Airborne-Remote-Sensing/HARV/DSM/HARV_DSMhill.tif\")\n"
"\n"
"DSM_hill_HARV\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:303
# code block
msgid "~~~\n"
"class      : RasterLayer \n"
"dimensions : 1367, 1697, 2319799  (nrow, ncol, ncell)\n"
"resolution : 1, 1  (x, y)\n"
"extent     : 731453, 733150, 4712471, 4713838  (xmin, xmax, ymin, ymax)\n"
"crs        : +proj=utm +zone=18 +datum=WGS84 +units=m +no_defs \n"
"source     : /home/travis/build/datacarpentry/r-raster-vector-geospatial/_episodes_rmd/data/NEON-DS-Airborne-Remote-Sensing/HARV/DSM/HARV_DSMhill.tif \n"
"names      : HARV_DSMhill \n"
"values     : -0.7136298, 0.9999997  (min, max)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:315
msgid "Next we convert it to a dataframe, so that we can plot it using `ggplot2`:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:318
# code block
msgid "~~~\n"
"DSM_hill_HARV_df <- as.data.frame(DSM_hill_HARV, xy = TRUE) \n"
"\n"
"str(DSM_hill_HARV_df)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:327
# code block
msgid "~~~\n"
"'data.frame':	2319799 obs. of  3 variables:\n"
" $ x           : num  731454 731454 731456 731456 731458 ...\n"
" $ y           : num  4713838 4713838 4713838 4713838 4713838 ...\n"
" $ HARV_DSMhill: num  NA NA NA NA NA NA NA NA NA NA ...\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:335
msgid "Now we can plot the hillshade data:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:338
# code block
msgid "~~~\n"
"ggplot() +\n"
"  geom_raster(data = DSM_hill_HARV_df,\n"
"              aes(x = x, y = y, alpha = HARV_DSMhill)) + \n"
"  scale_alpha(range =  c(0.15, 0.65), guide = \"none\") + \n"
"  coord_quickmap()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:347
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-02-raster-hillshade-1.png\" title=\"plot of chunk raster-hillshade\" alt=\"plot of chunk raster-hillshade\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:350
# blockquote, which can be cascaded
msgid "> Turn off, or hide, the legend on a plot by adding `guide = \"none\"` "
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:351
# blockquote, which can be cascaded
msgid "> to a `scale_something()` function or by setting"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:352
# blockquote, which can be cascaded
msgid "> `theme(legend.position = \"none\")`."
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:353
#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:380
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:283
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:399
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:235
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:237
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:243
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:451
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:159
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:407
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:413
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:423
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:605
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:608
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:612
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:203
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:207
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:209
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:211
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:213
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:215
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:217
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:330
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:530
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:686
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:692
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:696
#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:179
#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:185
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:300
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:303
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:628
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:634
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:636
#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:83
#: r-raster-vector-geospatial/index.md:31
# blockquote, which can be cascaded
msgid "> "
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:354
# blockquote, which can be cascaded
msgid "> The alpha value determines how transparent the colors will be (0 being"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:355
# blockquote, which can be cascaded
msgid "> transparent, 1 being opaque)."
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:358
msgid "We can layer another raster on top of our hillshade by adding another call to \n"
"the `geom_raster()` function. Let's overlay `DSM_HARV` on top of the `hill_HARV`."
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:362
# code block
msgid "~~~\n"
"ggplot() +\n"
"  geom_raster(data = DSM_HARV_df , \n"
"              aes(x = x, y = y, \n"
"                  fill = HARV_dsmCrop)) + \n"
"  geom_raster(data = DSM_hill_HARV_df, \n"
"              aes(x = x, y = y, \n"
"                  alpha = HARV_DSMhill)) +  \n"
"  scale_fill_viridis_c() +  \n"
"  scale_alpha(range = c(0.15, 0.65), guide = \"none\") +  \n"
"  ggtitle(\"Elevation with hillshade\") +\n"
"  coord_quickmap()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:377
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-02-overlay-hillshade-1.png\" title=\"plot of chunk overlay-hillshade\" alt=\"plot of chunk overlay-hillshade\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:379
# blockquote, which can be cascaded
msgid "> ## Challenge: Create DTM & DSM for SJER"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:381
# blockquote, which can be cascaded
msgid "> Use the files in the `NEON_RemoteSensing/SJER/` directory to create a Digital"
msgstr ""

#: r-raster-vector-geospatial/_episodes/02-raster-plot.md:382
msgid "Terrain Model map and Digital Surface Model map of the San Joaquin Experimental\n"
"Range field site.\n"
"> \n"
"> Make sure to:\n"
"> \n"
"> * include hillshade in the maps,\n"
"> * label axes on the DSM map and exclude them from the DTM map,\n"
"> * include a title for each map,\n"
"> * experiment with various alpha values and color palettes to represent the\n"
" data.\n"
">\n"
"> > ## Answers\n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > # CREATE DSM MAPS\n"
"> > \n"
"> > # import DSM data\n"
"> > DSM_SJER <- raster(\"data/NEON-DS-Airborne-Remote-Sensing/SJER/DSM/SJER_dsmCrop.tif\")\n"
"> > # convert to a df for plotting\n"
"> > DSM_SJER_df <- as.data.frame(DSM_SJER, xy = TRUE)\n"
"> > \n"
"> > # import DSM hillshade\n"
"> > DSM_hill_SJER <- raster(\"data/NEON-DS-Airborne-Remote-Sensing/SJER/DSM/SJER_dsmHill.tif\")\n"
"> > # convert to a df for plotting\n"
"> > DSM_hill_SJER_df <- as.data.frame(DSM_hill_SJER, xy = TRUE)\n"
"> > \n"
"> > # Build Plot\n"
"> > ggplot() +\n"
"> >     geom_raster(data = DSM_SJER_df , \n"
"> >                 aes(x = x, y = y, \n"
"> >                      fill = SJER_dsmCrop,\n"
"> >                      alpha = 0.8)\n"
"> >                 ) + \n"
"> >     geom_raster(data = DSM_hill_SJER_df, \n"
"> >                 aes(x = x, y = y, \n"
"> >                   alpha = SJER_dsmHill)\n"
"> >                 ) +\n"
"> >     scale_fill_viridis_c() +\n"
"> >     guides(fill = guide_colorbar()) +\n"
"> >     scale_alpha(range = c(0.4, 0.7), guide = \"none\") +\n"
"> >     # remove grey background and grid lines\n"
"> >     theme_bw() + \n"
"> >     theme(panel.grid.major = element_blank(), \n"
"> >           panel.grid.minor = element_blank()) +\n"
"> >     xlab(\"UTM Westing Coordinate (m)\") +\n"
"> >     ylab(\"UTM Northing Coordinate (m)\") +\n"
"> >     ggtitle(\"DSM with Hillshade\") +\n"
"> >     coord_quickmap()\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > <img src=\"{{ site.baseurl }}/fig/rmd-02-challenge-hillshade-layering-1.png\" title=\"plot of chunk challenge-hillshade-layering\" alt=\"plot of chunk challenge-hillshade-layering\" width=\"612\" style=\"display: block; margin: auto;\" />\n"
"> > \n"
"> > ~~~\n"
"> > # CREATE DTM MAP\n"
"> > # import DTM\n"
"> > DTM_SJER <- raster(\"data/NEON-DS-Airborne-Remote-Sensing/SJER/DTM/SJER_dtmCrop.tif\")\n"
"> > DTM_SJER_df <- as.data.frame(DTM_SJER, xy = TRUE)\n"
"> > \n"
"> > # DTM Hillshade\n"
"> > DTM_hill_SJER <- raster(\"data/NEON-DS-Airborne-Remote-Sensing/SJER/DTM/SJER_dtmHill.tif\")\n"
"> > DTM_hill_SJER_df <- as.data.frame(DTM_hill_SJER, xy = TRUE)\n"
"> > \n"
"> > ggplot() +\n"
"> >     geom_raster(data = DTM_SJER_df ,\n"
"> >                 aes(x = x, y = y,\n"
"> >                      fill = SJER_dtmCrop,\n"
"> >                      alpha = 2.0)\n"
"> >                 ) +\n"
"> >     geom_raster(data = DTM_hill_SJER_df,\n"
"> >                 aes(x = x, y = y,\n"
"> >                   alpha = SJER_dtmHill)\n"
"> >                 ) +\n"
"> >     scale_fill_viridis_c() +\n"
"> >     guides(fill = guide_colorbar()) +\n"
"> >     scale_alpha(range = c(0.4, 0.7), guide = \"none\") +\n"
"> >     theme_bw() +\n"
"> >     theme(panel.grid.major = element_blank(), \n"
"> >           panel.grid.minor = element_blank()) +\n"
"> >     theme(axis.title.x = element_blank(),\n"
"> >           axis.title.y = element_blank()) +\n"
"> >     ggtitle(\"DTM with Hillshade\") +\n"
"> >     coord_quickmap()\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > <img src=\"{{ site.baseurl }}/fig/rmd-02-challenge-hillshade-layering-2.png\" title=\"plot of chunk challenge-hillshade-layering\" alt=\"plot of chunk challenge-hillshade-layering\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:1
# Front Matter
msgid "---\n"
"# Please do not edit this file directly; it is auto generated.\n"
"# Instead, please edit 03-raster-reproject-in-r.md in _episodes_rmd/\n"
"title: \"Reproject Raster Data in R\"\n"
"keypoints: \n"
"- \"In order to plot two raster data sets together, they must be in the same CRS.\"\n"
"- \"Use the `projectRaster()` function to convert between CRSs.\"\n"
"objectives: \n"
"- \"Reproject a raster in R.\"\n"
"questions: \n"
"- \"How do I work with raster data sets that are in different projections?\"\n"
"teaching: 40\n"
"exercises: 20\n"
"source: Rmd\n"
"---"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:26
msgid "Sometimes we encounter raster datasets that do not \"line up\" when plotted or\n"
"analyzed. Rasters that don't line up are most often in different Coordinate\n"
"Reference Systems (CRS). This episode explains how to deal with rasters in different, known CRSs. It\n"
"will walk though reprojecting rasters in R using the `projectRaster()`\n"
"function in the `raster` package."
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:32
# header
msgid "## Raster Projection in R"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:34
msgid "In the [Plot Raster Data in R]({{ site.baseurl }}/02-raster-plot/)\n"
"episode, we learned how to layer a raster file on top of a hillshade for a nice\n"
"looking basemap. In that episode, all of our data were in the same CRS. What\n"
"happens when things don't line up?"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:39
msgid "For this episode, we will be working with the Harvard Forest Digital Terrain\n"
"Model data. This differs from the surface model data we've been working with so\n"
"far in that the digital terrain model (DTM) includes the tops of trees, while\n"
"the digital surface model (DSM) shows the ground level."
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:44
msgid "We'll be looking at another model (the canopy height model) in\n"
"[a later episode]({{ site.baseurl }}/04-raster-calculations-in-r/) and will see how to calculate the CHM from the\n"
"DSM and DTM. Here, we will create a map of the Harvard Forest Digital\n"
"Terrain Model\n"
"(`DTM_HARV`) draped or layered on top of the hillshade (`DTM_hill_HARV`)."
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:50
msgid "![Source: National Ecological Observatory Network (NEON).]({{ site.baseurl }}/images/dc-spatial-raster/lidarTree-height.png)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:52
msgid "First, we need to import the DTM and DTM hillshade data."
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:55
# code block
msgid "~~~\n"
"DTM_HARV <- raster(\"data/NEON-DS-Airborne-Remote-Sensing/HARV/DTM/HARV_dtmCrop.tif\")\n"
"\n"
"DTM_hill_HARV <- raster(\"data/NEON-DS-Airborne-Remote-Sensing/HARV/DTM/HARV_DTMhill_WGS84.tif\")\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:62
msgid "Next, we will convert each of these datasets to a dataframe for \n"
"plotting with `ggplot`."
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:66
# code block
msgid "~~~\n"
"DTM_HARV_df <- as.data.frame(DTM_HARV, xy = TRUE)\n"
"\n"
"DTM_hill_HARV_df <- as.data.frame(DTM_hill_HARV, xy = TRUE)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:73
msgid "Now we can create a map of the DTM layered over the hillshade."
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:76
# code block
msgid "~~~\n"
"ggplot() +\n"
"     geom_raster(data = DTM_HARV_df , \n"
"                 aes(x = x, y = y, \n"
"                  fill = HARV_dtmCrop)) + \n"
"     geom_raster(data = DTM_hill_HARV_df, \n"
"                 aes(x = x, y = y, \n"
"                   alpha = HARV_DTMhill_WGS84)) +\n"
"     scale_fill_gradientn(name = \"Elevation\", colors = terrain.colors(10)) + \n"
"     coord_quickmap()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:89
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-03-unnamed-chunk-2-1.png\" title=\"plot of chunk unnamed-chunk-2\" alt=\"plot of chunk unnamed-chunk-2\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:91
msgid "Our results are curious - neither the Digital Terrain Model (`DTM_HARV_df`) \n"
"nor the DTM Hillshade (`DTM_hill_HARV_df`) plotted.\n"
"Let's try to\n"
"plot the DTM on its own to make sure there are data there."
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:97
# code block
msgid "~~~\n"
"ggplot() +\n"
"geom_raster(data = DTM_HARV_df,\n"
"    aes(x = x, y = y,\n"
"    fill = HARV_dtmCrop)) +\n"
"scale_fill_gradientn(name = \"Elevation\", colors = terrain.colors(10)) + \n"
"coord_quickmap()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:107
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-03-plot-DTM-1.png\" title=\"plot of chunk plot-DTM\" alt=\"plot of chunk plot-DTM\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:109
msgid "Our DTM seems to contain data and plots just fine."
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:111
msgid "Next we plot the DTM Hillshade on its own to see whether everything is OK."
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:114
# code block
msgid "~~~\n"
"ggplot() +\n"
"geom_raster(data = DTM_hill_HARV_df,\n"
"    aes(x = x, y = y,\n"
"    alpha = HARV_DTMhill_WGS84)) + \n"
"    coord_quickmap()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:123
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-03-plot-DTM-hill-1.png\" title=\"plot of chunk plot-DTM-hill\" alt=\"plot of chunk plot-DTM-hill\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:125
msgid "If we look at the axes, we can see that the projections of the two rasters are different.\n"
"When this is the case, `ggplot` won't render the image. It won't even\n"
"throw an error message to tell you something has gone wrong. We can look at Coordinate Reference Systems (CRSs) of the DTM and\n"
"the hillshade data to see how they differ."
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:130
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:59
# blockquote, which can be cascaded
msgid "> ## Exercise"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:131
# blockquote, which can be cascaded
msgid "> View the CRS for each of these two datasets. What projection"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:132
# blockquote, which can be cascaded
msgid "> does each use?"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:133
msgid ">\n"
"> > ## Solution\n"
"> >\n"
"> > \n"
"> > ~~~\n"
"> > # view crs for DTM\n"
"> > crs(DTM_HARV)\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > CRS arguments:\n"
"> >  +proj=utm +zone=18 +datum=WGS84 +units=m +no_defs \n"
"> > ~~~\n"
"> > {: .output}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > # view crs for hillshade\n"
"> > crs(DTM_hill_HARV)\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > CRS arguments: +proj=longlat +datum=WGS84 +no_defs \n"
"> > ~~~\n"
"> > {: .output}\n"
"> >\n"
"> > `DTM_HARV` is in the UTM projection, with units of meters.\n"
"> `DTM_hill_HARV` is in\n"
"> > `Geographic WGS84` - which is represented by latitude and longitude values."
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:172
msgid "Because the two rasters are in different CRSs, they don't line up when plotted\n"
"in R. We need to reproject (or change the projection of) `DTM_hill_HARV` into the UTM CRS. Alternatively,\n"
"we could reproject `DTM_HARV` into WGS84."
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:176
# header
msgid "## Reproject Rasters"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:177
msgid "We can use the `projectRaster()` function to reproject a raster into a new CRS.\n"
"Keep in mind that reprojection only works when you first have a defined CRS\n"
"for the raster object that you want to reproject. It cannot be used if no\n"
"CRS is defined. Lucky for us, the `DTM_hill_HARV` has a defined CRS."
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:182
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:365
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:374
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:109
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:534
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:87
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:678
#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:151
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:272
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:408
#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:79
#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:207
#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:211
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:545
# blockquote, which can be cascaded
msgid "> ## Data Tip"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:183
# blockquote, which can be cascaded
msgid "> When we reproject a raster, we"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:184
# blockquote, which can be cascaded
msgid "> move it from one \"grid\" to another. Thus, we are modifying the data! Keep this"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:185
# blockquote, which can be cascaded
msgid "> in mind as we work with raster data."
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:188
msgid "To use the `projectRaster()` function, we need to define two things:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:190
# ordered list
msgid "1. the object we want to reproject and"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:191
# ordered list
msgid "2. the CRS that we want to reproject it to."
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:193
msgid "The syntax is `projectRaster(RasterObject, crs = CRSToReprojectTo)`"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:195
msgid "We want the CRS of our hillshade to match the `DTM_HARV` raster. We can thus\n"
"assign the CRS of our `DTM_HARV` to our hillshade within the `projectRaster()`\n"
"function as follows: `crs = crs(DTM_HARV)`. \n"
"Note that we are using the `projectRaster()` function on the raster object,\n"
"not the `data.frame()` we use for plotting with `ggplot`."
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:201
msgid "First we will reproject our `DTM_hill_HARV` raster data to match the `DTM_HARV` raster CRS:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:204
# code block
msgid "~~~\n"
"DTM_hill_UTMZ18N_HARV <- projectRaster(DTM_hill_HARV,\n"
"                                       crs = crs(DTM_HARV))\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:210
msgid "Now we can compare the CRS of our original DTM hillshade\n"
"and our new DTM hillshade, to see how they are different."
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:214
# code block
msgid "~~~\n"
"crs(DTM_hill_UTMZ18N_HARV)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:229
# code block
msgid "~~~\n"
"crs(DTM_hill_HARV)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:236
# code block
msgid "~~~\n"
"CRS arguments: +proj=longlat +datum=WGS84 +no_defs \n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:241
msgid "We can also compare the extent of the two objects."
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:244
# code block
msgid "~~~\n"
"extent(DTM_hill_UTMZ18N_HARV)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:251
# code block
msgid "~~~\n"
"class      : Extent \n"
"xmin       : 731397.3 \n"
"xmax       : 733205.3 \n"
"ymin       : 4712403 \n"
"ymax       : 4713907 \n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:262
# code block
msgid "~~~\n"
"extent(DTM_hill_HARV)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:269
# code block
msgid "~~~\n"
"class      : Extent \n"
"xmin       : -72.18192 \n"
"xmax       : -72.16061 \n"
"ymin       : 42.52941 \n"
"ymax       : 42.54234 \n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:278
msgid "Notice in the output above that the `crs()` of `DTM_hill_UTMZ18N_HARV` is now\n"
"UTM. However, the extent values of `DTM_hillUTMZ18N_HARV` are different from\n"
"`DTM_hill_HARV`."
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:282
# blockquote, which can be cascaded
msgid "> ## Challenge: Extent Change with CRS Change"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:284
# blockquote, which can be cascaded
msgid "> Why do you think the two extents differ?"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:285
msgid ">\n"
"> > ## Answers\n"
"> >\n"
"> > The extent for DTM_hill_UTMZ18N_HARV is in UTMs so the extent is in meters. The extent for DTM_hill_HARV is in lat/long so the extent is expressed\n"
"> > in decimal degrees."
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:293
# header
msgid "## Deal with Raster Resolution"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:295
msgid "Let's next have a look at the resolution of our reprojected hillshade versus our original data."
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:298
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:338
# code block
msgid "~~~\n"
"res(DTM_hill_UTMZ18N_HARV)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:305
# code block
msgid "~~~\n"
"[1] 1.000 0.998\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:312
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:352
# code block
msgid "~~~\n"
"res(DTM_hill_HARV)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:319
#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:359
# code block
msgid "~~~\n"
"[1] 1.22e-05 8.99e-06\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:324
msgid "These two resolutions are different, but they're representing the same data. We can tell R to force our\n"
"newly reprojected raster to be 1m x 1m resolution by adding a line of code\n"
"(`res=`) within the `projectRaster()` function."
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:329
# code block
msgid "~~~\n"
"DTM_hill_UTMZ18N_HARV <- projectRaster(DTM_hill_HARV,\n"
"                                  crs = crs(DTM_HARV),\n"
"                                  res = 1)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:336
msgid "Let's double-check our resolution to be sure"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:345
# code block
msgid "~~~\n"
"[1] 1 1\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:364
msgid "Now both our resolutions and our CRSs match, so we can plot these two\n"
"data sets together. For plotting with `ggplot()`, we will need to\n"
"create a dataframe from our newly reprojected raster."
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:369
# code block
msgid "~~~\n"
"DTM_hill_HARV_2_df <- as.data.frame(DTM_hill_UTMZ18N_HARV, xy = TRUE)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:374
msgid "We can now create a plot of this data."
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:377
# code block
msgid "~~~\n"
"ggplot() +\n"
"     geom_raster(data = DTM_HARV_df , \n"
"                 aes(x = x, y = y, \n"
"                  fill = HARV_dtmCrop)) + \n"
"     geom_raster(data = DTM_hill_HARV_2_df, \n"
"                 aes(x = x, y = y, \n"
"                   alpha = HARV_DTMhill_WGS84)) +\n"
"     scale_fill_gradientn(name = \"Elevation\", colors = terrain.colors(10)) + \n"
"     coord_quickmap()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:390
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-03-plot-projected-raster-1.png\" title=\"plot of chunk plot-projected-raster\" alt=\"plot of chunk plot-projected-raster\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:392
msgid "We have now successfully draped the Digital Terrain Model on top of our\n"
"hillshade to produce a nice looking, textured map!"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:395
# blockquote, which can be cascaded
msgid "> ## Challenge: Reproject, then Plot a Digital Terrain Model"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:396
# blockquote, which can be cascaded
msgid "> Create a map of the"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:397
# blockquote, which can be cascaded
msgid "> [San Joaquin Experimental Range](https://www.neonscience.org/field-sites/field-sites-map/SJER)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:398
# blockquote, which can be cascaded
msgid "> field site using the `SJER_DSMhill_WGS84.tif` and `SJER_dsmCrop.tif` files."
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:400
# blockquote, which can be cascaded
msgid "> Reproject the data as necessary to make things line up!"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:401
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:244
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:424
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:613
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:218
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:697
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:304
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:637
# blockquote, which can be cascaded
msgid "> > ## Answers"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:404
# blockquote, which can be cascaded
msgid "> > # import DSM"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:405
# blockquote, which can be cascaded
msgid "> > DSM_SJER <- raster(\"data/NEON-DS-Airborne-Remote-Sensing/SJER/DSM/SJER_dsmCrop.tif\")"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:406
# blockquote, which can be cascaded
msgid "> > # import DSM hillshade"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:407
# blockquote, which can be cascaded
msgid "> > DSM_hill_SJER_WGS <-"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:408
# blockquote, which can be cascaded
msgid "> > raster(\"data/NEON-DS-Airborne-Remote-Sensing/SJER/DSM/SJER_DSMhill_WGS84.tif\")"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:410
# blockquote, which can be cascaded
msgid "> > # reproject raster"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:411
# blockquote, which can be cascaded
msgid "> > DTM_hill_UTMZ18N_SJER <- projectRaster(DSM_hill_SJER_WGS,"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:412
# blockquote, which can be cascaded
msgid "> >                                   crs = crs(DSM_SJER),"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:413
# blockquote, which can be cascaded
msgid "> >                                   res = 1)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:415
# blockquote, which can be cascaded
msgid "> > # convert to data.frames"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:416
# blockquote, which can be cascaded
msgid "> > DSM_SJER_df <- as.data.frame(DSM_SJER, xy = TRUE)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:418
# blockquote, which can be cascaded
msgid "> > DSM_hill_SJER_df <- as.data.frame(DTM_hill_UTMZ18N_SJER, xy = TRUE)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:420
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:325
# blockquote, which can be cascaded
msgid "> > ggplot() +"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:421
# blockquote, which can be cascaded
msgid "> >      geom_raster(data = DSM_hill_SJER_df, "
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:422
# blockquote, which can be cascaded
msgid "> >                  aes(x = x, y = y, "
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:423
# blockquote, which can be cascaded
msgid "> >                    alpha = SJER_DSMhill_WGS84)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:424
# blockquote, which can be cascaded
msgid "> >                  ) +"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:425
# blockquote, which can be cascaded
msgid "> >      geom_raster(data = DSM_SJER_df, "
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:426
# blockquote, which can be cascaded
msgid "> >              aes(x = x, y = y, "
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:427
# blockquote, which can be cascaded
msgid "> >                   fill = SJER_dsmCrop,"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:428
# blockquote, which can be cascaded
msgid "> >                   alpha=0.8)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:429
# blockquote, which can be cascaded
msgid "> >              ) + "
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:430
# blockquote, which can be cascaded
msgid "> >      scale_fill_gradientn(name = \"Elevation\", colors = terrain.colors(10)) + "
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:431
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:329
# blockquote, which can be cascaded
msgid "> >      coord_quickmap()"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:435
# blockquote, which can be cascaded
msgid "> > <img src=\"{{ site.baseurl }}/fig/rmd-03-challenge-code-reprojection-1.png\" title=\"plot of chunk challenge-code-reprojection\" alt=\"plot of chunk challenge-code-reprojection\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/03-raster-reproject-in-r.md:437
msgid ">\n"
"> If you completed the San Joaquin plotting challenge in the\n"
"> [Plot Raster Data in R]({{ site.baseurl }}/02-raster-plot/)\n"
"> episode, how does the map you just created compare to that map?\n"
">\n"
"> > ## Answers\n"
"> > The maps look identical. Which is what they should be as the only difference\n"
"> > is this one was reprojected from WGS84 to UTM prior to plotting."
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:1
# Front Matter
msgid "---\n"
"# Please do not edit this file directly; it is auto generated.\n"
"# Instead, please edit 04-raster-calculations-in-r.md in _episodes_rmd/\n"
"title: \"Raster Calculations in R\"\n"
"teaching: 40\n"
"exercises: 20\n"
"questions:\n"
"- \"How do I subtract one raster from another and extract pixel values for defined locations?\"\n"
"objectives:\n"
"- \"Perform a subtraction between two rasters using raster math.\"\n"
"- \"Perform a more efficient subtraction between two rasters using the raster `overlay()` function.\"\n"
"- \"Export raster data as a GeoTIFF file.\"\n"
"keypoints:\n"
"- \"Rasters can be computed on using mathematical functions.\"\n"
"- \"The `overlay()` function provides an efficient way to do raster math.\"\n"
"- \"The `writeRaster()` function can be used to write raster data to a file.\"\n"
"source: Rmd\n"
"---"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:31
msgid "We often want to combine values of and perform calculations on rasters to create\n"
"a new output raster. This episode covers how to subtract one raster from\n"
"another using basic raster math and the `overlay()` function. It also covers how\n"
"to extract pixel values from a set of locations - for example a buffer region\n"
"around plot locations at a field site."
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:37
# header
msgid "## Raster Calculations in R"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:38
msgid "We often want to perform calculations on two or more rasters to create a new\n"
"output raster. For example, if we are interested in mapping the heights of trees\n"
"across an entire field site, we might want to calculate the difference between\n"
"the Digital Surface Model (DSM, tops of trees) and the\n"
"Digital Terrain Model (DTM, ground level). The resulting dataset is referred to\n"
"as a Canopy Height Model (CHM) and represents the actual height of trees,\n"
"buildings, etc. with the influence of ground elevation removed."
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:46
msgid "![Source: National Ecological Observatory Network (NEON)]({{ site.baseurl }}/images/dc-spatial-raster/lidarTree-height.png) "
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:49
# blockquote, which can be cascaded
msgid "> * Check out more on LiDAR CHM, DTM and DSM in this NEON Data Skills overview tutorial:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:50
# blockquote, which can be cascaded
msgid "> [What is a CHM, DSM and DTM? About Gridded, Raster LiDAR Data](https://www.neonscience.org/chm-dsm-dtm-gridded-lidar-data)."
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:53
# header
msgid "### Load the Data"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:54
msgid "For this episode, we will use the DTM and DSM from the\n"
"NEON Harvard Forest Field site and San Joaquin Experimental\n"
"Range,\n"
"which we already have loaded from previous episodes."
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:60
# blockquote, which can be cascaded
msgid "> Use the `GDALinfo()` function to view information about the DTM and"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:61
# blockquote, which can be cascaded
msgid "> DSM data files. Do the two rasters have the same or different CRSs"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:62
# blockquote, which can be cascaded
msgid "> and resolutions? Do they both have defined minimum and maximum values?"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:63
msgid ">\n"
"> > ## Solution\n"
"> > \n"
"> > ~~~\n"
"> > GDALinfo(\"data/NEON-DS-Airborne-Remote-Sensing/HARV/DTM/HARV_dtmCrop.tif\")\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > rows        1367 \n"
"> > columns     1697 \n"
"> > bands       1 \n"
"> > lower left origin.x        731453 \n"
"> > lower left origin.y        4712471 \n"
"> > res.x       1 \n"
"> > res.y       1 \n"
"> > ysign       -1 \n"
"> > oblique.x   0 \n"
"> > oblique.y   0 \n"
"> > driver      GTiff \n"
"> > projection  +proj=utm +zone=18 +datum=WGS84 +units=m +no_defs \n"
"> > file        data/NEON-DS-Airborne-Remote-Sensing/HARV/DTM/HARV_dtmCrop.tif \n"
"> > apparent band summary:\n"
"> >    GDType hasNoDataValue NoDataValue blockSize1 blockSize2\n"
"> > 1 Float64           TRUE       -9999          1       1697\n"
"> > apparent band statistics:\n"
"> >     Bmin   Bmax    Bmean      Bsd\n"
"> > 1 304.56 389.82 344.8979 15.86147\n"
"> > Metadata:\n"
"> > AREA_OR_POINT=Area \n"
"> > ~~~\n"
"> > {: .output}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > GDALinfo(\"data/NEON-DS-Airborne-Remote-Sensing/HARV/DSM/HARV_dsmCrop.tif\")\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > rows        1367 \n"
"> > columns     1697 \n"
"> > bands       1 \n"
"> > lower left origin.x        731453 \n"
"> > lower left origin.y        4712471 \n"
"> > res.x       1 \n"
"> > res.y       1 \n"
"> > ysign       -1 \n"
"> > oblique.x   0 \n"
"> > oblique.y   0 \n"
"> > driver      GTiff \n"
"> > projection  +proj=utm +zone=18 +datum=WGS84 +units=m +no_defs \n"
"> > file        data/NEON-DS-Airborne-Remote-Sensing/HARV/DSM/HARV_dsmCrop.tif \n"
"> > apparent band summary:\n"
"> >    GDType hasNoDataValue NoDataValue blockSize1 blockSize2\n"
"> > 1 Float64           TRUE       -9999          1       1697\n"
"> > apparent band statistics:\n"
"> >     Bmin   Bmax    Bmean      Bsd\n"
"> > 1 305.07 416.07 359.8531 17.83169\n"
"> > Metadata:\n"
"> > AREA_OR_POINT=Area \n"
"> > ~~~\n"
"> > {: .output}"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:134
msgid "We've already loaded and worked with these two data files in\n"
"earlier episodes. Let's plot them each once more to remind ourselves\n"
"what this data looks like. First we'll plot the DTM elevation data: "
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:139
# code block
msgid "~~~\n"
" ggplot() +\n"
"      geom_raster(data = DTM_HARV_df , \n"
"              aes(x = x, y = y, fill = HARV_dtmCrop)) +\n"
"     scale_fill_gradientn(name = \"Elevation\", colors = terrain.colors(10)) + \n"
"     coord_quickmap()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:148
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-04-harv-dtm-plot-1.png\" title=\"plot of chunk harv-dtm-plot\" alt=\"plot of chunk harv-dtm-plot\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:150
msgid "And then the DSM elevation data: "
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:153
# code block
msgid "~~~\n"
" ggplot() +\n"
"      geom_raster(data = DSM_HARV_df , \n"
"              aes(x = x, y = y, fill = HARV_dsmCrop)) +\n"
"     scale_fill_gradientn(name = \"Elevation\", colors = terrain.colors(10)) + \n"
"     coord_quickmap()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:162
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-04-harv-dsm-plot-1.png\" title=\"plot of chunk harv-dsm-plot\" alt=\"plot of chunk harv-dsm-plot\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:164
# header
msgid "## Two Ways to Perform Raster Calculations"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:166
msgid "We can calculate the difference between two rasters in two different ways:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:168
# unordered list
msgid "* by directly subtracting the two rasters in R using raster math"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:170
msgid "or for more efficient processing - particularly if our rasters are large and/or\n"
"the calculations we are performing are complex:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:173
# unordered list
msgid "* using the `overlay()` function."
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:175
# header
msgid "## Raster Math & Canopy Height Models"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:176
msgid "We can perform raster calculations by subtracting (or adding,\n"
"multiplying, etc) two rasters. In the geospatial world, we call this\n"
"\"raster math\"."
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:180
msgid "Let's subtract the DTM from the DSM to create a Canopy Height Model. \n"
"After subtracting, let's create a dataframe so we can plot with `ggplot`."
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:184
# code block
msgid "~~~\n"
"CHM_HARV <- DSM_HARV - DTM_HARV\n"
"\n"
"CHM_HARV_df <- as.data.frame(CHM_HARV, xy = TRUE)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:191
msgid "We can now plot the output CHM."
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:194
# code block
msgid "~~~\n"
" ggplot() +\n"
"   geom_raster(data = CHM_HARV_df , \n"
"               aes(x = x, y = y, fill = layer)) + \n"
"   scale_fill_gradientn(name = \"Canopy Height\", colors = terrain.colors(10)) + \n"
"   coord_quickmap()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:203
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-04-harv-chm-plot-1.png\" title=\"plot of chunk harv-chm-plot\" alt=\"plot of chunk harv-chm-plot\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:205
msgid "Let's have a look at the distribution of values in our newly created\n"
"Canopy Height Model (CHM)."
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:209
# code block
msgid "~~~\n"
"ggplot(CHM_HARV_df) +\n"
"    geom_histogram(aes(layer))\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:224
# code block
msgid "~~~\n"
"Warning: Removed 1 rows containing non-finite values (stat_bin).\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:229
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-04-create-hist-1.png\" title=\"plot of chunk create-hist\" alt=\"plot of chunk create-hist\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:231
msgid "Notice that the range of values for the output CHM is between 0 and 30 \n"
"meters. Does this make sense for trees in Harvard Forest?"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:234
# blockquote, which can be cascaded
msgid "> ## Challenge: Explore CHM Raster Values"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:236
# blockquote, which can be cascaded
msgid "> It's often a good idea to explore the range of values in a raster dataset just like we might explore a dataset that we collected in the field."
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:238
# blockquote, which can be cascaded
msgid "> 1. What is the min and maximum value for the Harvard Forest Canopy Height Model (`CHM_HARV`) that we just created?"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:239
# blockquote, which can be cascaded
msgid "> 2. What are two ways you can check this range of data for `CHM_HARV`?"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:240
# blockquote, which can be cascaded
msgid "> 3. What is the distribution of all the pixel values in the CHM?"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:241
# blockquote, which can be cascaded
msgid "> 4. Plot a histogram with 6 bins instead of the default and change the color of the histogram."
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:242
# blockquote, which can be cascaded
msgid "> 5. Plot the `CHM_HARV` raster using breaks that make sense for the data. Include an appropriate color palette for the data, plot title and no axes ticks / labels."
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:246
# blockquote, which can be cascaded
msgid "> > 1) There are missing values in our data, so we need to specify "
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:247
# blockquote, which can be cascaded
msgid "> > `na.rm = TRUE`. "
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:250
# blockquote, which can be cascaded
msgid "> > min(CHM_HARV_df$layer, na.rm = TRUE)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:257
# blockquote, which can be cascaded
msgid "> > [1] 0"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:259
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:273
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:291
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:464
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:530
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:688
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:716
# blockquote, which can be cascaded
msgid "> > {: .output}"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:264
# blockquote, which can be cascaded
msgid "> > max(CHM_HARV_df$layer, na.rm = TRUE)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:271
# blockquote, which can be cascaded
msgid "> > [1] 38.16998"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:274
# blockquote, which can be cascaded
msgid "> > 2) Possible ways include: "
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:275
# blockquote, which can be cascaded
msgid "> > * Create a histogram"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:276
# blockquote, which can be cascaded
msgid "> > * Use the `min()` and `max()` functions."
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:277
# blockquote, which can be cascaded
msgid "> > * Print the object and look at the `values` attribute."
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:278
# blockquote, which can be cascaded
msgid "> > 3)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:281
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:304
# blockquote, which can be cascaded
msgid "> > ggplot(CHM_HARV_df) +"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:282
# blockquote, which can be cascaded
msgid "> >     geom_histogram(aes(layer))"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:289
# blockquote, which can be cascaded
msgid "> > `stat_bin()` using `bins = 30`. Pick better value with `binwidth`."
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:296
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:313
# blockquote, which can be cascaded
msgid "> > Warning: Removed 1 rows containing non-finite values (stat_bin)."
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:298
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:315
#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:338
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:702
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:232
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:246
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:260
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:274
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:287
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:301
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:315
#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:329
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:713
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:727
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:742
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:760
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:780
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:317
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:331
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:349
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:655
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:670
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:689
# blockquote, which can be cascaded
msgid "> > {: .error}"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:300
# blockquote, which can be cascaded
msgid "> > <img src=\"{{ site.baseurl }}/fig/rmd-04-chm-harv-hist-1.png\" title=\"plot of chunk chm-harv-hist\" alt=\"plot of chunk chm-harv-hist\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:301
# blockquote, which can be cascaded
msgid "> > 4)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:305
# blockquote, which can be cascaded
msgid "> >     geom_histogram(aes(layer), colour=\"black\", "
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:306
# blockquote, which can be cascaded
msgid "> >                    fill=\"darkgreen\", bins = 6)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:317
# blockquote, which can be cascaded
msgid "> > <img src=\"{{ site.baseurl }}/fig/rmd-04-chm-harv-hist-green-1.png\" title=\"plot of chunk chm-harv-hist-green\" alt=\"plot of chunk chm-harv-hist-green\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:318
# blockquote, which can be cascaded
msgid "> > 5) "
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:321
# blockquote, which can be cascaded
msgid "> > custom_bins <- c(0, 10, 20, 30, 40)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:322
# blockquote, which can be cascaded
msgid "> > CHM_HARV_df <- CHM_HARV_df %>%"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:323
# blockquote, which can be cascaded
msgid "> >                   mutate(canopy_discrete = cut(layer, breaks = custom_bins))"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:326
# blockquote, which can be cascaded
msgid "> >   geom_raster(data = CHM_HARV_df , aes(x = x, y = y,"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:327
# blockquote, which can be cascaded
msgid "> >                                        fill = canopy_discrete)) + "
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:328
# blockquote, which can be cascaded
msgid "> >      scale_fill_manual(values = terrain.colors(4)) + "
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:336
# blockquote, which can be cascaded
msgid "> > Warning: Removed 51136 rows containing missing values (geom_raster)."
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:340
# blockquote, which can be cascaded
msgid "> > <img src=\"{{ site.baseurl }}/fig/rmd-04-chm-harv-raster-1.png\" title=\"plot of chunk chm-harv-raster\" alt=\"plot of chunk chm-harv-raster\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:344
# header
msgid "## Efficient Raster Calculations: Overlay Function"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:346
msgid "Raster math, like we just did, is an appropriate approach to raster calculations\n"
"if:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:349
# ordered list
msgid "1. The rasters we are using are small in size."
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:350
# ordered list
msgid "2. The calculations we are performing are simple."
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:352
msgid "However, raster math is a less efficient approach as computation becomes more\n"
"complex or as file sizes become large.\n"
"The `overlay()` function is more efficient when:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:356
# ordered list
msgid "1. The rasters we are using are larger in size."
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:357
# ordered list
msgid "2. The rasters are stored as individual files."
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:358
# ordered list
msgid "3. The computations performed are complex."
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:360
msgid "The `overlay()` function takes two or more rasters and applies a function to\n"
"them using efficient processing methods. The syntax is"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:363
msgid "`outputRaster <- overlay(raster1, raster2, fun=functionName)`"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:366
# blockquote, which can be cascaded
msgid "> If the rasters are stacked and stored"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:367
# blockquote, which can be cascaded
msgid "> as `RasterStack` or `RasterBrick` objects in R, then we should use `calc()`."
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:368
# blockquote, which can be cascaded
msgid "> `overlay()` will not work on stacked rasters."
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:371
msgid "Let's perform the same subtraction calculation that we calculated above using\n"
"raster math, using the `overlay()` function."
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:375
msgid ">\n"
"> A custom function consists of a defined\n"
"> set of commands performed on a input object. Custom functions are particularly\n"
"> useful for tasks that need to be repeated over and over in the code. A\n"
"> simplified syntax for writing a custom function in R is:\n"
"> `function_name <- function(variable1, variable2) { WhatYouWantDone, WhatToReturn}`"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:384
# code block
msgid "~~~\n"
"CHM_ov_HARV <- overlay(DSM_HARV,\n"
"                       DTM_HARV,\n"
"                       fun = function(r1, r2) { return( r1 - r2) })\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:391
msgid "Next we need to convert our new object to a data frame for plotting with \n"
"`ggplot`. "
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:395
# code block
msgid "~~~\n"
"CHM_ov_HARV_df <- as.data.frame(CHM_ov_HARV, xy = TRUE)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:400
msgid "Now we can plot the CHM:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:403
# code block
msgid "~~~\n"
" ggplot() +\n"
"   geom_raster(data = CHM_ov_HARV_df, \n"
"               aes(x = x, y = y, fill = layer)) + \n"
"   scale_fill_gradientn(name = \"Canopy Height\", colors = terrain.colors(10)) + \n"
"   coord_quickmap()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:412
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-04-harv-chm-overlay-1.png\" title=\"plot of chunk harv-chm-overlay\" alt=\"plot of chunk harv-chm-overlay\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:414
msgid "How do the plots of the CHM created with manual raster math and the `overlay()`\n"
"function compare?"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:417
# header
msgid "## Export a GeoTIFF"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:418
msgid "Now that we've created a new raster, let's export the data as a GeoTIFF\n"
"file using\n"
"the `writeRaster()` function."
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:422
msgid "When we write this raster object to a GeoTIFF file we'll name it\n"
"`CHM_HARV.tiff`. This name allows us to quickly remember both what the data\n"
"contains (CHM data) and for where (HARVard Forest). The `writeRaster()` function\n"
"by default writes the output file to your working directory unless you specify a\n"
"full file path."
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:428
msgid "We will specify the output format (\"GTiff\"), the no data value (`NAflag = -9999`. We will also tell R to overwrite any data that is already in\n"
"a file of the same name. "
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:432
# code block
msgid "~~~\n"
"writeRaster(CHM_ov_HARV, \"CHM_HARV.tiff\",\n"
"            format=\"GTiff\",\n"
"            overwrite=TRUE,\n"
"            NAflag=-9999)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:440
# header
msgid "### writeRaster() Options"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:442
msgid "The function arguments that we used above include:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:444
# unordered list
msgid "* **format:** specify that the format will be `GTiff` or GeoTIFF."
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:445
# unordered list
msgid "* **overwrite:** If TRUE, R will overwrite any existing file  with the same"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:446
msgid "name in the specified directory. USE THIS SETTING WITH CAUTION!\n"
"* **NAflag:** set the GeoTIFF tag for `NoDataValue` to -9999, the National\n"
"Ecological Observatory Network's (NEON) standard `NoDataValue`."
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:450
# blockquote, which can be cascaded
msgid "> ## Challenge: Explore the NEON San Joaquin Experimental Range Field Site"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:452
# blockquote, which can be cascaded
msgid "> Data are often more interesting and powerful when we compare them across various"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:453
# blockquote, which can be cascaded
msgid "> locations. Let's compare some data collected over Harvard Forest to data"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:454
# blockquote, which can be cascaded
msgid "> collected in Southern California. The"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:455
# blockquote, which can be cascaded
msgid "> [NEON San Joaquin Experimental Range (SJER) field site](https://www.neonscience.org/field-sites/field-sites-map/SJER)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:456
# blockquote, which can be cascaded
msgid "> located in Southern California has a very different ecosystem and climate than"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:457
# blockquote, which can be cascaded
msgid "> the"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:458
# blockquote, which can be cascaded
msgid "> [NEON Harvard Forest Field Site](https://www.neonscience.org/field-sites/field-sites-map/HARV)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/04-raster-calculations-in-r.md:459
msgid "in Massachusetts.\n"
"> \n"
"> Import the SJER DSM and DTM raster files and create a Canopy Height Model.\n"
"> Then compare the two sites. Be sure to name your R objects and outputs\n"
"> carefully, as follows: objectType_SJER (e.g. `DSM_SJER`). This will help you\n"
"> keep track of data from different sites!\n"
"> \n"
"> 0. You should have the DSM and DTM data for the SJER site already\n"
"> loaded from the \n"
"> [Plot Raster Data in R]({{ site.baseurl }}/02-raster-plot/)\n"
"episode.) Don't forget to check the CRSs and units of the data. \n"
"> 1. Create a CHM from the two raster layers and check to make sure the data\n"
"are what you expect.\n"
"> 2. Plot the CHM from SJER.\n"
"> 3. Export the SJER CHM as a GeoTIFF.\n"
"> 4. Compare the vegetation structure of the Harvard Forest and San Joaquin\n"
"> Experimental Range.\n"
"> \n"
"> > ## Answers\n"
"> > 1) Use the `overlay()` function to subtract the two rasters & create\n"
"> > the CHM.\n"
"> >\n"
"> > \n"
"> > ~~~\n"
"> > CHM_ov_SJER <- overlay(DSM_SJER,\n"
"> >                        DTM_SJER,\n"
"> >                        fun = function(r1, r2){ return(r1 - r2) })\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > Convert the output to a dataframe:\n"
"> >\n"
"> > \n"
"> > ~~~\n"
"> > CHM_ov_SJER_df <- as.data.frame(CHM_ov_SJER, xy = TRUE)\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> >\n"
"> > Create a histogram to check that the data distribution makes sense: \n"
"> >\n"
"> > \n"
"> > ~~~\n"
"> > ggplot(CHM_ov_SJER_df) +\n"
"> >     geom_histogram(aes(layer))\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n"
"> > ~~~\n"
"> > {: .output}\n"
"> > \n"
"> > <img src=\"{{ site.baseurl }}/fig/rmd-04-sjer-chm-overlay-hist-1.png\" title=\"plot of chunk sjer-chm-overlay-hist\" alt=\"plot of chunk sjer-chm-overlay-hist\" width=\"612\" style=\"display: block; margin: auto;\" />\n"
"> >\n"
"> > 2) Create a plot of the CHM: \n"
"> >\n"
"> > \n"
"> > ~~~\n"
"> >  ggplot() +\n"
"> >       geom_raster(data = CHM_ov_SJER_df, \n"
"> >               aes(x = x, y = y, \n"
"> >                    fill = layer)\n"
"> >               ) + \n"
"> >      scale_fill_gradientn(name = \"Canopy Height\", \n"
"> >         colors = terrain.colors(10)) + \n"
"> >      coord_quickmap()\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > <img src=\"{{ site.baseurl }}/fig/rmd-04-sjer-chm-overlay-raster-1.png\" title=\"plot of chunk sjer-chm-overlay-raster\" alt=\"plot of chunk sjer-chm-overlay-raster\" width=\"612\" style=\"display: block; margin: auto;\" />\n"
"> > \n"
"> > 3) Export the CHM object to a file: \n"
"> >\n"
"> > \n"
"> > ~~~\n"
"> > writeRaster(CHM_ov_SJER, \"chm_ov_SJER.tiff\",\n"
"> >             format = \"GTiff\",\n"
"> >             overwrite = TRUE,\n"
"> >             NAflag = -9999)\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> >\n"
"> > 4) Compare the SJER and HARV CHMs. \n"
"> > Tree heights are much shorter in SJER. You can confirm this by \n"
"> > looking at the histograms of the two CHMs. \n"
"> >\n"
"> > \n"
"> > ~~~\n"
"> > ggplot(CHM_HARV_df) +\n"
"> >     geom_histogram(aes(layer))\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n"
"> > ~~~\n"
"> > {: .output}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > Warning: Removed 1 rows containing non-finite values (stat_bin).\n"
"> > ~~~\n"
"> > {: .error}\n"
"> > \n"
"> > <img src=\"{{ site.baseurl }}/fig/rmd-04-compare-chm-harv-sjer-1.png\" title=\"plot of chunk compare-chm-harv-sjer\" alt=\"plot of chunk compare-chm-harv-sjer\" width=\"612\" style=\"display: block; margin: auto;\" />\n"
"> > \n"
"> > ~~~\n"
"> > ggplot(CHM_ov_SJER_df) +\n"
"> >     geom_histogram(aes(layer))\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n"
"> > ~~~\n"
"> > {: .output}\n"
"> > \n"
"> > <img src=\"{{ site.baseurl }}/fig/rmd-04-compare-chm-harv-sjer-2.png\" title=\"plot of chunk compare-chm-harv-sjer\" alt=\"plot of chunk compare-chm-harv-sjer\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:1
# Front Matter
msgid "---\n"
"# Please do not edit this file directly; it is auto generated.\n"
"# Instead, please edit 05-raster-multi-band-in-r.md in _episodes_rmd/\n"
"title: \"Work With Multi-Band Rasters in R\"\n"
"teaching: 40\n"
"exercises: 20\n"
"questions:\n"
"- \"How can I visualize individual and multiple bands in a raster object?\"\n"
"objectives:\n"
"- \"Identify a single vs. a multi-band raster file.\"\n"
"- \"Import multi-band rasters into R using the `raster` package.\"\n"
"- \"Plot multi-band color image rasters in R using the `ggplot` package.\"\n"
"keypoints:\n"
"- \"A single raster file can contain multiple bands or layers.\"\n"
"- \"Use the `stack()` function to load all bands in a multi-layer raster file into R.\"\n"
"- \"Individual bands within a stack can be accessed, analyzed, and visualized using the same functions as single bands.\"\n"
"source: Rmd\n"
"---"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:29
msgid "We introduced multi-band raster data in\n"
"[an earlier lesson](https://datacarpentry.org/organization-geospatial/01-intro-raster-data). This episode explores how to import and plot\n"
"a multi-band raster in\n"
"R."
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:34
# header
msgid "## Getting Started with Multi-Band Data in R"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:36
msgid "In this episode, the multi-band data that we are working with is imagery\n"
"collected using the\n"
"[NEON Airborne Observation Platform](https://www.neonscience.org/data-collection/airborne-remote-sensing)\n"
"high resolution camera over the\n"
"[NEON Harvard Forest field site](https://www.neonscience.org/field-sites/field-sites-map/HARV).\n"
"Each RGB image is a 3-band raster. The same steps would apply to\n"
"working with a multi-spectral image with 4 or more bands - like Landsat imagery."
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:44
msgid "If we read a RasterStack object into R using the `raster()` function, it only reads\n"
"in the first band."
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:48
# code block
msgid "~~~\n"
"RGB_band1_HARV <- raster(\"data/NEON-DS-Airborne-Remote-Sensing/HARV/RGB_Imagery/HARV_RGB_Ortho.tif\")\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:53
msgid "We need to convert this data to a data frame in order to plot it with `ggplot`. "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:56
# code block
msgid "~~~\n"
"RGB_band1_HARV_df  <- as.data.frame(RGB_band1_HARV, xy = TRUE)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:62
# code block
msgid "~~~\n"
"ggplot() +\n"
"  geom_raster(data = RGB_band1_HARV_df,\n"
"              aes(x = x, y = y, alpha = HARV_RGB_Ortho)) + \n"
"  coord_quickmap()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:70
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-05-harv-rgb-band1-1.png\" title=\"plot of chunk harv-rgb-band1\" alt=\"plot of chunk harv-rgb-band1\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:73
msgid ">\n"
"> View the attributes of this band. What are its dimensions, CRS, resolution, min and max values,\n"
"> and band number?\n"
">\n"
"> > ## Solution\n"
"> >\n"
"> > \n"
"> > ~~~\n"
"> > RGB_band1_HARV\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > class      : RasterLayer \n"
"> > band       : 1  (of  3  bands)\n"
"> > dimensions : 2317, 3073, 7120141  (nrow, ncol, ncell)\n"
"> > resolution : 0.25, 0.25  (x, y)\n"
"> > extent     : 731998.5, 732766.8, 4712956, 4713536  (xmin, xmax, ymin, ymax)\n"
"> > crs        : +proj=utm +zone=18 +datum=WGS84 +units=m +no_defs \n"
"> > source     : /home/travis/build/datacarpentry/r-raster-vector-geospatial/_episodes_rmd/data/NEON-DS-Airborne-Remote-Sensing/HARV/RGB_Imagery/HARV_RGB_Ortho.tif \n"
"> > names      : HARV_RGB_Ortho \n"
"> > values     : 0, 255  (min, max)\n"
"> > ~~~\n"
"> > {: .output}\n"
"> >\n"
"> > Notice that when we look at the attributes of this band, we see:\n"
"> > `band: 1  (of  3  bands)`\n"
"> >\n"
"> > This is R telling us that this particular raster object has more bands (3)\n"
"> > associated with it."
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:110
msgid ">\n"
"> The number of bands associated with a\n"
"> raster object can also be determined using the `nbands()` function: syntax is\n"
"> `nbands(RGB_band1_HARV)`."
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:116
# header
msgid "### Image Raster Data Values"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:118
msgid "As we saw in the previous exercise, this raster contains values between 0 and 255. These values\n"
"represent degrees of brightness associated with the image band. In\n"
"the case of a RGB image (red, green and blue), band 1 is the red band. When\n"
"we plot the red band, larger numbers (towards 255) represent pixels with more\n"
"red in them (a strong red reflection). Smaller numbers (towards 0) represent\n"
"pixels with less red in them (less red was reflected). To\n"
"plot an RGB image, we mix red + green + blue values into one single color to\n"
"create a full color image - similar to the color image a digital camera creates."
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:127
# header
msgid "### Import A Specific Band"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:129
msgid "We can use the `raster()` function to import specific bands in our raster object\n"
"by specifying which band we want with `band = N` (N represents the band number we\n"
"want to work with). To import the green band, we would use `band = 2`."
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:134
# code block
msgid "~~~\n"
"RGB_band2_HARV <-  raster(\"data/NEON-DS-Airborne-Remote-Sensing/HARV/RGB_Imagery/HARV_RGB_Ortho.tif\", band = 2)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:139
msgid "We can convert this data to a data frame and plot the same way we plotted the red band: "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:142
# code block
msgid "~~~\n"
"RGB_band2_HARV_df <- as.data.frame(RGB_band2_HARV, xy = TRUE)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:148
# code block
msgid "~~~\n"
"ggplot() +\n"
"  geom_raster(data = RGB_band2_HARV_df,\n"
"              aes(x = x, y = y, alpha = HARV_RGB_Ortho)) + \n"
"  coord_equal()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:156
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-05-rgb-harv-band2-1.png\" title=\"plot of chunk rgb-harv-band2\" alt=\"plot of chunk rgb-harv-band2\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:158
# blockquote, which can be cascaded
msgid "> ## Challenge: Making Sense of Single Band Images"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:160
# blockquote, which can be cascaded
msgid "> Compare the plots of band 1 (red) and band 2 (green). Is the forested area darker or lighter in band 2 (the green band) compared to band 1 (the red band)?"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:161
msgid ">\n"
"> > ## Solution\n"
"> > We'd expect a *brighter* value for the forest in band 2 (green) than in\n"
"> > band 1 (red) because the leaves on trees of most often appear \"green\" -\n"
"> > healthy leaves reflect MORE green light than red light."
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:169
# header
msgid "## Raster Stacks in R"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:170
msgid "Next, we will work with all three image bands (red, green and blue) as an R\n"
"RasterStack object. We will then plot a 3-band composite, or full color,\n"
"image."
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:174
msgid "To bring in all bands of a multi-band raster, we use the`stack()` function."
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:177
# code block
msgid "~~~\n"
"RGB_stack_HARV <- stack(\"data/NEON-DS-Airborne-Remote-Sensing/HARV/RGB_Imagery/HARV_RGB_Ortho.tif\")\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:182
msgid "Let's preview the attributes of our stack object: "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:185
# code block
msgid "~~~\n"
"RGB_stack_HARV\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:192
# code block
msgid "~~~\n"
"class      : RasterStack \n"
"dimensions : 2317, 3073, 7120141, 3  (nrow, ncol, ncell, nlayers)\n"
"resolution : 0.25, 0.25  (x, y)\n"
"extent     : 731998.5, 732766.8, 4712956, 4713536  (xmin, xmax, ymin, ymax)\n"
"crs        : +proj=utm +zone=18 +datum=WGS84 +units=m +no_defs \n"
"names      : HARV_RGB_Ortho.1, HARV_RGB_Ortho.2, HARV_RGB_Ortho.3 \n"
"min values :                0,                0,                0 \n"
"max values :              255,              255,              255 \n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:204
msgid "We can view the attributes of each band in the stack in a single output: "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:207
# code block
msgid "~~~\n"
"RGB_stack_HARV@layers\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:214
# code block
msgid "~~~\n"
"[[1]]\n"
"class      : RasterLayer \n"
"band       : 1  (of  3  bands)\n"
"dimensions : 2317, 3073, 7120141  (nrow, ncol, ncell)\n"
"resolution : 0.25, 0.25  (x, y)\n"
"extent     : 731998.5, 732766.8, 4712956, 4713536  (xmin, xmax, ymin, ymax)\n"
"crs        : +proj=utm +zone=18 +datum=WGS84 +units=m +no_defs \n"
"source     : /home/travis/build/datacarpentry/r-raster-vector-geospatial/_episodes_rmd/data/NEON-DS-Airborne-Remote-Sensing/HARV/RGB_Imagery/HARV_RGB_Ortho.tif \n"
"names      : HARV_RGB_Ortho.1 \n"
"values     : 0, 255  (min, max)\n"
"\n"
"\n"
"[[2]]\n"
"class      : RasterLayer \n"
"band       : 2  (of  3  bands)\n"
"dimensions : 2317, 3073, 7120141  (nrow, ncol, ncell)\n"
"resolution : 0.25, 0.25  (x, y)\n"
"extent     : 731998.5, 732766.8, 4712956, 4713536  (xmin, xmax, ymin, ymax)\n"
"crs        : +proj=utm +zone=18 +datum=WGS84 +units=m +no_defs \n"
"source     : /home/travis/build/datacarpentry/r-raster-vector-geospatial/_episodes_rmd/data/NEON-DS-Airborne-Remote-Sensing/HARV/RGB_Imagery/HARV_RGB_Ortho.tif \n"
"names      : HARV_RGB_Ortho.2 \n"
"values     : 0, 255  (min, max)\n"
"\n"
"\n"
"[[3]]\n"
"class      : RasterLayer \n"
"band       : 3  (of  3  bands)\n"
"dimensions : 2317, 3073, 7120141  (nrow, ncol, ncell)\n"
"resolution : 0.25, 0.25  (x, y)\n"
"extent     : 731998.5, 732766.8, 4712956, 4713536  (xmin, xmax, ymin, ymax)\n"
"crs        : +proj=utm +zone=18 +datum=WGS84 +units=m +no_defs \n"
"source     : /home/travis/build/datacarpentry/r-raster-vector-geospatial/_episodes_rmd/data/NEON-DS-Airborne-Remote-Sensing/HARV/RGB_Imagery/HARV_RGB_Ortho.tif \n"
"names      : HARV_RGB_Ortho.3 \n"
"values     : 0, 255  (min, max)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:252
msgid "If we have hundreds of bands, we can specify which band we'd like to view\n"
"attributes for using an index value: "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:256
# code block
msgid "~~~\n"
"RGB_stack_HARV[[2]]\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:263
# code block
msgid "~~~\n"
"class      : RasterLayer \n"
"band       : 2  (of  3  bands)\n"
"dimensions : 2317, 3073, 7120141  (nrow, ncol, ncell)\n"
"resolution : 0.25, 0.25  (x, y)\n"
"extent     : 731998.5, 732766.8, 4712956, 4713536  (xmin, xmax, ymin, ymax)\n"
"crs        : +proj=utm +zone=18 +datum=WGS84 +units=m +no_defs \n"
"source     : /home/travis/build/datacarpentry/r-raster-vector-geospatial/_episodes_rmd/data/NEON-DS-Airborne-Remote-Sensing/HARV/RGB_Imagery/HARV_RGB_Ortho.tif \n"
"names      : HARV_RGB_Ortho.2 \n"
"values     : 0, 255  (min, max)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:275
msgid "We can also use the `ggplot` functions to plot the data in any layer\n"
"of our RasterStack object. Remember, we need to convert to a data\n"
"frame first. "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:280
# code block
msgid "~~~\n"
"RGB_stack_HARV_df  <- as.data.frame(RGB_stack_HARV, xy = TRUE)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:285
msgid "Each band in our RasterStack gets its own column in the data frame. Thus we have: "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:288
# code block
msgid "~~~\n"
"str(RGB_stack_HARV_df)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:295
# code block
msgid "~~~\n"
"'data.frame':	7120141 obs. of  5 variables:\n"
" $ x               : num  731999 731999 731999 731999 732000 ...\n"
" $ y               : num  4713535 4713535 4713535 4713535 4713535 ...\n"
" $ HARV_RGB_Ortho.1: num  0 2 6 0 16 0 0 6 1 5 ...\n"
" $ HARV_RGB_Ortho.2: num  1 0 9 0 5 0 4 2 1 0 ...\n"
" $ HARV_RGB_Ortho.3: num  0 10 1 0 17 0 4 0 0 7 ...\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:305
msgid "Let's create a histogram of the first band: "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:308
# code block
msgid "~~~\n"
"ggplot() +\n"
"  geom_histogram(data = RGB_stack_HARV_df, aes(HARV_RGB_Ortho.1))\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:321
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-05-rgb-harv-hist-band1-1.png\" title=\"plot of chunk rgb-harv-hist-band1\" alt=\"plot of chunk rgb-harv-hist-band1\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:323
msgid "And a raster plot of the second band: "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:326
# code block
msgid "~~~\n"
"ggplot() +\n"
"  geom_raster(data = RGB_stack_HARV_df,\n"
"              aes(x = x, y = y, alpha = HARV_RGB_Ortho.2)) + \n"
"  coord_quickmap()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:334
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-05-rgb-harv-plot-band2-1.png\" title=\"plot of chunk rgb-harv-plot-band2\" alt=\"plot of chunk rgb-harv-plot-band2\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:336
msgid "We can access any individual band in the same way."
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:338
# header
msgid "### Create A Three Band Image"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:339
msgid "To render a final three band, colored image in R, we use the `plotRGB()` function."
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:341
msgid "This function allows us to:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:343
# ordered list
msgid "1. Identify what bands we want to render in the red, green and blue regions. The"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:344
msgid "`plotRGB()` function defaults to a 1=red, 2=green, and 3=blue band order. However,\n"
"you can define what bands you'd like to plot manually. Manual definition of\n"
"bands is useful if you have, for example a near-infrared band and want to create\n"
"a color infrared image.\n"
"2. Adjust the `stretch` of the image to increase or decrease contrast."
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:350
msgid "Let's plot our 3-band image. Note that we can use the `plotRGB()`\n"
"function directly with our RasterStack object (we don't need a \n"
"dataframe as this function isn't part of the `ggplot2` package)."
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:355
# code block
msgid "~~~\n"
"plotRGB(RGB_stack_HARV,\n"
"        r = 1, g = 2, b = 3)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:361
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-05-plot-rgb-image-1.png\" title=\"plot of chunk plot-rgb-image\" alt=\"plot of chunk plot-rgb-image\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:363
msgid "The image above looks pretty good. We can explore whether applying a stretch to\n"
"the image might improve clarity and contrast using `stretch=\"lin\"` or\n"
"`stretch=\"hist\"`."
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:367
msgid "![Image Stretch]({{ site.baseurl }}/images/dc-spatial-raster/imageStretch_dark.jpg)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:369
msgid "When the range of pixel brightness values is closer to 0, a darker image is rendered by default. We can stretch \n"
"the values to extend to the full 0-255 range of potential values to increase the visual contrast of the image."
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:372
msgid "![Image Stretch light]({{ site.baseurl }}/images/dc-spatial-raster/imageStretch_light.jpg)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:374
msgid "When the range of pixel brightness values is closer to 255, a\n"
"lighter image is rendered by default. We can stretch the values to extend to\n"
"the full 0-255 range of potential values to increase the visual contrast of\n"
"the image."
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:381
# code block
msgid "~~~\n"
"plotRGB(RGB_stack_HARV,\n"
"        r = 1, g = 2, b = 3,\n"
"        scale = 800,\n"
"        stretch = \"lin\")\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:389
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-05-plot-rbg-image-linear-1.png\" title=\"plot of chunk plot-rbg-image-linear\" alt=\"plot of chunk plot-rbg-image-linear\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:392
# code block
msgid "~~~\n"
"plotRGB(RGB_stack_HARV,\n"
"        r = 1, g = 2, b = 3,\n"
"        scale = 800,\n"
"        stretch = \"hist\")\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:400
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-05-plot-rgb-image-hist-1.png\" title=\"plot of chunk plot-rgb-image-hist\" alt=\"plot of chunk plot-rgb-image-hist\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:402
msgid "In this case, the stretch doesn't enhance the contrast our image significantly\n"
"given the distribution of reflectance (or brightness) values is distributed well\n"
"between 0 and 255."
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:406
# blockquote, which can be cascaded
msgid "> ## Challenge - NoData Values"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:408
# blockquote, which can be cascaded
msgid "> Let's explore what happens with NoData values when working with "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:409
# blockquote, which can be cascaded
msgid "> RasterStack objects and using the"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:410
# blockquote, which can be cascaded
msgid "> `plotRGB()` function. We will use the "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:411
# blockquote, which can be cascaded
msgid "> `HARV_Ortho_wNA.tif` GeoTIFF file in the"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:412
# blockquote, which can be cascaded
msgid "> `NEON-DS-Airborne-Remote-Sensing/HARVRGB_Imagery/` directory."
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:414
# blockquote, which can be cascaded
msgid "> 1. View the files attributes. Are there `NoData` values assigned for this file?"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:415
# blockquote, which can be cascaded
msgid "> 2. If so, what is the `NoData` Value?"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:416
# blockquote, which can be cascaded
msgid "> 3. How many bands does it have?"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:417
# blockquote, which can be cascaded
msgid "> 4. Load the multi-band raster file into R."
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:418
# blockquote, which can be cascaded
msgid "> 5. Plot the object as a true color image."
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:419
# blockquote, which can be cascaded
msgid "> 6. What happened to the black edges in the data?"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:420
# blockquote, which can be cascaded
msgid "> 7. What does this tell us about the difference in the data structure between"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:421
# blockquote, which can be cascaded
msgid "> `HARV_Ortho_wNA.tif` and `HARV_RGB_Ortho.tif` (R object `RGB_stack`). How can"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:422
# blockquote, which can be cascaded
msgid "> you check?"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:425
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:428
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:472
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:478
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:480
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:489
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:494
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:616
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:698
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:701
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:728
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:730
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:743
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:747
# blockquote, which can be cascaded
msgid "> >"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:426
# blockquote, which can be cascaded
msgid "> > 1) First we use the `GDALinfo()` function to view the "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:427
# blockquote, which can be cascaded
msgid "> > data attributes."
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:431
# blockquote, which can be cascaded
msgid "> > GDALinfo(\"data/NEON-DS-Airborne-Remote-Sensing/HARV/RGB_Imagery/HARV_Ortho_wNA.tif\")"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:438
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:504
# blockquote, which can be cascaded
msgid "> > rows        2317 "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:439
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:505
# blockquote, which can be cascaded
msgid "> > columns     3073 "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:440
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:506
# blockquote, which can be cascaded
msgid "> > bands       3 "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:441
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:507
# blockquote, which can be cascaded
msgid "> > lower left origin.x        731998.5 "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:442
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:508
# blockquote, which can be cascaded
msgid "> > lower left origin.y        4712956 "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:443
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:509
# blockquote, which can be cascaded
msgid "> > res.x       0.25 "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:444
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:510
# blockquote, which can be cascaded
msgid "> > res.y       0.25 "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:445
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:511
# blockquote, which can be cascaded
msgid "> > ysign       -1 "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:446
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:512
# blockquote, which can be cascaded
msgid "> > oblique.x   0 "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:447
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:513
# blockquote, which can be cascaded
msgid "> > oblique.y   0 "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:448
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:514
# blockquote, which can be cascaded
msgid "> > driver      GTiff "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:449
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:515
# blockquote, which can be cascaded
msgid "> > projection  +proj=utm +zone=18 +datum=WGS84 +units=m +no_defs "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:450
# blockquote, which can be cascaded
msgid "> > file        data/NEON-DS-Airborne-Remote-Sensing/HARV/RGB_Imagery/HARV_Ortho_wNA.tif "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:451
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:517
# blockquote, which can be cascaded
msgid "> > apparent band summary:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:452
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:518
# blockquote, which can be cascaded
msgid "> >    GDType hasNoDataValue NoDataValue blockSize1 blockSize2"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:453
# blockquote, which can be cascaded
msgid "> > 1 Float64           TRUE       -9999          1       3073"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:454
# blockquote, which can be cascaded
msgid "> > 2 Float64           TRUE       -9999          1       3073"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:455
# blockquote, which can be cascaded
msgid "> > 3 Float64           TRUE       -9999          1       3073"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:456
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:522
# blockquote, which can be cascaded
msgid "> > apparent band statistics:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:457
# blockquote, which can be cascaded
msgid "> >   Bmin Bmax     Bmean      Bsd"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:458
# blockquote, which can be cascaded
msgid "> > 1    0  255 107.83651 30.01918"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:459
# blockquote, which can be cascaded
msgid "> > 2    0  255 130.09595 32.00168"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:460
# blockquote, which can be cascaded
msgid "> > 3    0  255  95.75979 16.57704"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:461
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:527
# blockquote, which can be cascaded
msgid "> > Metadata:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:462
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:528
# blockquote, which can be cascaded
msgid "> > AREA_OR_POINT=Area "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:466
# blockquote, which can be cascaded
msgid "> > 2) From the output above, we see that there are `NoData` values"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:467
# blockquote, which can be cascaded
msgid "> > and they are assigned the value of -9999. "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:469
# blockquote, which can be cascaded
msgid "> > 3) The data has three bands. "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:471
# blockquote, which can be cascaded
msgid "> > 4) To read in the file, we will use the `stack()` function: "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:475
# blockquote, which can be cascaded
msgid "> > HARV_NA <- stack(\"data/NEON-DS-Airborne-Remote-Sensing/HARV/RGB_Imagery/HARV_Ortho_wNA.tif\")"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:479
# blockquote, which can be cascaded
msgid "> > 5) We can plot the data with the `plotRGB()` function: "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:483
# blockquote, which can be cascaded
msgid "> > plotRGB(HARV_NA,"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:484
# blockquote, which can be cascaded
msgid "> >         r = 1, g = 2, b = 3)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:488
# blockquote, which can be cascaded
msgid "> > <img src=\"{{ site.baseurl }}/fig/rmd-05-harv-na-rgb-1.png\" title=\"plot of chunk harv-na-rgb\" alt=\"plot of chunk harv-na-rgb\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:490
# blockquote, which can be cascaded
msgid "> > 6) The black edges are not plotted."
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:491
# blockquote, which can be cascaded
msgid "> > 7) Both data sets have `NoData` values, however, in the RGB_stack the NoData value is not"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:492
# blockquote, which can be cascaded
msgid "> > defined in the tiff tags, thus R renders them as black as the reflectance"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:493
# blockquote, which can be cascaded
msgid "> > values are 0. The black edges in the other file are defined as -9999 and R renders them as NA."
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:497
# blockquote, which can be cascaded
msgid "> > GDALinfo(\"data/NEON-DS-Airborne-Remote-Sensing/HARV/RGB_Imagery/HARV_RGB_Ortho.tif\")"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:516
# blockquote, which can be cascaded
msgid "> > file        data/NEON-DS-Airborne-Remote-Sensing/HARV/RGB_Imagery/HARV_RGB_Ortho.tif "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:519
# blockquote, which can be cascaded
msgid "> > 1 Float64           TRUE   -1.7e+308          1       3073"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:520
# blockquote, which can be cascaded
msgid "> > 2 Float64           TRUE   -1.7e+308          1       3073"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:521
# blockquote, which can be cascaded
msgid "> > 3 Float64           TRUE   -1.7e+308          1       3073"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:523
# blockquote, which can be cascaded
msgid "> >   Bmin Bmax Bmean Bsd"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:524
# blockquote, which can be cascaded
msgid "> > 1    0  255   NaN NaN"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:525
# blockquote, which can be cascaded
msgid "> > 2    0  255   NaN NaN"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:526
# blockquote, which can be cascaded
msgid "> > 3    0  255   NaN NaN"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:535
# blockquote, which can be cascaded
msgid "> We can create a RasterStack from"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:536
# blockquote, which can be cascaded
msgid "> several, individual single-band GeoTIFFs too. We will do this in "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:537
# blockquote, which can be cascaded
msgid "> a later episode, "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:538
# blockquote, which can be cascaded
msgid "> [Raster Time Series Data in R]({{ site.baseurl }}/12-time-series-raster/). "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:541
# header
msgid "## RasterStack vs RasterBrick in R"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:543
msgid "The R RasterStack and RasterBrick object types can both store multiple bands.\n"
"However, how they store each band is different. The bands in a RasterStack are\n"
"stored as links to raster data that is located somewhere on our computer. A\n"
"RasterBrick contains all of the objects stored within the actual R object.\n"
"In most cases, we can work with a RasterBrick in the same way we might work\n"
"with a RasterStack. However a RasterBrick is often more efficient and faster\n"
"to process - which is important when working with larger files."
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:552
msgid ">\n"
"> You can read the help for the `brick()` function by typing `?brick`."
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:556
msgid "We can turn a RasterStack into a RasterBrick in R by using\n"
"`brick(StackName)`. Let's use the `object.size()` function to compare RasterStack and RasterBrick objects. First we will check\n"
"the size of our RasterStack object:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:561
# code block
msgid "~~~\n"
"object.size(RGB_stack_HARV)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:568
# code block
msgid "~~~\n"
"50272 bytes\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:573
msgid "Now we will create a RasterBrick object from our RasterStack data and view its size:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:576
# code block
msgid "~~~\n"
"RGB_brick_HARV <- brick(RGB_stack_HARV)\n"
"\n"
"object.size(RGB_brick_HARV)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:585
# code block
msgid "~~~\n"
"15256 bytes\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:590
msgid "Notice that in the RasterBrick, all of the bands are stored within the actual\n"
"object. Thus, the RasterBrick object size is much larger than the\n"
"RasterStack object."
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:594
msgid "You use the `plotRGB()` function to plot a RasterBrick too:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:597
# code block
msgid "~~~\n"
"plotRGB(RGB_brick_HARV)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:602
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-05-plot-brick-1.png\" title=\"plot of chunk plot-brick\" alt=\"plot of chunk plot-brick\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:604
# blockquote, which can be cascaded
msgid "> ## Challenge: What Functions Can Be Used on an R Object of a particular class?"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:606
# blockquote, which can be cascaded
msgid "> We can view various functions (or methods) available to use on an R object with"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:607
# blockquote, which can be cascaded
msgid "> `methods(class=class(objectNameHere))`. Use this to figure out:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:609
# blockquote, which can be cascaded
msgid "> 1. What methods can be used on the `RGB_stack_HARV` object?"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:610
# blockquote, which can be cascaded
msgid "> 2. What methods can be used on a single band within `RGB_stack_HARV`?"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:611
# blockquote, which can be cascaded
msgid "> 3. Why do you think there is a difference?"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:614
# blockquote, which can be cascaded
msgid "> > 1) We can see a list of all of the methods available for our"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:615
# blockquote, which can be cascaded
msgid "> > RasterStack object:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:619
# blockquote, which can be cascaded
msgid "> > methods(class=class(RGB_stack_HARV))"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:626
# blockquote, which can be cascaded
msgid "> >   [1] !                     !=                    [                    "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:627
# blockquote, which can be cascaded
msgid "> >   [4] [[                    [[<-                  [<-                  "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:628
# blockquote, which can be cascaded
msgid "> >   [7] %in%                  ==                    $                    "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:629
# blockquote, which can be cascaded
msgid "> >  [10] $<-                   addLayer              adjacent             "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:630
# blockquote, which can be cascaded
msgid "> >  [13] aggregate             all.equal             animate              "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:631
# blockquote, which can be cascaded
msgid "> >  [16] approxNA              area                  Arith                "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:632
# blockquote, which can be cascaded
msgid "> >  [19] as.array              as.character          as.data.frame        "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:633
# blockquote, which can be cascaded
msgid "> >  [22] as.integer            as.list               as.logical           "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:634
# blockquote, which can be cascaded
msgid "> >  [25] as.matrix             as.vector             atan2                "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:635
# blockquote, which can be cascaded
msgid "> >  [28] bbox                  boxplot               brick                "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:636
# blockquote, which can be cascaded
msgid "> >  [31] calc                  cellFromRowCol        cellFromRowColCombine"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:637
# blockquote, which can be cascaded
msgid "> >  [34] cellFromXY            cellStats             clamp                "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:638
# blockquote, which can be cascaded
msgid "> >  [37] click                 coerce                colFromCell          "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:639
# blockquote, which can be cascaded
msgid "> >  [40] colFromX              colSums               Compare              "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:640
# blockquote, which can be cascaded
msgid "> >  [43] coordinates           corLocal              couldBeLonLat        "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:641
# blockquote, which can be cascaded
msgid "> >  [46] cover                 crop                  crosstab             "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:642
# blockquote, which can be cascaded
msgid "> >  [49] crs<-                 cut                   cv                   "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:643
# blockquote, which can be cascaded
msgid "> >  [52] density               dim                   dim<-                "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:644
# blockquote, which can be cascaded
msgid "> >  [55] disaggregate          dropLayer             extend               "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:645
# blockquote, which can be cascaded
msgid "> >  [58] extent                extract               flip                 "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:646
# blockquote, which can be cascaded
msgid "> >  [61] freq                  getValues             getValuesBlock       "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:647
# blockquote, which can be cascaded
msgid "> >  [64] getValuesFocal        hasValues             head                 "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:648
# blockquote, which can be cascaded
msgid "> >  [67] hist                  image                 init                 "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:649
# blockquote, which can be cascaded
msgid "> >  [70] interpolate           intersect             is.factor            "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:650
# blockquote, which can be cascaded
msgid "> >  [73] is.finite             is.infinite           is.na                "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:651
# blockquote, which can be cascaded
msgid "> >  [76] is.nan                isLonLat              KML                  "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:652
# blockquote, which can be cascaded
msgid "> >  [79] labels                length                levels               "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:653
# blockquote, which can be cascaded
msgid "> >  [82] levels<-              log                   Logic                "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:654
# blockquote, which can be cascaded
msgid "> >  [85] mask                  match                 Math                 "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:655
# blockquote, which can be cascaded
msgid "> >  [88] Math2                 maxValue              mean                 "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:656
# blockquote, which can be cascaded
msgid "> >  [91] merge                 minValue              modal                "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:657
# blockquote, which can be cascaded
msgid "> >  [94] mosaic                names                 names<-              "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:658
# blockquote, which can be cascaded
msgid "> >  [97] ncell                 ncol                  ncol<-               "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:659
# blockquote, which can be cascaded
msgid "> > [100] nlayers               nrow                  nrow<-               "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:660
# blockquote, which can be cascaded
msgid "> > [103] origin                origin<-              overlay              "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:661
# blockquote, which can be cascaded
msgid "> > [106] pairs                 persp                 plot                 "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:662
# blockquote, which can be cascaded
msgid "> > [109] plotRGB               predict               print                "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:663
# blockquote, which can be cascaded
msgid "> > [112] proj4string           proj4string<-         quantile             "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:664
# blockquote, which can be cascaded
msgid "> > [115] raster                rasterize             ratify               "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:665
# blockquote, which can be cascaded
msgid "> > [118] readAll               readStart             readStop             "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:666
# blockquote, which can be cascaded
msgid "> > [121] reclassify            rectify               res                  "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:667
# blockquote, which can be cascaded
msgid "> > [124] res<-                 resample              rotate               "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:668
# blockquote, which can be cascaded
msgid "> > [127] rowColFromCell        rowFromCell           rowFromY             "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:669
# blockquote, which can be cascaded
msgid "> > [130] rowSums               sampleRandom          sampleRegular        "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:670
# blockquote, which can be cascaded
msgid "> > [133] scale                 select                setMinMax            "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:671
# blockquote, which can be cascaded
msgid "> > [136] setValues             shift                 show                 "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:672
# blockquote, which can be cascaded
msgid "> > [139] spplot                stack                 stackSelect          "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:673
# blockquote, which can be cascaded
msgid "> > [142] stretch               subs                  subset               "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:674
# blockquote, which can be cascaded
msgid "> > [145] Summary               summary               t                    "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:675
# blockquote, which can be cascaded
msgid "> > [148] tail                  text                  trim                 "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:676
# blockquote, which can be cascaded
msgid "> > [151] unique                unstack               values               "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:677
# blockquote, which can be cascaded
msgid "> > [154] values<-              weighted.mean         which.max            "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:678
# blockquote, which can be cascaded
msgid "> > [157] which.min             whiches.max           whiches.min          "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:679
# blockquote, which can be cascaded
msgid "> > [160] wkt                   writeRaster           xFromCell            "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:680
# blockquote, which can be cascaded
msgid "> > [163] xFromCol              xmax                  xmax<-               "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:681
# blockquote, which can be cascaded
msgid "> > [166] xmin                  xmin<-                xres                 "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:682
# blockquote, which can be cascaded
msgid "> > [169] xyFromCell            yFromCell             yFromRow             "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:683
# blockquote, which can be cascaded
msgid "> > [172] ymax                  ymax<-                ymin                 "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:684
# blockquote, which can be cascaded
msgid "> > [175] ymin<-                yres                  zonal                "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:685
# blockquote, which can be cascaded
msgid "> > [178] zoom                 "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:686
#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:714
# blockquote, which can be cascaded
msgid "> > see '?methods' for accessing help and source code"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:689
# blockquote, which can be cascaded
msgid "> > 2) And compare that with the methods available for a single band:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:692
# blockquote, which can be cascaded
msgid "> > methods(class=class(RGB_stack_HARV[1]))"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:699
# blockquote, which can be cascaded
msgid "> > Warning in .S3methods(generic.function, class, envir): 'class' is of length > 1;"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:700
# blockquote, which can be cascaded
msgid "> > only the first element will be used"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:707
# blockquote, which can be cascaded
msgid "> >  [1] [             [<-           anyDuplicated as_tibble     as.data.frame"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:708
# blockquote, which can be cascaded
msgid "> >  [6] as.raster     bind          boxplot       brick         coerce       "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:709
# blockquote, which can be cascaded
msgid "> > [11] coordinates   determinant   duplicated    edit          extent       "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:710
# blockquote, which can be cascaded
msgid "> > [16] extract       head          initialize    isSymmetric   Math         "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:711
# blockquote, which can be cascaded
msgid "> > [21] Math2         Ops           raster        rasterize     relist       "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:712
# blockquote, which can be cascaded
msgid "> > [26] subset        summary       surfaceArea   tail          trim         "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:713
# blockquote, which can be cascaded
msgid "> > [31] unique        weighted.mean writeValues  "
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:717
# blockquote, which can be cascaded
msgid "> > 3) There are far more things one could or want to ask of a full stack than of"
msgstr ""

#: r-raster-vector-geospatial/_episodes/05-raster-multi-band-in-r.md:718
# blockquote, which can be cascaded
msgid "> > a single band."
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:1
# Front Matter
msgid "---\n"
"# Please do not edit this file directly; it is auto generated.\n"
"# Instead, please edit 06-vector-open-shapefile-in-r.md in _episodes_rmd/\n"
"title: \"Open and Plot Shapefiles in R\"\n"
"teaching: 20\n"
"exercises: 10\n"
"questions:\n"
"- \"How can I distinguish between and visualize point, line and polygon vector data?\"\n"
"objectives:\n"
"- \"Know the difference between point, line, and polygon vector elements.\"\n"
"- \"Load point, line, and polygon shapefiles into R.\"\n"
"- \"Access the attributes of a spatial object in R.\"\n"
"keypoints:\n"
"- \"Shapefile metadata include geometry type, CRS, and extent.\"\n"
"- \"Load spatial objects into R with the `st_read()` function.\"\n"
"- \"Spatial objects can be plotted directly with `ggplot` using the `geom_sf()` function. No need to convert to a dataframe.\"\n"
"source: Rmd\n"
"---"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:23
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:22
#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:25
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:20
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:23
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:22
# code block
msgid "~~~\n"
"Error in library(sf): there is no package called 'sf'\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:33
msgid "Starting with this episode, we will be moving from working with raster\n"
"data to working with vector data. In this episode, we will open and plot point, line and polygon vector data\n"
"stored in shapefile format in R. These data refer to the [NEON Harvard Forest field site](https://www.neonscience.org/field-sites/field-sites-map/HARV), which we have been working with in previous\n"
"episodes. In later episodes, we will learn how to work with raster and\n"
"vector data together and combine them into a single plot."
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:39
# header
msgid "## Import Shapefiles"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:41
msgid "We will use the `sf` package to work with vector data in R. Notice that the\n"
"`rgdal` package automatically loads when `sf` is loaded. We will also use the\n"
"`raster` package, which has been loaded in previous episodes, so we can explore raster and vector spatial metadata using similar commands. Make sure you have the `sf` library loaded. "
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:46
# code block
msgid "~~~\n"
"library(sf)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:51
msgid "The shapefiles that we will import are:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:53
# unordered list
msgid "* A polygon shapefile representing our field site boundary,"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:54
# unordered list
msgid "* A line shapefile representing roads, and"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:55
# unordered list
msgid "* A point shapefile representing the location of the [Fisher flux tower](https://www.neonscience.org/data-collection/flux-tower-measurements)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:56
msgid "located at the [NEON Harvard Forest field site](https://www.neonscience.org/field-sites/field-sites-map/HARV)."
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:58
msgid "The first shapefile that we will open contains the boundary of our study area\n"
"(or our Area Of Interest or AOI, hence the name `aoiBoundary`). To import\n"
"shapefiles we use the `sf` function `st_read()`. `st_read()` requires the file path to the shapefile."
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:62
msgid "Let's import our AOI:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:65
# code block
msgid "~~~\n"
"aoi_boundary_HARV <- st_read(\n"
"  \"data/NEON-DS-Site-Layout-Files/HARV/HarClip_UTMZ18.shp\")\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:73
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:42
#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:31
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:44
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:36
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:43
# code block
msgid "~~~\n"
"Error in st_read(\"data/NEON-DS-Site-Layout-Files/HARV/HarClip_UTMZ18.shp\"): could not find function \"st_read\"\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:78
# header
msgid "## Shapefile Metadata & Attributes"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:80
msgid "When we import the `HarClip_UTMZ18` shapefile layer into R (as our\n"
"`aoi_boundary_HARV` object), the `st_read()` function automatically stores\n"
"information about the data. We are particularly interested in the geospatial\n"
"metadata, describing the format, CRS, extent, and other components of\n"
"the vector data, and the attributes which describe properties associated\n"
"with each individual vector object."
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:88
# blockquote, which can be cascaded
msgid "> The [Explore and Plot by Shapefile Attributes]({{site.baseurl}}/07-vector-shapefile-attributes-in-r/)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:89
# blockquote, which can be cascaded
msgid "> episode provides more information on both metadata and attributes"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:90
# blockquote, which can be cascaded
msgid "> and using attributes to subset and plot data."
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:93
# header
msgid "## Spatial Metadata"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:94
msgid "Key metadata for all shapefiles include:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:96
# ordered list
msgid "1. **Object Type:** the class of the imported object."
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:97
# ordered list
msgid "2. **Coordinate Reference System (CRS):** the projection of the data."
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:98
# ordered list
msgid "3. **Extent:** the spatial extent (i.e. geographic area that the shapefile covers) of"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:99
msgid "the shapefile. Note that the spatial extent for a shapefile represents the combined\n"
"extent for all spatial objects in the shapefile."
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:102
msgid "We can view shapefile metadata using the `st_geometry_type()`, `st_crs()` and `st_bbox()` functions. First, let's view the\n"
"geometry type for our AOI shapefile: "
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:106
# code block
msgid "~~~\n"
"st_geometry_type(aoi_boundary_HARV)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:113
# code block
msgid "~~~\n"
"Error in st_geometry_type(aoi_boundary_HARV): could not find function \"st_geometry_type\"\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:118
msgid "Our `aoi_boundary_HARV` is a polygon object. The 18 levels shown below\n"
"our output list the possible categories of the geometry type. \n"
"Now let's check what CRS this file data is in:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:123
# code block
msgid "~~~\n"
"st_crs(aoi_boundary_HARV)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:130
# code block
msgid "~~~\n"
"Error in st_crs(aoi_boundary_HARV): could not find function \"st_crs\"\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:135
msgid "Our data in the CRS **UTM zone 18N**. The CRS is critical to \n"
"interpreting the object's extent values as it specifies units. To find\n"
"the extent of our AOI, we can use the `st_bbox()` function: "
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:140
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:269
# code block
msgid "~~~\n"
"st_bbox(aoi_boundary_HARV)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:147
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:276
# code block
msgid "~~~\n"
"Error in st_bbox(aoi_boundary_HARV): could not find function \"st_bbox\"\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:152
msgid "The spatial extent of a shapefile or R spatial object represents the geographic \"edge\" or location that is the furthest north, south east and west. Thus is represents the overall geographic coverage of the spatial object. Image Source: National Ecological Observatory Network (NEON)."
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:154
msgid "![Extent image]({{ site.baseurl }}/images/dc-spatial-vector/spatial_extent.png)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:156
msgid "Lastly, we can view all of the metadata and attributes for this shapefile object\n"
"by printing it to the screen:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:160
# code block
msgid "~~~\n"
"aoi_boundary_HARV\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:167
# code block
msgid "~~~\n"
"Error in eval(expr, envir, enclos): object 'aoi_boundary_HARV' not found\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:172
# header
msgid "## Spatial Data Attributes"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:173
msgid "We introduced the idea of spatial data attributes in [an earlier lesson](https://datacarpentry.org/organization-geospatial/02-intro-vector-data). Now we will explore\n"
"how to use spatial data attributes stored in our data to plot\n"
"different features."
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:177
# header
msgid "## Plot a Shapefile"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:179
msgid "Next, let's visualize the data in our `sf` object using the `ggplot`\n"
"package. Unlike with raster data, we do not need to convert vector\n"
"data to a dataframe before plotting with `ggplot`. "
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:183
msgid "We're going to customize our boundary plot by setting the \n"
"size, color, and fill for our plot. When plotting `sf` objects with `ggplot2`, you need to use the `coord_sf()` coordinate system."
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:187
# code block
msgid "~~~\n"
"ggplot() + \n"
"  geom_sf(data = aoi_boundary_HARV, size = 3, color = \"black\", fill = \"cyan1\") + \n"
"  ggtitle(\"AOI Boundary Plot\") + \n"
"  coord_sf()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:197
#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:98
#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:121
#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:144
#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:173
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:373
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:152
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:447
# code block
msgid "~~~\n"
"Error in fortify(data): object 'aoi_boundary_HARV' not found\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:202
# blockquote, which can be cascaded
msgid "> ## Challenge: Import Line and Point Shapefiles"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:204
# blockquote, which can be cascaded
msgid "> Using the steps above, import the HARV_roads and HARVtower_UTM18N layers into"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:205
# blockquote, which can be cascaded
msgid "> R. Call the HARV_roads object `lines_HARV` and the HARVtower_UTM18N"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:206
# blockquote, which can be cascaded
msgid "> `point_HARV`."
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:208
# blockquote, which can be cascaded
msgid "> Answer the following questions:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:210
# blockquote, which can be cascaded
msgid "> 1. What type of R spatial object is created when you import each layer?"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:212
# blockquote, which can be cascaded
msgid "> 2. What is the CRS and extent for each object?"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:214
# blockquote, which can be cascaded
msgid "> 3. Do the files contain points, lines, or polygons?"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:216
# blockquote, which can be cascaded
msgid "> 4. How many spatial objects are in each file?"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:220
# blockquote, which can be cascaded
msgid "> > First we import the data: "
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:223
# blockquote, which can be cascaded
msgid "> > lines_HARV <- st_read(\"data/NEON-DS-Site-Layout-Files/HARV/HARV_roads.shp\")"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:230
# blockquote, which can be cascaded
msgid "> > Error in st_read(\"data/NEON-DS-Site-Layout-Files/HARV/HARV_roads.shp\"): could not find function \"st_read\""
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:237
# blockquote, which can be cascaded
msgid "> > point_HARV <- st_read(\"data/NEON-DS-Site-Layout-Files/HARV/HARVtower_UTM18N.shp\")"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:244
# blockquote, which can be cascaded
msgid "> > Error in st_read(\"data/NEON-DS-Site-Layout-Files/HARV/HARVtower_UTM18N.shp\"): could not find function \"st_read\""
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:248
# blockquote, which can be cascaded
msgid "> > Then we check its class: "
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:251
# blockquote, which can be cascaded
msgid "> > class(lines_HARV)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:258
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:711
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:740
# blockquote, which can be cascaded
msgid "> > Error in eval(expr, envir, enclos): object 'lines_HARV' not found"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:265
# blockquote, which can be cascaded
msgid "> > class(point_HARV)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:272
# blockquote, which can be cascaded
msgid "> > Error in eval(expr, envir, enclos): object 'point_HARV' not found"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:275
# blockquote, which can be cascaded
msgid "> > We also check the CRS and extent of each object: "
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:278
# blockquote, which can be cascaded
msgid "> > st_crs(lines_HARV)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:285
# blockquote, which can be cascaded
msgid "> > Error in st_crs(lines_HARV): could not find function \"st_crs\""
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:292
# blockquote, which can be cascaded
msgid "> > st_bbox(lines_HARV)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:299
# blockquote, which can be cascaded
msgid "> > Error in st_bbox(lines_HARV): could not find function \"st_bbox\""
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:306
# blockquote, which can be cascaded
msgid "> > st_crs(point_HARV)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:313
# blockquote, which can be cascaded
msgid "> > Error in st_crs(point_HARV): could not find function \"st_crs\""
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:320
# blockquote, which can be cascaded
msgid "> > st_bbox(point_HARV)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:327
# blockquote, which can be cascaded
msgid "> > Error in st_bbox(point_HARV): could not find function \"st_bbox\""
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:330
# blockquote, which can be cascaded
msgid "> > To see the number of objects in each file, we can look at the output from when we read these objects into R. "
msgstr ""

#: r-raster-vector-geospatial/_episodes/06-vector-open-shapefile-in-r.md:331
# blockquote, which can be cascaded
msgid "> > `lines_HARV` contains 13 features (all lines) and `point_HARV` contains only one point. "
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:1
# Front Matter
msgid "---\n"
"# Please do not edit this file directly; it is auto generated.\n"
"# Instead, please edit 07-vector-shapefile-attributes-in-r.md in _episodes_rmd/\n"
"title: \"Explore and Plot by Vector Layer Attributes\"\n"
"teaching: 40\n"
"exercises: 20\n"
"questions:\n"
"- \"How can I compute on the attributes of a spatial object?\"\n"
"objectives:\n"
"- \"Query attributes of a spatial object.\"\n"
"- \"Subset spatial objects using specific attribute values.\"\n"
"- \"Plot a vector feature, colored by unique attribute values.\"\n"
"keypoints:\n"
"- \"Spatial objects in `sf` are similar to standard data frames and can be manipulated using the same functions.\"\n"
"- \"Almost any feature of a plot can be customized using the various functions and options in the `ggplot2` package.\"\n"
"source: Rmd\n"
"---"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:28
#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:45
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:58
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:50
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:29
# code block
msgid "~~~\n"
"Error in st_read(\"data/NEON-DS-Site-Layout-Files/HARV/HARVtower_UTM18N.shp\"): could not find function \"st_read\"\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:35
#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:38
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:51
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:29
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:36
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:106
# code block
msgid "~~~\n"
"Error in st_read(\"data/NEON-DS-Site-Layout-Files/HARV/HARV_roads.shp\"): could not find function \"st_read\"\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:52
msgid "This episode continues our discussion of vector layer attributes and \n"
"covers how to work with vector layer attributes in R. It covers how\n"
"to identify and query layer\n"
"attributes, as well as how to subset features by specific attribute values.\n"
"Finally, we will learn how to plot a feature according to a set of attribute\n"
"values."
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:59
#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:62
# header
msgid "## Load the Data"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:60
msgid "We will continue using the `sf`, `raster` and `ggplot2` packages in this episode. Make sure that you have these packages loaded. We will\n"
"continue to work with the three shapefiles (vector layers) that we loaded in the\n"
"[Open and Plot Shapefiles in R]({{site.baseurl}}/06-vector-open-shapefile-in-r/) episode."
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:64
# header
msgid "## Query Vector Feature Metadata"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:66
msgid "As we discussed in the\n"
"[Open and Plot Shapefiles in R]({{site.baseurl}}/06-vector-open-shapefile-in-r/) episode,\n"
"we can view metadata associated with an R object using:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:70
# unordered list
msgid "* `st_geometry_type()` - The type of vector data stored in the object."
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:71
# unordered list
msgid "* `nrow()` - The number of features in the object"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:72
# unordered list
msgid "* `st_bbox()` - The spatial extent (geographic area covered by) "
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:73
msgid "of the object.\n"
"* `st_crs()` - The CRS (spatial projection) of the data."
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:76
msgid "We started to explore our `point_HARV` object in the previous episode.\n"
"To see a summary of all of the metadata associated with our `point_HARV` object, we can view the object with `View(point_HARV)` or print a summary of the object itself to the console."
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:80
# code block
msgid "~~~\n"
"point_HARV\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:87
# code block
msgid "~~~\n"
"Error in eval(expr, envir, enclos): object 'point_HARV' not found\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:92
msgid "We can use the `ncol` function to count the number of attributes associated with a spatial object too. Note that the geometry is just another column and counts towards the total."
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:95
# code block
msgid "~~~\n"
"ncol(lines_HARV)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:102
# code block
msgid "~~~\n"
"Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'ncol': object 'lines_HARV' not found\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:107
msgid "We can view the individual name of each attribute using the\n"
"`names()` function in R:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:111
# code block
msgid "~~~\n"
"names(lines_HARV)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:118
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:224
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:65
# code block
msgid "~~~\n"
"Error in eval(expr, envir, enclos): object 'lines_HARV' not found\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:123
msgid "We could also view just the first 6 rows\n"
"of attribute values using the `head()` function to get a preview of the data:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:127
# code block
msgid "~~~\n"
"head(lines_HARV)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:134
# code block
msgid "~~~\n"
"Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'head': object 'lines_HARV' not found\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:139
# blockquote, which can be cascaded
msgid "> ## Challenge: Attributes for Different Spatial Classes"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:140
msgid ">\n"
"> Explore the attributes associated with the `point_HARV` and `aoi_boundary_HARV` spatial objects.\n"
">\n"
"> 1. How many attributes does each have?\n"
"> 2. Who owns the site in the `point_HARV` data object?\n"
"> 3. Which of the following is NOT an attribute of the `point_HARV` data object?\n"
">\n"
">     A) Latitude      B) County     C) Country\n"
">\n"
"> > ## Answers\n"
"> > 1) To find the number of attributes, we use the `ncol()` function: \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > ncol(point_HARV)\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'ncol': object 'point_HARV' not found\n"
"> > ~~~\n"
"> > {: .error}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > ncol(aoi_boundary_HARV)\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'ncol': object 'aoi_boundary_HARV' not found\n"
"> > ~~~\n"
"> > {: .error}\n"
"> > 2) Ownership information is in a column named `Ownership`: \n"
"> > \n"
"> > ~~~\n"
"> > point_HARV$Ownership\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > Error in eval(expr, envir, enclos): object 'point_HARV' not found\n"
"> > ~~~\n"
"> > {: .error}\n"
"> > 3) To see a list of all of the attributes, we can use the\n"
"> > `names()` function: \n"
"> > \n"
"> > ~~~\n"
"> > names(point_HARV)\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > Error in eval(expr, envir, enclos): object 'point_HARV' not found\n"
"> > ~~~\n"
"> > {: .error}\n"
"> > \"Country\" is not an attribute of this object. "
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:209
# header
msgid "## Explore Values within One Attribute"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:210
msgid "We can explore individual values stored within a particular attribute.\n"
"Comparing attributes to a spreadsheet or a data frame, this is similar\n"
"to exploring values in a column. We did this with the `gapminder` dataframe in [an earlier lesson](https://datacarpentry.org/r-intro-geospatial/05-data-subsetting/index.html). For spatial objects, we can use the same syntax: `objectName$attributeName`."
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:214
msgid "We can see the contents of the `TYPE` field of our lines feature:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:217
# code block
msgid "~~~\n"
"lines_HARV$TYPE\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:229
msgid "To see only unique values within the `TYPE` field, we can use the\n"
"`levels()` function for extracting the possible values of a\n"
"categorical variable. The special term for categorical variables\n"
"within R is factor. We worked with factors a little bit in [an earlier lesson](https://datacarpentry.org/r-intro-geospatial/03-data-structures-part1/index.html)."
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:235
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:453
# code block
msgid "~~~\n"
"levels(lines_HARV$TYPE)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:242
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:460
# code block
msgid "~~~\n"
"Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'levels': object 'lines_HARV' not found\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:247
# header
msgid "### Subset Features"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:248
msgid "We can use the `filter()` function from `dplyr` that we worked with in [an earlier lesson](https://datacarpentry.org/r-intro-geospatial/06-dplyr) to select a subset of features\n"
"from a spatial object in R, just like with data frames."
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:251
msgid "For example, we might be interested only in features that are of `TYPE` \"footpath\". Once we subset out this data, we can use it as input to other code so that code only operates on the footpath lines."
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:254
# code block
msgid "~~~\n"
"footpath_HARV <- lines_HARV %>% \n"
"  filter(TYPE == \"footpath\")\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:262
# code block
msgid "~~~\n"
"Error in eval(lhs, parent, parent): object 'lines_HARV' not found\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:269
# code block
msgid "~~~\n"
"nrow(footpath_HARV)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:276
# code block
msgid "~~~\n"
"Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'nrow': object 'footpath_HARV' not found\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:281
msgid "Our subsetting operation reduces the `features` count to 2. This means\n"
"that only two feature lines in our spatial object have the attribute\n"
"`TYPE == footpath`. We can plot only the footpath lines:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:286
# code block
msgid "~~~\n"
"ggplot() + \n"
"  geom_sf(data = footpath_HARV) +\n"
"  ggtitle(\"NEON Harvard Forest Field Site\", subtitle = \"Footpaths\") + \n"
"  coord_sf()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:296
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:322
# code block
msgid "~~~\n"
"Error in fortify(data): object 'footpath_HARV' not found\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:301
msgid "There are two features in our footpaths subset. Why does the plot look like\n"
"there is only one feature? Let's adjust the colors used in our plot. If we have\n"
"2 features in our vector object, we can plot each using a unique color by\n"
"assigning a column name to the color aesthetic (`color =`). We use the syntax\n"
"`aes(color = )` to do this. We can also alter the default line thickness by\n"
"using the `size =` parameter, as the default value of 0.5 can be hard to see.\n"
"Note that size is placed outside of the `aes()` function, as we are not\n"
"connecting line thickness to a data variable."
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:311
# code block
msgid "~~~\n"
"ggplot() + \n"
"  geom_sf(data = footpath_HARV, aes(color = factor(OBJECTID)), size = 1.5) +\n"
"  labs(color = 'Footpath ID') +\n"
"  ggtitle(\"NEON Harvard Forest Field Site\", subtitle = \"Footpaths\") + \n"
"  coord_sf()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:327
msgid "Now, we see that there are in fact two features in our plot!"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:329
# blockquote, which can be cascaded
msgid "> ## Challenge: Subset Spatial Line Objects Part 1"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:331
# blockquote, which can be cascaded
msgid "> Subset out all `boardwalk` from the lines layer and plot it."
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:332
msgid ">\n"
"> > ## Answers\n"
"> > \n"
"> > First we will save an object with only the boardwalk lines:\n"
"> > \n"
"> > ~~~\n"
"> > boardwalk_HARV <- lines_HARV %>% \n"
"> >   filter(TYPE == \"boardwalk\")\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > Error in eval(lhs, parent, parent): object 'lines_HARV' not found\n"
"> > ~~~\n"
"> > {: .error}\n"
"> > Let's check how many features there are in this subset: \n"
"> > \n"
"> > ~~~\n"
"> > nrow(boardwalk_HARV)\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'nrow': object 'boardwalk_HARV' not found\n"
"> > ~~~\n"
"> > {: .error}\n"
"> > Now let's plot that data: \n"
"> > \n"
"> > ~~~\n"
"> > ggplot() + \n"
"> >   geom_sf(data = boardwalk_HARV, size = 1.5) +\n"
"> >   ggtitle(\"NEON Harvard Forest Field Site\", subtitle = \"Boardwalks\") + \n"
"> >   coord_sf()\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > Error in fortify(data): object 'boardwalk_HARV' not found\n"
"> > ~~~\n"
"> > {: .error}"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:381
# blockquote, which can be cascaded
msgid "> ## Challenge: Subset Spatial Line Objects Part 2"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:382
msgid ">\n"
"> Subset out all `stone wall` features from the lines layer and plot it. For each plot, color each feature using a unique color.\n"
">\n"
"> > ## Answer\n"
"> >\n"
"> > First we will save an object with only the stone wall lines\n"
"> > and check the number of features: \n"
"> > \n"
"> > ~~~\n"
"> > stoneWall_HARV <- lines_HARV %>% \n"
"> >   filter(TYPE == \"stone wall\")\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > Error in eval(lhs, parent, parent): object 'lines_HARV' not found\n"
"> > ~~~\n"
"> > {: .error}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > nrow(stoneWall_HARV)\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'nrow': object 'stoneWall_HARV' not found\n"
"> > ~~~\n"
"> > {: .error}\n"
"> > Now we can plot the data: \n"
"> > \n"
"> > ~~~\n"
"> > ggplot() +\n"
"> >   geom_sf(data = stoneWall_HARV, aes(color = factor(OBJECTID)), size = 1.5) +\n"
"> >   labs(color = 'Wall ID') +\n"
"> >   ggtitle(\"NEON Harvard Forest Field Site\", subtitle = \"Stonewalls\") + \n"
"> >   coord_sf()\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > Error in fortify(data): object 'stoneWall_HARV' not found\n"
"> > ~~~\n"
"> > {: .error}"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:436
# header
msgid "## Customize Plots"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:438
msgid "In the examples above, `ggplot()` automatically selected colors for\n"
"each line based on a default color order. If we don't like those\n"
"default colors, we can create a vector of colors - one for each\n"
"feature. To create this vector we can use the following syntax:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:443
msgid "`c(\"color_one\", \"color_two\", \"color_three\")[object$factor]`"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:445
msgid "Note in the above example we have"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:447
# ordered list
msgid "1. a vector of colors - one for each factor value (unique attribute value)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:448
# ordered list
msgid "2. the attribute itself (`[object$factor]`) of class factor."
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:450
msgid "First we will check how many unique levels our factor has:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:465
msgid "Then we can create a palette of four colors, one for each\n"
"feature in our vector object."
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:469
# code block
msgid "~~~\n"
"road_colors <- c(\"blue\", \"green\", \"navy\", \"purple\")\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:474
msgid "We can tell `ggplot` to use these colors when we plot the data."
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:477
# code block
msgid "~~~\n"
"ggplot() +\n"
"  geom_sf(data = lines_HARV, aes(color = TYPE)) + \n"
"  scale_color_manual(values = road_colors) +\n"
"  labs(color = 'Road Type') +\n"
"  ggtitle(\"NEON Harvard Forest Field Site\", subtitle = \"Roads & Trails\") + \n"
"  coord_sf()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:489
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:522
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:624
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:650
#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:673
# code block
msgid "~~~\n"
"Error in fortify(data): object 'lines_HARV' not found\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:494
# header
msgid "### Adjust Line Width"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:495
msgid "We adjusted line width universally earlier. If we want a unique line width for each factor level or attribute category\n"
"in our spatial object, we can use the same syntax that we used for colors, above."
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:498
msgid "We already know that we have four different `TYPE` levels in the lines_HARV object, so we will set four different line widths."
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:501
# code block
msgid "~~~\n"
"line_widths <- c(1, 2, 3, 4)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:506
msgid "We can use those line widths when we plot the data."
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:509
# code block
msgid "~~~\n"
"ggplot() +\n"
"  geom_sf(data = lines_HARV, aes(color = TYPE, size = TYPE)) + \n"
"  scale_color_manual(values = road_colors) +\n"
"  labs(color = 'Road Type') +\n"
"  scale_size_manual(values = line_widths) +\n"
"  ggtitle(\"NEON Harvard Forest Field Site\", subtitle = \"Roads & Trails - Line width varies\") + \n"
"  coord_sf()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:527
msgid "Note that we could also use `aes(size = TYPE)` to tie the line thickness to the TYPE variable, so long as we had been careful to set factor levels appropriately. ggplot prints a warning when you do this, because it is not considered a good practice to plot non-spatial data this way."
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:529
# blockquote, which can be cascaded
msgid "> ## Challenge: Plot Line Width by Attribute"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:531
# blockquote, which can be cascaded
msgid "> In the example above, we set the line widths to be 1, 2, 3, and 4."
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:532
# blockquote, which can be cascaded
msgid "> Because R orders factor levels alphabetically by default,"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:533
# blockquote, which can be cascaded
msgid "> this gave us a plot where woods roads (the last factor level)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:534
# blockquote, which can be cascaded
msgid "> were the thickest and boardwalks were the thinnest."
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:535
msgid ">\n"
"> Let's create another plot where we show the different line types\n"
"> with the following thicknesses:\n"
">\n"
"> 1. woods road size = 6\n"
"> 2. boardwalks size = 1\n"
"> 3. footpath size = 3\n"
"> 4. stone wall size = 2\n"
"> \n"
"> > ## Answers\n"
"> > \n"
"> > First we need to look at the levels of our factor to see\n"
"> > what order the road types are in:\n"
"> >\n"
"> > \n"
"> > ~~~\n"
"> > levels(lines_HARV$TYPE)\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'levels': object 'lines_HARV' not found\n"
"> > ~~~\n"
"> > {: .error}\n"
"> >\n"
"> > We then can create our `line_width` vector setting each of the\n"
"> > levels to the desired thickness.\n"
"> >\n"
"> > \n"
"> > ~~~\n"
"> > line_width <- c(1, 3, 2, 6)\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> >\n"
"> > Now we can create our plot.\n"
"> >\n"
"> > \n"
"> > ~~~\n"
"> > ggplot() +\n"
"> >   geom_sf(data = lines_HARV, aes(size = TYPE)) +\n"
"> >   scale_size_manual(values = line_width) +\n"
"> >   ggtitle(\"NEON Harvard Forest Field Site\", subtitle = \"Roads & Trails - Line width varies\") + \n"
"> >   coord_sf()\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > Error in fortify(data): object 'lines_HARV' not found\n"
"> > ~~~\n"
"> > {: .error}"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:593
# header
msgid "### Add Plot Legend"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:595
msgid "We can add a legend to our plot too. When we add a legend, we use the following\n"
"elements to specify labels and colors:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:598
# unordered list
msgid "* `bottomright`: We specify the location of our legend by using a default"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:599
msgid "keyword. We could also use `top`, `topright`, etc.\n"
"* `levels(objectName$attributeName)`: Label the legend elements using the\n"
"categories of levels in an attribute (e.g., levels(lines_HARV$TYPE) means use\n"
"the levels boardwalk, footpath, etc).\n"
"* `fill =`: apply unique colors to the boxes in our legend. `palette()` is\n"
"the default set of colors that R applies to all plots."
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:606
msgid "Let's add a legend to our plot. We will use the `road_colors` object\n"
"that we created above to color the legend. We can customize the\n"
"appearance of our legend by manually setting different parameters."
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:611
# code block
msgid "~~~\n"
"ggplot() + \n"
"  geom_sf(data = lines_HARV, aes(color = TYPE), size = 1.5) +\n"
"  scale_color_manual(values = road_colors) +\n"
"  labs(color = 'Road Type') + \n"
"  ggtitle(\"NEON Harvard Forest Field Site\", \n"
"          subtitle = \"Roads & Trails - Default Legend\") + \n"
"  coord_sf()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:629
msgid "We can change the appearance of our legend by manually setting different parameters."
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:631
# unordered list
msgid "* `legend.text`: change the font size"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:632
# unordered list
msgid "* `legend.box.background`: add an outline box"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:635
# code block
msgid "~~~\n"
"ggplot() + \n"
"  geom_sf(data = lines_HARV, aes(color = TYPE), size = 1.5) +\n"
"  scale_color_manual(values = road_colors) + \n"
"  labs(color = 'Road Type') +\n"
"  theme(legend.text = element_text(size = 20), \n"
"        legend.box.background = element_rect(size = 1)) + \n"
"  ggtitle(\"NEON Harvard Forest Field Site\", \n"
"          subtitle = \"Roads & Trails - Modified Legend\") +\n"
"  coord_sf()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:656
# code block
msgid "~~~\n"
"new_colors <- c(\"springgreen\", \"blue\", \"magenta\", \"orange\")\n"
"\n"
"ggplot() + \n"
"  geom_sf(data = lines_HARV, aes(color = TYPE), size = 1.5) + \n"
"  scale_color_manual(values = new_colors) +\n"
"  labs(color = 'Road Type') +\n"
"  theme(legend.text = element_text(size = 20), \n"
"        legend.box.background = element_rect(size = 1)) + \n"
"  ggtitle(\"NEON Harvard Forest Field Site\", \n"
"          subtitle = \"Roads & Trails - Pretty Colors\") +\n"
"  coord_sf()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:679
# blockquote, which can be cascaded
msgid "> You can modify the default R color palette"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:680
# blockquote, which can be cascaded
msgid "> using the palette method. For example `palette(rainbow(6))` or"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:681
# blockquote, which can be cascaded
msgid "> `palette(terrain.colors(6))`. You can reset the palette colors using"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:682
# blockquote, which can be cascaded
msgid "> `palette(\"default\")`!"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:685
# blockquote, which can be cascaded
msgid "> ## Challenge: Plot Lines by Attribute"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:687
# blockquote, which can be cascaded
msgid "> Create a plot that emphasizes only roads where bicycles and horses are allowed."
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:688
# blockquote, which can be cascaded
msgid "> To emphasize this, make the lines where bicycles are not allowed THINNER than"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:689
# blockquote, which can be cascaded
msgid "> the roads where bicycles are allowed."
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:690
# blockquote, which can be cascaded
msgid "> NOTE: this attribute information is located in the `lines_HARV$BicyclesHo`"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:691
# blockquote, which can be cascaded
msgid "> attribute."
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:693
# blockquote, which can be cascaded
msgid "> Be sure to add a title and legend to your map. You might consider a color"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:694
# blockquote, which can be cascaded
msgid "> palette that has all bike/horse-friendly roads displayed in a bright color. All"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:695
# blockquote, which can be cascaded
msgid "> other lines can be black."
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:699
# blockquote, which can be cascaded
msgid "> > First we need to make sure that the `BicyclesHo` attribute is a"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:700
# blockquote, which can be cascaded
msgid "> > factor and check how many levels it has."
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:704
# blockquote, which can be cascaded
msgid "> > class(lines_HARV$BicyclesHo)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:718
# blockquote, which can be cascaded
msgid "> > levels(lines_HARV$BicyclesHo)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:725
# blockquote, which can be cascaded
msgid "> > Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'levels': object 'lines_HARV' not found"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:729
# blockquote, which can be cascaded
msgid "> > Next, we will create a new object `lines_removeNA` that removes missing values."
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:733
# blockquote, which can be cascaded
msgid "> > lines_removeNA <- lines_HARV[!is.na(lines_HARV$BicyclesHo),] "
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:744
# blockquote, which can be cascaded
msgid "> > In our plot, we will set colors so that only the allowed roads"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:745
# blockquote, which can be cascaded
msgid "> > are magenta, and we will set line width so that the first"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:746
# blockquote, which can be cascaded
msgid "> > factor level is thicker than the others."
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:750
# blockquote, which can be cascaded
msgid "> > # First, create a data frame with only those roads where bicycles and horses are allowed"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:751
# blockquote, which can be cascaded
msgid "> > lines_showHarv <- lines_removeNA %>% filter(BicyclesHo == \"Bicycles and Horses Allowed\")"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:758
# blockquote, which can be cascaded
msgid "> > Error in eval(lhs, parent, parent): object 'lines_removeNA' not found"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:765
# blockquote, which can be cascaded
msgid "> > # Next, visualise using ggplot"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:766
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:336
# blockquote, which can be cascaded
msgid "> > ggplot() + "
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:767
# blockquote, which can be cascaded
msgid "> >   geom_sf(data = lines_HARV) + "
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:768
# blockquote, which can be cascaded
msgid "> >   geom_sf(data = lines_showHarv, aes(color = BicyclesHo), size = 2) + "
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:769
# blockquote, which can be cascaded
msgid "> >   scale_color_manual(values = \"magenta\") +"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:770
# blockquote, which can be cascaded
msgid "> >   ggtitle(\"NEON Harvard Forest Field Site\", subtitle = \"Roads Where Bikes and Horses Are Allowed\") + "
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:771
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:340
# blockquote, which can be cascaded
msgid "> >   coord_sf()"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:778
# blockquote, which can be cascaded
msgid "> > Error in fortify(data): object 'lines_HARV' not found"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:784
#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:178
# blockquote, which can be cascaded
msgid "> ## Challenge: Plot Polygon by Attribute"
msgstr ""

#: r-raster-vector-geospatial/_episodes/07-vector-shapefile-attributes-in-r.md:785
msgid ">\n"
"> 1. Create a map of the state boundaries in the United States using the data\n"
"> located in your downloaded data folder: `NEON-DS-Site-Layout-Files/US-Boundary-Layers\\US-State-Boundaries-Census-2014`.\n"
"> Apply a fill color to each state using its `region` value. Add a legend.\n"
">\n"
"> > ## Answers\n"
"> > First we read in the data and check how many levels there are\n"
"> > in the `region` column:\n"
"> > \n"
"> > ~~~\n"
"> > state_boundary_US <- \n"
"> > st_read(\"data/NEON-DS-Site-Layout-Files/US-Boundary-Layers/US-State-Boundaries-Census-2014.shp\")\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > Error in st_read(\"data/NEON-DS-Site-Layout-Files/US-Boundary-Layers/US-State-Boundaries-Census-2014.shp\"): could not find function \"st_read\"\n"
"> > ~~~\n"
"> > {: .error}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > levels(state_boundary_US$region)\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'levels': object 'state_boundary_US' not found\n"
"> > ~~~\n"
"> > {: .error}\n"
"> > Next we set a color vector with that many items: \n"
"> > \n"
"> > ~~~\n"
"> > colors <- c(\"purple\", \"springgreen\", \"yellow\", \"brown\", \"navy\")\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > Now we can create our plot: \n"
"> > \n"
"> > ~~~\n"
"> > ggplot() +\n"
"> >   geom_sf(data = state_boundary_US, aes(color = region), size = 1) +\n"
"> >   scale_color_manual(values = colors) +\n"
"> >   ggtitle(\"Contiguous U.S. State Boundaries\") + \n"
"> >   coord_sf()\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > Error in fortify(data): object 'state_boundary_US' not found\n"
"> > ~~~\n"
"> > {: .error}"
msgstr ""

#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:1
# Front Matter
msgid "---\n"
"# Please do not edit this file directly; it is auto generated.\n"
"# Instead, please edit 08-vector-plot-shapefiles-custom-legend.md in _episodes_rmd/\n"
"title: \"Plot Multiple Shapefiles in R\"\n"
"teaching: 40\n"
"exercises: 20\n"
"questions:\n"
"- \"How can I create map compositions with custom legends using ggplot?\"\n"
"- \"How can I plot raster and vector data together?\"\n"
"objectives:\n"
"- \"Plot multiple shapefiles in the same plot.\"\n"
"- \"Apply custom symbols to spatial objects in a plot.\"\n"
"- \"Create a multi-layered plot with raster and vector data.\"\n"
"keypoints:\n"
"- \"Use the `+` operator to add multiple layers to a ggplot.\"\n"
"- \"Multi-layered plots can combine raster and vector datasets.\"\n"
"- \"Use the `show.legend` argument to set legend symbol types.\"\n"
"- \"Use the `scale_fill_manual()` function to set legend colors.\"\n"
"source: Rmd\n"
"---"
msgstr ""

#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:56
msgid "This episode builds upon\n"
"[the previous episode]({{ site.baseurl }}/07-vector-shapefile-attributes-in-r/)\n"
"to work with shapefile attributes in R and explores how to plot multiple\n"
"shapefiles. It also covers how to plot raster and vector data together\n"
"on the same plot."
msgstr ""

#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:64
msgid "To work with vector data in R, we can use the `sf` library. The `raster`\n"
"package also allows us to explore metadata using similar commands for both\n"
"raster and vector files. Make sure that you have these packages loaded."
msgstr ""

#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:68
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:40
msgid "We will continue to work with the three shapefiles that we loaded in the\n"
"[Open and Plot Shapefiles in R]({{site.baseurl}}/06-vector-open-shapefile-in-r/) episode."
msgstr ""

#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:71
# header
msgid "## Plotting Multiple Shapefiles"
msgstr ""

#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:72
msgid "In the [previous episode]({{ site.baseurl }}/07-vector-shapefile-attributes-in-r/),\n"
"we learned how to plot information from a single shapefile and do\n"
"some plot customization including adding a custom legend. However,\n"
"what if we want to create a more complex plot with many shapefiles\n"
"and unique symbols that need to be represented clearly in a legend?"
msgstr ""

#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:78
msgid "Now, let's create a plot that combines our tower location (`point_HARV`),\n"
"site boundary (`aoi_boundary_HARV`) and roads (`lines_HARV`) spatial objects. We\n"
"will need to build a custom legend as well."
msgstr ""

#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:82
msgid "To begin, we will create a plot with the site boundary as the first layer. Then layer\n"
"the tower location and road data on top using `+`."
msgstr ""

#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:86
# code block
msgid "~~~\n"
"ggplot() + \n"
"  geom_sf(data = aoi_boundary_HARV, fill = \"grey\", color = \"grey\") +\n"
"  geom_sf(data = lines_HARV, aes(color = TYPE), size = 1) +\n"
"  geom_sf(data = point_HARV) +\n"
"  ggtitle(\"NEON Harvard Forest Field Site\") + \n"
"  coord_sf()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:103
msgid "Next, let's build a custom legend using the symbology (the colors and symbols) that we used to create the plot above. For example, it might be good if the lines were symbolized as lines. In the previous episode, you may have noticed that the default legend behavior for `geom_sf` is to draw a 'patch' for each legend entry. If you want the legend to draw lines or points, you need to add an instruction to the `geom_sf` call - in this case, `show.legend = 'line'`. "
msgstr ""

#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:106
# code block
msgid "~~~\n"
"ggplot() + \n"
"  geom_sf(data = aoi_boundary_HARV, fill = \"grey\", color = \"grey\") +\n"
"  geom_sf(data = lines_HARV, aes(color = TYPE),\n"
"          show.legend = \"line\", size = 1) +\n"
"  geom_sf(data = point_HARV, aes(fill = Sub_Type), color = \"black\") +\n"
"  scale_color_manual(values = road_colors) +\n"
"  scale_fill_manual(values = \"black\") +\n"
"  ggtitle(\"NEON Harvard Forest Field Site\") + \n"
"  coord_sf()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:126
msgid "Now lets adjust the legend titles by passing a `name` to the respective `color` and `fill` palettes."
msgstr ""

#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:129
# code block
msgid "~~~\n"
"ggplot() + \n"
"  geom_sf(data = aoi_boundary_HARV, fill = \"grey\", color = \"grey\") +\n"
"  geom_sf(data = point_HARV, aes(fill = Sub_Type)) +\n"
"  geom_sf(data = lines_HARV, aes(color = TYPE), show.legend = \"line\",\n"
"          size = 1) + \n"
"  scale_color_manual(values = road_colors, name = \"Line Type\") + \n"
"  scale_fill_manual(values = \"black\", name = \"Tower Location\") + \n"
"  ggtitle(\"NEON Harvard Forest Field Site\") + \n"
"  coord_sf()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:149
msgid "Finally, it might be better if the points were symbolized as a symbol. We can customize this using `shape` parameters in our call to `geom_sf`: 16 is a point symbol, 15 is a box."
msgstr ""

#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:152
# blockquote, which can be cascaded
msgid "> To view a short list of `shape` symbols,"
msgstr ""

#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:153
# blockquote, which can be cascaded
msgid "> type `?pch` into the R console."
msgstr ""

#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:158
# code block
msgid "~~~\n"
"ggplot() +\n"
"  geom_sf(data = aoi_boundary_HARV, fill = \"grey\", color = \"grey\") +\n"
"  geom_sf(data = point_HARV, aes(fill = Sub_Type), shape = 15) +\n"
"  geom_sf(data = lines_HARV, aes(color = TYPE),\n"
"          show.legend = \"line\", size = 1) +\n"
"  scale_color_manual(values = road_colors, name = \"Line Type\") +\n"
"  scale_fill_manual(values = \"black\", name = \"Tower Location\") +\n"
"  ggtitle(\"NEON Harvard Forest Field Site\") + \n"
"  coord_sf()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:180
# blockquote, which can be cascaded
msgid "> 1. Using the `NEON-DS-Site-Layout-Files/HARV/PlotLocations_HARV.shp` shapefile,"
msgstr ""

#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:181
# blockquote, which can be cascaded
msgid "> create a map of study plot locations, with each point colored by the soil type"
msgstr ""

#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:182
# blockquote, which can be cascaded
msgid "> (`soilTypeOr`). How many different soil types are there at this particular field"
msgstr ""

#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:183
# blockquote, which can be cascaded
msgid "> site? Overlay this layer on top of the `lines_HARV` layer (the roads). Create a"
msgstr ""

#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:184
# blockquote, which can be cascaded
msgid "> custom legend that applies line symbols to lines and point symbols to the points."
msgstr ""

#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:186
# blockquote, which can be cascaded
msgid "> 2. Modify the plot above. Tell R to plot each point, using a different"
msgstr ""

#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:187
msgid "symbol of `shape` value.\n"
"> \n"
"> > ## Answers\n"
"> >\n"
"> > First we need to read in the data and see how many\n"
"> > unique soils are represented in the `soilTypeOr` attribute.\n"
"> >\n"
"> > \n"
"> > ~~~\n"
"> > plot_locations <- st_read(\"data/NEON-DS-Site-Layout-Files/HARV/PlotLocations_HARV.shp\")\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > Error in st_read(\"data/NEON-DS-Site-Layout-Files/HARV/PlotLocations_HARV.shp\"): could not find function \"st_read\"\n"
"> > ~~~\n"
"> > {: .error}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > levels(plot_locations$soilTypeOr)\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'levels': object 'plot_locations' not found\n"
"> > ~~~\n"
"> > {: .error}\n"
"> >\n"
"> > Next we can create a new color palette with one color for\n"
"> > each soil type.\n"
"> >\n"
"> > \n"
"> > ~~~\n"
"> > blue_green <- c(\"blue\", \"darkgreen\")\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> >\n"
"> > Finally, we will create our plot.\n"
"> >\n"
"> > \n"
"> > ~~~\n"
"> > ggplot() + \n"
"> >   geom_sf(data = lines_HARV, aes(color = TYPE), show.legend = \"line\") + \n"
"> >   geom_sf(data = plot_locations, aes(fill = soilTypeOr), \n"
"> >           shape = 21, color = NA, show.legend = 'point') + \n"
"> >   scale_color_manual(name = \"Line Type\", values = road_colors,\n"
"> >      guide = guide_legend(override.aes = list(linetype = \"solid\", shape = NA))) + \n"
"> >   scale_fill_manual(name = \"Soil Type\", values = blue_green,\n"
"> >      guide = guide_legend(override.aes = list(linetype = \"blank\", shape = 21, colour = NA))) + \n"
"> >   ggtitle(\"NEON Harvard Forest Field Site\") + \n"
"> >   coord_sf()\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > Error in fortify(data): object 'lines_HARV' not found\n"
"> > ~~~\n"
"> > {: .error}\n"
"> >\n"
"> > If we want each soil to be shown with a different symbol, we can\n"
"> > give multiple values to the `scale_shape_manual()` argument.\n"
"> >\n"
"> > \n"
"> > ~~~\n"
"> > ggplot() + \n"
"> >   geom_sf(data = lines_HARV, aes(color = TYPE), show.legend = \"line\", size = 1) + \n"
"> >   geom_sf(data = plot_locations, aes(fill = soilTypeOr, shape = soilTypeOr),\n"
"> >           show.legend = 'point', colour = NA, size = 3) + \n"
"> >   scale_shape_manual(name = \"Soil Type\", values = c(21, 22)) +\n"
"> >   scale_color_manual(name = \"Line Type\", values = road_colors,\n"
"> >      guide = guide_legend(override.aes = list(linetype = \"solid\", shape = NA))) + \n"
"> >   scale_fill_manual(name = \"Soil Type\", values = blue_green,\n"
"> >      guide = guide_legend(override.aes = list(linetype = \"blank\", shape = c(21, 22),\n"
"> >      color = blue_green))) + \n"
"> >   ggtitle(\"NEON Harvard Forest Field Site\") + \n"
"> >   coord_sf()\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > Error in fortify(data): object 'lines_HARV' not found\n"
"> > ~~~\n"
"> > {: .error}"
msgstr ""

#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:283
# blockquote, which can be cascaded
msgid "> ## Challenge: Plot Raster & Vector Data Together"
msgstr ""

#: r-raster-vector-geospatial/_episodes/08-vector-plot-shapefiles-custom-legend.md:284
msgid ">\n"
"> You can plot vector data layered on top of raster data using the \n"
"> `+` to add a layer in `ggplot`. Create a plot that uses the NEON AOI\n"
"> Canopy Height Model `NEON_RemoteSensing/HARV/CHM/HARV_chmCrop.tif`\n"
"> as a base layer. On top of the\n"
"> CHM, please add:\n"
">\n"
"> * The study site AOI.\n"
"> * Roads.\n"
"> * The tower location.\n"
">\n"
"> Be sure to give your plot a meaningful title.\n"
">\n"
"> > ## Answers\n"
"> >\n"
"> > \n"
"> > ~~~\n"
"> > ggplot() +\n"
"> >   geom_raster(data = CHM_HARV_df, aes(x = x, y = y, fill = HARV_chmCrop)) +\n"
"> >   geom_sf(data = lines_HARV, color = \"black\") +\n"
"> >   geom_sf(data = aoi_boundary_HARV, color = \"grey20\", size = 1) +\n"
"> >   geom_sf(data = point_HARV, pch = 8) +\n"
"> >   ggtitle(\"NEON Harvard Forest Field Site w/ Canopy Height Model\") + \n"
"> >   coord_sf()\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > Error in fortify(data): object 'lines_HARV' not found\n"
"> > ~~~\n"
"> > {: .error}"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:1
# Front Matter
msgid "---\n"
"# Please do not edit this file directly; it is auto generated.\n"
"# Instead, please edit 09-vector-when-data-dont-line-up-crs.md in _episodes_rmd/\n"
"title: \"Handling Spatial Projection & CRS in R\"\n"
"teaching: 40\n"
"exercises: 20\n"
"questions:\n"
"- \"What do I do when vector data don't line up?\"\n"
"objectives:\n"
"- \"Plot vector objects with different CRSs in the same plot.\"\n"
"keypoints:\n"
"- \"`ggplot2` automatically converts all objects in a plot to the same CRS.\"\n"
"- \"Still be aware of the CRS and extent for each object.\"\n"
"source: Rmd\n"
"---"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:30
msgid "In [an earlier episode]({{ site.baseurl }}/03-raster-reproject-in-r/)\n"
"we learned how to handle a situation where you have two different\n"
"files with raster data in different projections. Now we will apply\n"
"those same principles to working with vector data.\n"
"We will create a base map of our study site using United States\n"
"state and country boundary information accessed from the\n"
"[United States Census Bureau](https://www.census.gov/geo/maps-data/data/cbf/cbf_state.html).\n"
"We will learn how to map vector data that are in different CRSs and thus\n"
"don't line up on a map."
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:70
# header
msgid "## Working With Spatial Data From Different Sources"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:72
msgid "We often need to gather spatial datasets from\n"
"different sources and/or data that cover different spatial extents.\n"
"These data are often in\n"
"different Coordinate Reference Systems (CRSs)."
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:77
msgid "Some reasons for data being in different CRSs include:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:79
# ordered list
msgid "1. The data are stored in a particular CRS convention used by the data"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:80
msgid "provider (for example, a government agency).\n"
"2. The data are stored in a particular CRS that is customized to a region.\n"
"For instance, many states in the US prefer to use a State Plane projection customized\n"
"for that state."
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:85
msgid "![Maps of the United States using data in different projections. Source: opennews.org, from: https://media.opennews.org/cache/06/37/0637aa2541b31f526ad44f7cb2db7b6c.jpg]({{ site.baseurl }}/images/map_usa_different_projections.jpg)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:87
msgid "Notice the differences in shape associated with each different\n"
"projection. These differences are a direct result of the calculations\n"
"used to \"flatten\" the data onto a 2-dimensional map. Often data are\n"
"stored purposefully in a particular projection that optimizes the\n"
"relative shape and size of surrounding geographic boundaries (states,\n"
"counties, countries, etc)."
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:94
msgid "In this episode we will learn how to identify and manage spatial data\n"
"in different projections. We will learn how to reproject the data so\n"
"that they\n"
"are in the same projection to support plotting / mapping. Note that\n"
"these skills\n"
"are also required for any geoprocessing / spatial analysis. Data need\n"
"to be in\n"
"the same CRS to ensure accurate results."
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:103
msgid "We will continue to use the `sf` and `raster` packages in this episode."
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:105
# header
msgid "## Import US Boundaries - Census Data"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:107
msgid "There are many good sources of boundary base layers that we can use to create a\n"
"basemap. Some R packages even have these base layers built in to support quick\n"
"and efficient mapping. In this episode, we will use boundary layers for the contiguous\n"
"United States, provided by the [United States Census Bureau](https://www.census.gov/geo/maps-data/data/cbf/cbf_state.html).\n"
"It is useful to have shapefiles to work with because we can add\n"
"additional attributes to them if need be - for project specific\n"
"mapping."
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:115
# header
msgid "## Read US Boundary File"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:117
msgid "We will use the `st_read()` function to import the\n"
"`/US-Boundary-Layers/US-State-Boundaries-Census-2014` layer into R. This layer\n"
"contains the boundaries of all contiguous states in the U.S. Please note that\n"
"these data have been modified and reprojected from the original data downloaded\n"
"from the Census website to support the learning goals of this episode."
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:124
# code block
msgid "~~~\n"
"state_boundary_US <- st_read(\"data/NEON-DS-Site-Layout-Files/US-Boundary-Layers/US-State-Boundaries-Census-2014.shp\")\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:131
# code block
msgid "~~~\n"
"Error in st_read(\"data/NEON-DS-Site-Layout-Files/US-Boundary-Layers/US-State-Boundaries-Census-2014.shp\"): could not find function \"st_read\"\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:136
msgid "Next, let's plot the U.S. states data:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:139
# code block
msgid "~~~\n"
"ggplot() +\n"
"  geom_sf(data = state_boundary_US) +\n"
"  ggtitle(\"Map of Contiguous US State Boundaries\") +\n"
"  coord_sf()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:149
# code block
msgid "~~~\n"
"Error in fortify(data): object 'state_boundary_US' not found\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:154
# header
msgid "## U.S. Boundary Layer"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:156
msgid "We can add a boundary layer of the United States to our map - to make it look\n"
"nicer. We will import\n"
"`NEON-DS-Site-Layout-Files/US-Boundary-Layers/US-Boundary-Dissolved-States`."
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:161
# code block
msgid "~~~\n"
"country_boundary_US <- st_read(\"data/NEON-DS-Site-Layout-Files/US-Boundary-Layers/US-Boundary-Dissolved-States.shp\")\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:168
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:43
# code block
msgid "~~~\n"
"Error in st_read(\"data/NEON-DS-Site-Layout-Files/US-Boundary-Layers/US-Boundary-Dissolved-States.shp\"): could not find function \"st_read\"\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:173
msgid "If we specify a thicker line width using `size = 2` for the border layer, it will\n"
"make our map pop! We will also manually set the colors of the state boundaries\n"
"and country boundaries."
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:178
# code block
msgid "~~~\n"
"ggplot() +\n"
"  geom_sf(data = country_boundary_US, color = \"gray18\", size = 2) +\n"
"  geom_sf(data = state_boundary_US, color = \"gray40\") +\n"
"  ggtitle(\"Map of Contiguous US State Boundaries\") +\n"
"  coord_sf()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:189
#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:349
# code block
msgid "~~~\n"
"Error in fortify(data): object 'country_boundary_US' not found\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:194
msgid "Next, let's add the location of a flux tower where our study area is.\n"
"As we are adding these layers, take note of the CRS of each object.\n"
"First let's look at the CRS of our tower location object:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:199
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:239
# code block
msgid "~~~\n"
"st_crs(point_HARV)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:206
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:246
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:266
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:50
# code block
msgid "~~~\n"
"Error in st_crs(point_HARV): could not find function \"st_crs\"\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:211
msgid "Our project string for `DSM_HARV` specifies the UTM projection as follows:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:217
# unordered list
msgid "* **datum=WGS84:** the datum WGS84 (the datum refers to the  0,0 reference for"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:218
msgid "the coordinate system used in the projection)\n"
"* **units=m:** the units for the coordinates are in METERS.\n"
"* **ellps=WGS84:** the ellipsoid (how the earth's  roundness is calculated) for\n"
"the data is WGS84"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:223
msgid "Note that the `zone` is unique to the UTM projection. Not all CRSs\n"
"will have a\n"
"zone."
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:227
msgid "Let's check the CRS of our state and country boundary objects:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:230
# code block
msgid "~~~\n"
"st_crs(state_boundary_US)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:237
# code block
msgid "~~~\n"
"Error in st_crs(state_boundary_US): could not find function \"st_crs\"\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:244
# code block
msgid "~~~\n"
"st_crs(country_boundary_US)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:251
# code block
msgid "~~~\n"
"Error in st_crs(country_boundary_US): could not find function \"st_crs\"\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:256
msgid "Our project string for `state_boundary_US` and `country_boundary_US` specifies\n"
"the lat/long projection as follows:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:259
msgid "`+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0`"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:261
# unordered list
msgid "* **proj=longlat:** the data are in a geographic (latitude and longitude)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:262
msgid "coordinate system\n"
"* **datum=WGS84:** the datum WGS84 (the datum refers to the  0,0 reference for\n"
"the coordinate system used in the projection)\n"
"* **ellps=WGS84:** the ellipsoid (how the earth's roundness is calculated)\n"
"is WGS84"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:268
msgid "Note that there are no specified units above. This is because this geographic\n"
"coordinate reference system is in latitude and longitude which is most\n"
"often recorded in decimal degrees."
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:273
# blockquote, which can be cascaded
msgid "> the last portion of each `proj4` string"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:274
# blockquote, which can be cascaded
msgid "> is `+towgs84=0,0,0 `. This is a conversion factor that is used if a datum"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:275
# blockquote, which can be cascaded
msgid "> conversion is required. We will not deal with datums in this episode series."
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:278
# header
msgid "## CRS Units - View Object Extent"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:280
msgid "Next, let's view the extent or spatial coverage for the `point_HARV` spatial\n"
"object compared to the `state_boundary_US` object."
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:283
msgid "First we'll look at the extent for our study site:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:286
# code block
msgid "~~~\n"
"st_bbox(point_HARV)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:293
# code block
msgid "~~~\n"
"Error in st_bbox(point_HARV): could not find function \"st_bbox\"\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:298
msgid "And then the extent for the state boundary data."
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:301
# code block
msgid "~~~\n"
"st_bbox(state_boundary_US)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:308
# code block
msgid "~~~\n"
"Error in st_bbox(state_boundary_US): could not find function \"st_bbox\"\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:313
msgid "Note the difference in the units for each object. The extent for\n"
"`state_boundary_US` is in latitude and longitude which yields smaller numbers\n"
"representing decimal degree units. Our tower location point is in UTM, is\n"
"represented in meters."
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:318
# blockquote, which can be cascaded
msgid "> ## Proj4 & CRS Resources"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:319
# blockquote, which can be cascaded
msgid "> * [Official PROJ library documentation](https://proj4.org/)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:320
# blockquote, which can be cascaded
msgid "> * [More information on the proj4 format.](http://proj.maptools.org/faq.html)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:321
# blockquote, which can be cascaded
msgid "> * [A fairly comprehensive list of CRSs by format.](http://spatialreference.org)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:322
# blockquote, which can be cascaded
msgid "> * To view a list of datum conversion factors type: `projInfo(type = \"datum\")`"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:323
# blockquote, which can be cascaded
msgid "> into the R console."
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:326
# header
msgid "## Reproject Vector Data or No?"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:328
msgid "We saw in [an earlier episode]({{ site.baseurl }}/03-raster-reproject-in-r/) that when working with raster\n"
"data in different CRSs, we needed to convert all objects to the same\n"
"CRS. We can do the same thing with our vector data - however, we\n"
"don't need to! When using the `ggplot2` package, `ggplot`\n"
"automatically converts all objects to the same CRS before plotting.\n"
"This means we can plot our three data sets together\n"
"without doing any conversion:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:337
# code block
msgid "~~~\n"
"ggplot() +\n"
"  geom_sf(data = country_boundary_US, size = 2, color = \"gray18\") +\n"
"  geom_sf(data = state_boundary_US, color = \"gray40\") +\n"
"  geom_sf(data = point_HARV, shape = 19, color = \"purple\") +\n"
"  ggtitle(\"Map of Contiguous US State Boundaries\") +\n"
"  coord_sf()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:354
# blockquote, which can be cascaded
msgid "> ## Challenge - Plot Multiple Layers of Spatial Data"
msgstr ""

#: r-raster-vector-geospatial/_episodes/09-vector-when-data-dont-line-up-crs.md:355
msgid ">\n"
"> Create a map of the North Eastern United States as follows:\n"
">\n"
"> 1. Import and plot `Boundary-US-State-NEast.shp`. Adjust line width as necessary.\n"
"> 2. Layer the Fisher Tower (in the NEON Harvard Forest site) point location `point_HARV` onto the plot.\n"
"> 3. Add a title.\n"
"> 4. Add a legend that shows both the state boundary (as a line) and\n"
"> the Tower location point.\n"
">\n"
"> > ## Answers\n"
"> >\n"
"> > \n"
"> > ~~~\n"
"> > NE.States.Boundary.US <- st_read(\"data/NEON-DS-Site-Layout-Files/US-Boundary-Layers/Boundary-US-State-NEast.shp\")\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > Error in st_read(\"data/NEON-DS-Site-Layout-Files/US-Boundary-Layers/Boundary-US-State-NEast.shp\"): could not find function \"st_read\"\n"
"> > ~~~\n"
"> > {: .error}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > ggplot() +\n"
"> >     geom_sf(data = NE.States.Boundary.US, aes(color =\"color\"), show.legend = \"line\") +\n"
"> >     scale_color_manual(name = \"\", labels = \"State Boundary\", values = c(\"color\" = \"gray18\")) +\n"
"> >     geom_sf(data = point_HARV, aes(shape = \"shape\"), color = \"purple\") +\n"
"> >     scale_shape_manual(name = \"\", labels = \"Fisher Tower\", values = c(\"shape\" = 19)) +\n"
"> >     ggtitle(\"Fisher Tower location\") +\n"
"> >     theme(legend.background = element_rect(color = NA)) +\n"
"> >     coord_sf()\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > Error in fortify(data): object 'NE.States.Boundary.US' not found\n"
"> > ~~~\n"
"> > {: .error}"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:1
# Front Matter
msgid "---\n"
"# Please do not edit this file directly; it is auto generated.\n"
"# Instead, please edit 10-vector-csv-to-shapefile-in-r.md in _episodes_rmd/\n"
"title: \"Convert from .csv to a Shapefile in R\"\n"
"teaching: 40\n"
"exercises: 20\n"
"questions:\n"
"- \"How can I import CSV files as shapefiles in R?\"\n"
"objectives:\n"
"- \"Import .csv files containing x,y coordinate locations into R as a data frame.\"\n"
"- \"Convert a data frame to a spatial object.\"\n"
"- \"Export a spatial object to a text file.\"\n"
"keypoints:\n"
"- \"Know the projection (if any) of your point data prior to converting to a spatial object.\"\n"
"- \"Convert a data frame to an `sf` object using the `st_as_sf()` function.\"\n"
"- \"Export an `sf` object as text using the `st_write()` function.\"\n"
"source: Rmd\n"
"---"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:60
msgid "This episode will review how to import spatial points stored in `.csv` (Comma Separated Value) format into R as an `sf` spatial object. We will also reproject data imported from a shapefile format, export this data as a shapefile, and plot raster and vector data as layers in the same plot."
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:62
# header
msgid "## Spatial Data in Text Format"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:64
msgid "The `HARV_PlotLocations.csv` file contains `x, y` (point) locations for study\n"
"plot where NEON collects data on\n"
"[vegetation and other ecological metrics](https://www.neonscience.org/data-collection/terrestrial-organismal-sampling).\n"
"We would like to:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:69
# unordered list
msgid "* Create a map of these plot locations."
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:70
# unordered list
msgid "* Export the data in a `shapefile` format to share with our colleagues. This"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:71
msgid "shapefile can be imported into any GIS software.\n"
"* Create a map showing vegetation height with plot locations layered on top."
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:74
msgid "Spatial data are sometimes stored in a text file format (`.txt` or `.csv`). If\n"
"the text file has an associated `x` and `y` location column, then we can\n"
"convert it into an `sf` spatial object. The `sf` object allows us to store both the `x,y` values that represent the coordinate location\n"
"of each point and the associated attribute data - or columns describing each\n"
"feature in the spatial object."
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:80
msgid "We will continue using the `sf` and `raster` packages in this episode."
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:82
# header
msgid "## Import .csv"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:83
msgid "To begin let's import a `.csv` file that contains plot coordinate `x, y`\n"
"locations at the NEON Harvard Forest Field Site (`HARV_PlotLocations.csv`) and look at the structure of\n"
"that new object:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:88
# code block
msgid "~~~\n"
"plot_locations_HARV <-\n"
"  read.csv(\"data/NEON-DS-Site-Layout-Files/HARV/HARV_PlotLocations.csv\")\n"
"\n"
"str(plot_locations_HARV)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:98
# code block
msgid "~~~\n"
"'data.frame':	21 obs. of  16 variables:\n"
" $ easting   : num  731405 731934 731754 731724 732125 ...\n"
" $ northing  : num  4713456 4713415 4713115 4713595 4713846 ...\n"
" $ geodeticDa: chr  \"WGS84\" \"WGS84\" \"WGS84\" \"WGS84\" ...\n"
" $ utmZone   : chr  \"18N\" \"18N\" \"18N\" \"18N\" ...\n"
" $ plotID    : chr  \"HARV_015\" \"HARV_033\" \"HARV_034\" \"HARV_035\" ...\n"
" $ stateProvi: chr  \"MA\" \"MA\" \"MA\" \"MA\" ...\n"
" $ county    : chr  \"Worcester\" \"Worcester\" \"Worcester\" \"Worcester\" ...\n"
" $ domainName: chr  \"Northeast\" \"Northeast\" \"Northeast\" \"Northeast\" ...\n"
" $ domainID  : chr  \"D01\" \"D01\" \"D01\" \"D01\" ...\n"
" $ siteID    : chr  \"HARV\" \"HARV\" \"HARV\" \"HARV\" ...\n"
" $ plotType  : chr  \"distributed\" \"tower\" \"tower\" \"tower\" ...\n"
" $ subtype   : chr  \"basePlot\" \"basePlot\" \"basePlot\" \"basePlot\" ...\n"
" $ plotSize  : int  1600 1600 1600 1600 1600 1600 1600 1600 1600 1600 ...\n"
" $ elevation : num  332 342 348 334 353 ...\n"
" $ soilTypeOr: chr  \"Inceptisols\" \"Inceptisols\" \"Inceptisols\" \"Histosols\" ...\n"
" $ plotdim_m : int  40 40 40 40 40 40 40 40 40 40 ...\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:119
msgid "We now have a data frame that contains 21 locations (rows) and 16 variables (attributes). Note that all of our character data was imported into R as factor (categorical) data. Next, let's explore the dataframe to determine whether it contains columns with coordinate values. If we are lucky, our `.csv` will contain columns labeled:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:121
# unordered list
msgid " * \"X\" and \"Y\" OR"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:122
# unordered list
msgid " * Latitude and Longitude OR"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:123
# unordered list
msgid " * easting and northing (UTM coordinates)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:125
msgid "Let's check out the column names of our dataframe."
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:128
# code block
msgid "~~~\n"
"names(plot_locations_HARV)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:135
# code block
msgid "~~~\n"
" [1] \"easting\"    \"northing\"   \"geodeticDa\" \"utmZone\"    \"plotID\"    \n"
" [6] \"stateProvi\" \"county\"     \"domainName\" \"domainID\"   \"siteID\"    \n"
"[11] \"plotType\"   \"subtype\"    \"plotSize\"   \"elevation\"  \"soilTypeOr\"\n"
"[16] \"plotdim_m\" \n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:143
# header
msgid "## Identify X,Y Location Columns"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:145
msgid "Our column names include several fields that might contain spatial information. The `plot_locations_HARV$easting`\n"
"and `plot_locations_HARV$northing` columns contain coordinate values. We can confirm\n"
"this by looking at the first six rows of our data."
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:150
# code block
msgid "~~~\n"
"head(plot_locations_HARV$easting)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:157
# code block
msgid "~~~\n"
"[1] 731405.3 731934.3 731754.3 731724.3 732125.3 731634.3\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:164
# code block
msgid "~~~\n"
"head(plot_locations_HARV$northing)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:171
# code block
msgid "~~~\n"
"[1] 4713456 4713415 4713115 4713595 4713846 4713295\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:176
msgid "We have coordinate values in our data frame. In order to convert our\n"
"data frame to an `sf` object, we also need to know the CRS\n"
"associated with those coordinate values."
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:180
msgid "There are several ways to figure out the CRS of spatial data in text format."
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:182
# ordered list
msgid "1. We can check the file metadata in hopes that the CRS was recorded in the"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:183
msgid "data.\n"
"2. We can explore the file itself to see if CRS information is embedded in the\n"
"file header or somewhere in the data columns."
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:187
msgid "Following the `easting` and `northing` columns, there is a `geodeticDa` and a\n"
"`utmZone` column. These appear to contain CRS information\n"
"(`datum` and `projection`). Let's view those next."
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:192
# code block
msgid "~~~\n"
"head(plot_locations_HARV$geodeticDa)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:199
# code block
msgid "~~~\n"
"[1] \"WGS84\" \"WGS84\" \"WGS84\" \"WGS84\" \"WGS84\" \"WGS84\"\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:206
# code block
msgid "~~~\n"
"head(plot_locations_HARV$utmZone)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:213
# code block
msgid "~~~\n"
"[1] \"18N\" \"18N\" \"18N\" \"18N\" \"18N\" \"18N\"\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:218
msgid "It is not typical to store CRS information in a column. But this particular\n"
"file contains CRS information this way. The `geodeticDa` and `utmZone` columns\n"
"contain the information that helps us determine the CRS:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:222
# unordered list
msgid "* `geodeticDa`: WGS84  -- this is geodetic datum WGS84"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:223
# unordered list
msgid "* `utmZone`: 18"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:225
msgid "In\n"
"[When Vector Data Don't Line Up - Handling Spatial Projection & CRS in R]({{site.baseurl}}/09-vector-when-data-dont-line-up-crs/)\n"
"we learned about the components of a `proj4` string. We have everything we need\n"
"to assign a CRS to our data frame."
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:230
msgid "To create the `proj4` associated with UTM Zone 18 WGS84 we can look up the\n"
"projection on the [Spatial Reference website](http://www.spatialreference.org/ref/epsg/wgs-84-utm-zone-18n/), which contains a list of CRS formats for each projection. From here, we can extract the [proj4 string for UTM Zone 18N WGS84](http://www.spatialreference.org/ref/epsg/wgs-84-utm-zone-18n/proj4/)."
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:233
msgid "However, if we have other data in the UTM Zone 18N projection, it's much\n"
"easier to use the `st_crs()` function to extract the CRS in `proj4` format from that object and\n"
"assign it to our\n"
"new spatial object. We've seen this CRS before with our Harvard Forest study site (`point_HARV`)."
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:251
msgid "The output above shows that the points shapefile is in\n"
"UTM zone 18N. We can thus use the CRS from that spatial object to convert our\n"
"non-spatial dataframe into an `sf` object."
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:255
msgid "Next, let's create a `crs` object that we can use to define the CRS of our\n"
"`sf` object when we create it."
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:259
# code block
msgid "~~~\n"
"utm18nCRS <- st_crs(point_HARV)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:273
# code block
msgid "~~~\n"
"utm18nCRS\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:280
#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:294
# code block
msgid "~~~\n"
"Error in eval(expr, envir, enclos): object 'utm18nCRS' not found\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:287
# code block
msgid "~~~\n"
"class(utm18nCRS)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:299
# header
msgid "## .csv to sf object"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:300
msgid "Next, let's convert our dataframe into an `sf` object. To do\n"
"this, we need to specify:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:303
# ordered list
msgid "1. The columns containing X (`easting`) and Y (`northing`) coordinate values"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:304
# ordered list
msgid "2. The CRS that the column coordinate represent (units are included in the CRS) - stored in our `utmCRS` object."
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:306
msgid "We will use the `st_as_sf()` function to perform the conversion."
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:309
# code block
msgid "~~~\n"
"plot_locations_sp_HARV <- st_as_sf(plot_locations_HARV, coords = c(\"easting\", \"northing\"), crs = utm18nCRS)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:316
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:57
# code block
msgid "~~~\n"
"Error in st_as_sf(plot_locations_HARV, coords = c(\"easting\", \"northing\"), : could not find function \"st_as_sf\"\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:321
msgid "We should double check the CRS to make sure it is correct."
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:324
# code block
msgid "~~~\n"
"st_crs(plot_locations_sp_HARV)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:331
# code block
msgid "~~~\n"
"Error in st_crs(plot_locations_sp_HARV): could not find function \"st_crs\"\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:336
# header
msgid "## Plot Spatial Object"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:337
msgid "We now have a spatial R object, we can plot our newly created spatial object."
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:340
# code block
msgid "~~~\n"
"ggplot() +\n"
"  geom_sf(data = plot_locations_sp_HARV) +\n"
"  ggtitle(\"Map of Plot Locations\")\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:349
# code block
msgid "~~~\n"
"Error in fortify(data): object 'plot_locations_sp_HARV' not found\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:354
# header
msgid "## Plot Extent"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:356
msgid "In\n"
"[Open and Plot Shapefiles in R]({{site.baseurl}}/06-vector-open-shapefile-in-r/)\n"
"we learned about spatial object extent. When we plot several spatial layers in\n"
"R using `ggplot`, all of the layers of the plot are considered in setting the boundaries\n"
"of the plot. To show this, let's plot our `aoi_boundary_HARV` object with our vegetation plots."
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:363
# code block
msgid "~~~\n"
"ggplot() +\n"
"  geom_sf(data = aoi_boundary_HARV) +\n"
"  geom_sf(data = plot_locations_sp_HARV) +\n"
"  ggtitle(\"AOI Boundary Plot\")\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:378
msgid "When we plot the two layers together, `ggplot` sets the plot boundaries\n"
"so that they are large enough to include all of the data included in all of the layers.\n"
"That's really handy!"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:382
# blockquote, which can be cascaded
msgid "> ## Challenge - Import & Plot Additional Points"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:383
msgid ">\n"
"> We want to add two phenology plots to our existing map of vegetation plot\n"
"> locations.\n"
">\n"
"> Import the .csv: `HARV/HARV_2NewPhenPlots.csv` into R and do the following:\n"
">\n"
"> 1. Find the X and Y coordinate locations. Which value is X and which value is Y?\n"
"> 2. These data were collected in a geographic coordinate system (WGS84). Convert\n"
"> the dataframe into an `sf` object.\n"
"> 3. Plot the new points with the plot location points from above. Be sure to add\n"
"> a legend. Use a different symbol for the 2 new points!\n"
">\n"
"> If you have extra time, feel free to add roads and other layers to your map!\n"
">\n"
"> > ## Answers\n"
"> >\n"
"> > 1)\n"
"> > First we will read in the new csv file and look at the\n"
"> > data structure.\n"
"> >\n"
"> > \n"
"> > ~~~\n"
"> > newplot_locations_HARV <-\n"
"> >   read.csv(\"data/NEON-DS-Site-Layout-Files/HARV/HARV_2NewPhenPlots.csv\")\n"
"> > str(newplot_locations_HARV)\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > 'data.frame':	2 obs. of  13 variables:\n"
"> >  $ decimalLat: num  42.5 42.5\n"
"> >  $ decimalLon: num  -72.2 -72.2\n"
"> >  $ country   : chr  \"unitedStates\" \"unitedStates\"\n"
"> >  $ stateProvi: chr  \"MA\" \"MA\"\n"
"> >  $ county    : chr  \"Worcester\" \"Worcester\"\n"
"> >  $ domainName: chr  \"Northeast\" \"Northeast\"\n"
"> >  $ domainID  : chr  \"D01\" \"D01\"\n"
"> >  $ siteID    : chr  \"HARV\" \"HARV\"\n"
"> >  $ plotType  : chr  \"tower\" \"tower\"\n"
"> >  $ subtype   : chr  \"phenology\" \"phenology\"\n"
"> >  $ plotSize  : int  40000 40000\n"
"> >  $ plotDimens: chr  \"200m x 200m\" \"200m x 200m\"\n"
"> >  $ elevation : num  358 346\n"
"> > ~~~\n"
"> > {: .output}\n"
"> >\n"
"> > 2)\n"
"> > The US boundary data we worked with previously is in a geographic\n"
"> > WGS84 CRS. We can use that data to establish a CRS for this data. First\n"
"> > we will extract the CRS from the `country_boundary_US` object and\n"
"> > confirm that it is WGS84.\n"
"> >\n"
"> > \n"
"> > ~~~\n"
"> > geogCRS <- st_crs(country_boundary_US)\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > Error in st_crs(country_boundary_US): could not find function \"st_crs\"\n"
"> > ~~~\n"
"> > {: .error}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > geogCRS\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > Error in eval(expr, envir, enclos): object 'geogCRS' not found\n"
"> > ~~~\n"
"> > {: .error}\n"
"> >\n"
"> > Then we will convert our new data to a spatial dataframe, using\n"
"> > the `geogCRS` object as our CRS.\n"
"> >\n"
"> > \n"
"> > ~~~\n"
"> > newPlot.Sp.HARV <- st_as_sf(newplot_locations_HARV, coords = c(\"decimalLon\", \"decimalLat\"), crs = geogCRS)\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > Error in st_as_sf(newplot_locations_HARV, coords = c(\"decimalLon\", \"decimalLat\"), : could not find function \"st_as_sf\"\n"
"> > ~~~\n"
"> > {: .error}\n"
"> >\n"
"> > Next we'll confirm that the CRS for our new object is correct.\n"
"> >\n"
"> > \n"
"> > ~~~\n"
"> > st_crs(newPlot.Sp.HARV)\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > Error in st_crs(newPlot.Sp.HARV): could not find function \"st_crs\"\n"
"> > ~~~\n"
"> > {: .error}\n"
"> >\n"
"> > We will be adding these new data points to the plot we\n"
"> > created before. The data for the earlier plot was in UTM.\n"
"> > Since we're using `ggplot`, it will reproject the data for us.\n"
"> >\n"
"> > 3) Now we can create our plot.\n"
"> >\n"
"> > \n"
"> > ~~~\n"
"> > ggplot() +\n"
"> >   geom_sf(data = plot_locations_sp_HARV, color = \"orange\") +\n"
"> >   geom_sf(data = newPlot.Sp.HARV, color = \"lightblue\") +\n"
"> >   ggtitle(\"Map of All Plot Locations\")\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > Error in fortify(data): object 'plot_locations_sp_HARV' not found\n"
"> > ~~~\n"
"> > {: .error}"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:519
# header
msgid "## Export a Shapefile"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:521
msgid "We can write an R spatial object to a shapefile using the `st_write` function\n"
"in `sf`. To do this we need the following arguments:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:524
# unordered list
msgid "* the name of the spatial object (`plot_locations_sp_HARV`)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:525
# unordered list
msgid "* the directory where we want to save our shapefile"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:526
msgid "           (to use `current = getwd()` or you can specify a different path)\n"
"* the name of the new shapefile  (`PlotLocations_HARV`)\n"
"* the driver which specifies the file format (ESRI Shapefile)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:530
msgid "We can now export the spatial object as a shapefile."
msgstr ""

#: r-raster-vector-geospatial/_episodes/10-vector-csv-to-shapefile-in-r.md:533
# code block
msgid "~~~\n"
"st_write(plot_locations_sp_HARV,\n"
"         \"data/PlotLocations_HARV.shp\", driver = \"ESRI Shapefile\")\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:1
# Front Matter
msgid "---\n"
"# Please do not edit this file directly; it is auto generated.\n"
"# Instead, please edit 11-vector-raster-integration.md in _episodes_rmd/\n"
"title: \"Manipulate Raster Data in R\"\n"
"teaching: 40\n"
"exercises: 20\n"
"questions:\n"
"- \"How can I crop raster objects to vector objects, and extract the summary of raster pixels?\"\n"
"objectives:\n"
"- \"Crop a raster to the extent of a vector layer.\"\n"
"- \"Extract values from a raster that correspond to a vector file overlay.\"\n"
"keypoints:\n"
"- \"Use the `crop()` function to crop a raster object.\"\n"
"- \"Use the `extract()` function to extract pixels from a raster object that fall within a particular extent boundary.\"\n"
"- \"Use the `extent()` function to define an extent.\"\n"
"source: Rmd\n"
"---"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:68
msgid "This episode explains how to crop a raster using the extent of a vector\n"
"shapefile. We will also cover how to extract values from a raster that occur\n"
"within a set of polygons, or in a buffer (surrounding) region around a set of\n"
"points."
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:73
# header
msgid "## Crop a Raster to Vector Extent"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:75
msgid "We often work with spatial layers that have different spatial extents. The\n"
"spatial extent of a shapefile or R spatial object represents the geographic\n"
"\"edge\" or location that is the furthest north, south east and west. Thus is\n"
"represents the overall geographic coverage of the spatial object."
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:80
msgid "![Extent illustration]({{ site.baseurl }}/images/dc-spatial-vector/spatial_extent.png) Image Source: National\n"
"Ecological Observatory Network (NEON)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:83
msgid "The graphic below illustrates the extent of several of the spatial layers that\n"
"we have worked with in this workshop:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:86
# unordered list
msgid "* Area of interest (AOI) -- blue"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:87
# unordered list
msgid "* Roads and trails -- purple"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:88
# unordered list
msgid "* Vegetation plot locations (marked with white dots)-- black"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:89
# unordered list
msgid "* A canopy height model (CHM) in GeoTIFF format -- green"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:92
# code block
msgid "~~~\n"
"Error in st_as_sf(CHM_HARV_df, coords = c(\"x\", \"y\"), crs = utm18nCRS): could not find function \"st_as_sf\"\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:99
# code block
msgid "~~~\n"
"Error in sample_n(CHM_HARV_sp, 10000): object 'CHM_HARV_sp' not found\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:113
# code block
msgid "~~~\n"
"Error in st_read(\"data/NEON-DS-Site-Layout-Files/HARV/PlotLocations_HARV.shp\"): could not find function \"st_read\"\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:119
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:379
# code block
msgid "~~~\n"
"Error in st_convex_hull(st_union(CHM_rand_sample)): could not find function \"st_convex_hull\"\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:124
msgid "Frequent use cases of cropping a raster file include reducing file size and\n"
"creating maps. Sometimes we have a raster file that is much larger than our\n"
"study area or area of interest. It is often more efficient to crop the\n"
"raster to the extent of our study area to reduce file sizes as we process\n"
"our data. Cropping a raster can also be useful when creating pretty maps so\n"
"that the raster layer matches the extent of the desired vector layers."
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:131
# header
msgid "## Crop a Raster Using Vector Extent"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:133
msgid "We can use the `crop()` function to crop a raster to the extent of another\n"
"spatial object. To do this, we need to specify the raster to be cropped and the\n"
"spatial object that will be used to crop the raster. R will use the `extent` of\n"
"the spatial object as the cropping boundary."
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:138
msgid "To illustrate this, we will crop the Canopy Height Model (CHM) to only include the area of interest (AOI). Let's start by plotting the full extent of the CHM data and overlay where the AOI falls within it. The boundaries of the AOI will be colored blue, and we use `fill = NA` to make the area transparent."
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:141
# code block
msgid "~~~\n"
"ggplot() +\n"
"  geom_raster(data = CHM_HARV_df, aes(x = x, y = y, fill = HARV_chmCrop)) + \n"
"  scale_fill_gradientn(name = \"Canopy Height\", colors = terrain.colors(10)) +\n"
"  geom_sf(data = aoi_boundary_HARV, color = \"blue\", fill = NA) +\n"
"  coord_sf()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:157
msgid "Now that we have visualized the area of the CHM we want to subset, we can\n"
"perform the cropping operation. We are going to `crop()` function from the \n"
"raster package to create a new object with only the portion of the CHM data \n"
"that falls within the boundaries of the AOI."
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:163
# code block
msgid "~~~\n"
"CHM_HARV_Cropped <- crop(x = CHM_HARV, y = aoi_boundary_HARV)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:170
# code block
msgid "~~~\n"
"Error in .local(x, y, ...): Cannot get an Extent object from argument y\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:175
msgid "Now we can plot the cropped CHM data, along with a boundary box showing the full\n"
"CHM extent. However, remember, since this is raster data, we need to convert to\n"
"a data frame in order to plot using `ggplot`. To get the boundary box from CHM,\n"
"the `st_bbox()` will extract the 4 corners of the rectangle that encompass all\n"
"the features contained in this object. The `st_as_sfc()` converts these 4\n"
"coordinates into a polygon that we can plot:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:183
# code block
msgid "~~~\n"
"CHM_HARV_Cropped_df <- as.data.frame(CHM_HARV_Cropped, xy = TRUE)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:190
# code block
msgid "~~~\n"
"Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'as.data.frame': object 'CHM_HARV_Cropped' not found\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:197
# code block
msgid "~~~\n"
"ggplot() +\n"
"  geom_sf(data = st_as_sfc(st_bbox(CHM_HARV)), fill = \"green\",\n"
"          color = \"green\", alpha = .2) +  \n"
"  geom_raster(data = CHM_HARV_Cropped_df,\n"
"              aes(x = x, y = y, fill = HARV_chmCrop)) + \n"
"  scale_fill_gradientn(name = \"Canopy Height\", colors = terrain.colors(10)) + \n"
"  coord_sf()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:210
# code block
msgid "~~~\n"
"Error in st_as_sfc(st_bbox(CHM_HARV)): could not find function \"st_as_sfc\"\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:215
msgid "The plot above shows that the full CHM extent (plotted in green) is much larger\n"
"than the resulting cropped raster. Our new cropped CHM now has the same extent\n"
"as the `aoi_boundary_HARV` object that was used as a crop extent (blue border\n"
"below)."
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:221
# code block
msgid "~~~\n"
"ggplot() +\n"
"  geom_raster(data = CHM_HARV_Cropped_df,\n"
"              aes(x = x, y = y, fill = HARV_chmCrop)) + \n"
"  geom_sf(data = aoi_boundary_HARV, color = \"blue\", fill = NA) + \n"
"  scale_fill_gradientn(name = \"Canopy Height\", colors = terrain.colors(10)) + \n"
"  coord_sf()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:233
# code block
msgid "~~~\n"
"Error in fortify(data): object 'CHM_HARV_Cropped_df' not found\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:238
msgid "We can look at the extent of all of our other objects for this field site."
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:241
# code block
msgid "~~~\n"
"st_bbox(CHM_HARV)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:248
# code block
msgid "~~~\n"
"Error in st_bbox(CHM_HARV): could not find function \"st_bbox\"\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:255
# code block
msgid "~~~\n"
"st_bbox(CHM_HARV_Cropped)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:262
# code block
msgid "~~~\n"
"Error in st_bbox(CHM_HARV_Cropped): could not find function \"st_bbox\"\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:283
# code block
msgid "~~~\n"
"st_bbox(plot_locations_sp_HARV)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:290
# code block
msgid "~~~\n"
"Error in st_bbox(plot_locations_sp_HARV): could not find function \"st_bbox\"\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:295
msgid "Our plot location extent is not the largest but is larger than the AOI Boundary.\n"
"It would be nice to see our vegetation plot locations plotted on top of the\n"
"Canopy Height Model information."
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:299
# blockquote, which can be cascaded
msgid "> ## Challenge: Crop to Vector Points Extent"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:301
# blockquote, which can be cascaded
msgid "> 1. Crop the Canopy Height Model to the extent of the study plot locations."
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:302
# blockquote, which can be cascaded
msgid "> 2. Plot the vegetation plot location points on top of the Canopy Height Model."
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:308
# blockquote, which can be cascaded
msgid "> > CHM_plots_HARVcrop <- crop(x = CHM_HARV, y = plot_locations_sp_HARV)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:315
# blockquote, which can be cascaded
msgid "> > Error in .local(x, y, ...): Cannot get an Extent object from argument y"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:322
# blockquote, which can be cascaded
msgid "> > CHM_plots_HARVcrop_df <- as.data.frame(CHM_plots_HARVcrop, xy = TRUE)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:329
# blockquote, which can be cascaded
msgid "> > Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'as.data.frame': object 'CHM_plots_HARVcrop' not found"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:337
# blockquote, which can be cascaded
msgid "> >   geom_raster(data = CHM_plots_HARVcrop_df, aes(x = x, y = y, fill = HARV_chmCrop)) + "
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:338
# blockquote, which can be cascaded
msgid "> >   scale_fill_gradientn(name = \"Canopy Height\", colors = terrain.colors(10)) + "
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:339
# blockquote, which can be cascaded
msgid "> >   geom_sf(data = plot_locations_sp_HARV) + "
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:347
# blockquote, which can be cascaded
msgid "> > Error in fortify(data): object 'CHM_plots_HARVcrop_df' not found"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:353
msgid "In the plot above, created in the challenge, all the vegetation plot locations\n"
"(black dots) appear on the Canopy Height Model raster layer except for one. One is\n"
"situated on the blank space to the left of the map. Why?"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:357
msgid "A modification of the first figure in this episode is below, showing the\n"
"relative extents of all the spatial objects. Notice that the extent for our\n"
"vegetation plot layer (black) extends further west than the extent of our CHM\n"
"raster (bright green). The `crop()` function will make a raster extent smaller, it\n"
"will not expand the extent in areas where there are no data. Thus, the extent of our\n"
"vegetation plot layer will still extend further west than the extent of our\n"
"(cropped) raster data (dark green)."
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:366
# code block
msgid "~~~\n"
"Error in st_as_sf(CHM_plots_HARVcrop_df, coords = c(\"x\", \"y\"), crs = utm18nCRS): could not find function \"st_as_sf\"\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:373
# code block
msgid "~~~\n"
"Error in sample_n(CHM_plots_HARVcrop_sp, 10000): object 'CHM_plots_HARVcrop_sp' not found\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:384
# header
msgid "## Define an Extent"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:386
msgid "So far, we have used a shapefile to crop the extent of a raster dataset.\n"
"Alternatively, we can also the `extent()` function to define an extent to be\n"
"used as a cropping boundary. This creates a new object of class extent. Here we\n"
"will provide the `extent()` function our xmin, xmax, ymin, and ymax (in that\n"
"order)."
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:393
# code block
msgid "~~~\n"
"new_extent <- extent(732161.2, 732238.7, 4713249, 4713333)\n"
"class(new_extent)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:401
# code block
msgid "~~~\n"
"[1] \"Extent\"\n"
"attr(,\"package\")\n"
"[1] \"raster\"\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:409
msgid ">\n"
"> The extent can be created from a numeric vector (as shown above), a matrix, or\n"
"> a list. For more details see the `extent()` function help file\n"
"> (`?raster::extent`)."
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:415
msgid "Once we have defined our new extent, we can use the `crop()` function to crop\n"
"our raster to this extent object."
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:419
# code block
msgid "~~~\n"
"CHM_HARV_manual_cropped <- crop(x = CHM_HARV, y = new_extent)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:424
msgid "To plot this data using `ggplot()` we need to convert it to a dataframe. "
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:427
# code block
msgid "~~~\n"
"CHM_HARV_manual_cropped_df <- as.data.frame(CHM_HARV_manual_cropped, xy = TRUE)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:432
msgid "Now we can plot this cropped data. We will show the AOI boundary on the same plot for scale."
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:435
# code block
msgid "~~~\n"
"ggplot() + \n"
"  geom_sf(data = aoi_boundary_HARV, color = \"blue\", fill = NA) +\n"
"  geom_raster(data = CHM_HARV_manual_cropped_df,\n"
"              aes(x = x, y = y, fill = HARV_chmCrop)) + \n"
"  scale_fill_gradientn(name = \"Canopy Height\", colors = terrain.colors(10)) + \n"
"  coord_sf()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:452
# header
msgid "## Extract Raster Pixels Values Using Vector Polygons"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:454
msgid "Often we want to extract values from a raster layer for particular locations -\n"
"for example, plot locations that we are sampling on the ground. We can extract all pixel values within 20m of our x,y point of interest. These can then be summarized into some value of interest (e.g. mean, maximum, total)."
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:457
msgid "![Extract raster information using a polygon boundary. From https://www.neonscience.org/sites/default/files/images/spatialData/BufferSquare.png]({{ site.baseurl }}/images//BufferSquare.png)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:459
msgid "To do this in R, we use the `extract()` function. The `extract()` function\n"
"requires:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:462
# unordered list
msgid "* The raster that we wish to extract values from,"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:463
# unordered list
msgid "* The vector layer containing the polygons that we wish to use as a boundary or"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:464
msgid "boundaries,\n"
"* we can tell it to store the output values in a data frame using\n"
"`df = TRUE`. (This is optional, the default is to return a list, NOT a data frame.) ."
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:468
msgid "We will begin by extracting all canopy height pixel values located within our\n"
"`aoi_boundary_HARV` polygon which surrounds the tower located at the NEON Harvard\n"
"Forest field site."
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:473
# code block
msgid "~~~\n"
"tree_height <- extract(x = CHM_HARV, y = aoi_boundary_HARV, df = TRUE)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:480
#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:559
# code block
msgid "~~~\n"
"Error in h(simpleError(msg, call)): error in evaluating the argument 'y' in selecting a method for function 'extract': object 'aoi_boundary_HARV' not found\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:487
# code block
msgid "~~~\n"
"str(tree_height)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:494
# code block
msgid "~~~\n"
"Error in str(tree_height): object 'tree_height' not found\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:499
msgid "When we use the `extract()` function, R extracts the value for each pixel located\n"
"within the boundary of the polygon being used to perform the extraction - in\n"
"this case the `aoi_boundary_HARV` object (a single polygon). Here, the\n"
"function extracted values from 18,450 pixels."
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:504
msgid "We can create a histogram of tree height values within the boundary to better\n"
"understand the structure or height distribution of trees at our site. We will\n"
"use the column `layer` from our data frame as our x values, as this column\n"
"represents the tree heights for each pixel."
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:510
# code block
msgid "~~~\n"
"ggplot() + \n"
"  geom_histogram(data = tree_height, aes(x = HARV_chmCrop)) +\n"
"  ggtitle(\"Histogram of CHM Height Values (m)\") +\n"
"  xlab(\"Tree Height\") + \n"
"  ylab(\"Frequency of Pixels\")\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:521
# code block
msgid "~~~\n"
"Error in fortify(data): object 'tree_height' not found\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:526
msgid " We can also use the\n"
"`summary()` function to view descriptive statistics including min, max, and mean\n"
"height values. These values help us better understand vegetation at our field\n"
"site."
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:532
# code block
msgid "~~~\n"
"summary(tree_height$HARV_chmCrop)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:539
# code block
msgid "~~~\n"
"Error in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': object 'tree_height' not found\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:544
# header
msgid "## Summarize Extracted Raster Values"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:546
msgid "We often want to extract summary values from a raster. We can tell R the type\n"
"of summary statistic we are interested in using the `fun =` argument. Let's extract\n"
"a mean height value for our AOI. Because we are extracting only a single number, we will\n"
"not use the `df = TRUE` argument. "
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:552
# code block
msgid "~~~\n"
"mean_tree_height_AOI <- extract(x = CHM_HARV, y = aoi_boundary_HARV, fun = mean)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:566
# code block
msgid "~~~\n"
"mean_tree_height_AOI\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:573
# code block
msgid "~~~\n"
"Error in eval(expr, envir, enclos): object 'mean_tree_height_AOI' not found\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:578
msgid "It appears that the mean height value, extracted from our LiDAR data derived\n"
"canopy height model is 22.43 meters."
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:581
# header
msgid "## Extract Data using x,y Locations"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:583
msgid "We can also extract pixel values from a raster by defining a buffer or area\n"
"surrounding individual point locations using the `extract()` function. To do this\n"
"we define the summary argument (`fun = mean`) and the buffer distance (`buffer = 20`)\n"
"which represents the radius of a circular region around each point. By default, the units of the\n"
"buffer are the same units as the data's CRS. All pixels that are touched by the buffer region are included in the extract."
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:589
msgid "![Extract raster information using a buffer region. From: https://www.neonscience.org/sites/default/files/images/spatialData/BufferCircular.png]({{ site.baseurl }}/images/BufferCircular.png)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:591
msgid "Source: National Ecological Observatory Network (NEON)."
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:593
msgid "Let's put this into practice by figuring out the mean tree height in the\n"
"20m around the tower location (`point_HARV`). Because we are extracting only a single number, we\n"
"will not use the `df = TRUE` argument. "
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:598
# code block
msgid "~~~\n"
"mean_tree_height_tower <- extract(x = CHM_HARV,\n"
"                                  y = point_HARV,\n"
"                                  buffer = 20,\n"
"                                  fun = mean)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:608
# code block
msgid "~~~\n"
"Error in h(simpleError(msg, call)): error in evaluating the argument 'y' in selecting a method for function 'extract': object 'point_HARV' not found\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:615
# code block
msgid "~~~\n"
"mean_tree_height_tower\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:622
# code block
msgid "~~~\n"
"Error in eval(expr, envir, enclos): object 'mean_tree_height_tower' not found\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:627
# blockquote, which can be cascaded
msgid "> ## Challenge: Extract Raster Height Values For Plot Locations"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:629
# blockquote, which can be cascaded
msgid "> 1) Use the plot locations object (`plot_locations_sp_HARV`)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:630
# blockquote, which can be cascaded
msgid "> to extract an average tree height for the"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:631
# blockquote, which can be cascaded
msgid "> area within 20m of each vegetation plot location in the study area. Because there are "
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:632
# blockquote, which can be cascaded
msgid "> multiple plot locations, there will be multiple averages returned, so the `df = TRUE` "
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:633
# blockquote, which can be cascaded
msgid "> argument should be used."
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:635
# blockquote, which can be cascaded
msgid "> 2) Create a plot showing the mean tree height of each area. "
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:641
# blockquote, which can be cascaded
msgid "> > # extract data at each plot location"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:642
# blockquote, which can be cascaded
msgid "> > mean_tree_height_plots_HARV <- extract(x = CHM_HARV,"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:643
# blockquote, which can be cascaded
msgid "> >                                        y = plot_locations_sp_HARV,"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:644
# blockquote, which can be cascaded
msgid "> >                                        buffer = 20,"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:645
# blockquote, which can be cascaded
msgid "> >                                        fun = mean,"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:646
# blockquote, which can be cascaded
msgid "> >                                        df = TRUE)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:653
# blockquote, which can be cascaded
msgid "> > Error in h(simpleError(msg, call)): error in evaluating the argument 'y' in selecting a method for function 'extract': object 'plot_locations_sp_HARV' not found"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:660
# blockquote, which can be cascaded
msgid "> > # view data"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:661
# blockquote, which can be cascaded
msgid "> > mean_tree_height_plots_HARV"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:668
# blockquote, which can be cascaded
msgid "> > Error in eval(expr, envir, enclos): object 'mean_tree_height_plots_HARV' not found"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:675
# blockquote, which can be cascaded
msgid "> > # plot data"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:676
# blockquote, which can be cascaded
msgid "> > ggplot(data = mean_tree_height_plots_HARV, aes(ID, HARV_chmCrop)) + "
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:677
# blockquote, which can be cascaded
msgid "> >   geom_col() + "
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:678
# blockquote, which can be cascaded
msgid "> >   ggtitle(\"Mean Tree Height at each Plot\") + "
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:679
# blockquote, which can be cascaded
msgid "> >   xlab(\"Plot ID\") + "
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:680
# blockquote, which can be cascaded
msgid "> >   ylab(\"Tree Height (m)\")"
msgstr ""

#: r-raster-vector-geospatial/_episodes/11-vector-raster-integration.md:687
# blockquote, which can be cascaded
msgid "> > Error in ggplot(data = mean_tree_height_plots_HARV, aes(ID, HARV_chmCrop)): object 'mean_tree_height_plots_HARV' not found"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:1
# Front Matter
msgid "---\n"
"# Please do not edit this file directly; it is auto generated.\n"
"# Instead, please edit 12-time-series-raster.md in _episodes_rmd/\n"
"title: \"Raster Time Series Data in R\"\n"
"teaching: 40\n"
"exercises: 20\n"
"questions:\n"
"- \"How can I view and and plot data for different times of the year?\"\n"
"objectives:\n"
"- \"Understand the format of a time series raster dataset.\"\n"
"- \"Work with time series rasters.\"\n"
"- \"Import a set of rasters stored in a single directory.\"\n"
"- \"Create a multi-paneled plot.\"\n"
"- \"Convert character data to date format.\"\n"
"keypoints:\n"
"- \"Use the `list.files()` function to get a list of filenames matching a specific pattern.\"\n"
"- \"Use the `facet_wrap()` function to create multi-paneled plots with `ggplot2`.\"\n"
"- \"Use the `as.Date()` function to convert data to date format.\"\n"
"source: Rmd\n"
"---"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:32
msgid "This episode covers how to work with and plot a raster time series, using an\n"
"R RasterStack object. It also covers practical assessment of data quality in\n"
"remote sensing derived imagery. "
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:36
# header
msgid "## About Raster Time Series Data"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:38
msgid "A raster data file can contain one single band or many bands. If the raster data\n"
"contains imagery data, each band may represent reflectance for a different\n"
"wavelength (color or type of light) or set of wavelengths - for\n"
"example red, green and blue. A multi-band raster may two or more bands or layers\n"
"of data collected at different times for the same extent (region) and of the\n"
"same resolution. For this episode, we will work with a time series\n"
"of normalized difference vegetation index (NDVI) and RGB data from the Harvard Forest site. \n"
"We introduced the concepts of NDVI and RGB data in [an earlier lesson](https://datacarpentry.org/organization-geospatial/01-intro-raster-data) and worked with an RGB RasterStack in the [Work with Multi-band Rasters in R]({{ site.baseurl }}/ 05-raster-multi-band-in-r/) episode. "
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:47
msgid "In this episode, we will:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:49
# ordered list
msgid "1. Import NDVI data in GeoTIFF format."
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:50
# ordered list
msgid "2. Import, explore and plot NDVI data derived for several dates throughout the"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:51
msgid "year.\n"
"3. View the RGB imagery used to derived the NDVI time series to better\n"
"understand unusual / outlier values."
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:55
# header
msgid "## RGB Data"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:56
msgid "While the NDVI data is a single band product, the RGB images that contain the\n"
"red band used to derive NDVI, contain 3 (of the 7) 30m resolution bands\n"
"available from Landsat data. The RGB directory contains RGB images for each time\n"
"period that NDVI is available."
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:61
# header
msgid "### Getting Started"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:62
msgid "In this episode, we will use the `raster`, `rgdal`, `reshape`, and `scales` packages. Make sure you have them loaded."
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:65
# code block
msgid "~~~\n"
"library(raster)\n"
"library(rgdal)\n"
"library(reshape)\n"
"library(scales)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:73
msgid "To begin, we will create a list of raster files using the `list.files()`\n"
"function. This list will be used to generate a RasterStack. We will\n"
"only add files that have a `.tif` extension to our list. To do this, we will use the syntax\n"
"`pattern=\".tif$\"`. If we specify `full.names = TRUE`, the full path for each file will be added to\n"
"the list."
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:80
# blockquote, which can be cascaded
msgid "> In the pattern above, the `$` character represents the end of a line. Using it ensures"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:81
# blockquote, which can be cascaded
msgid "> that our pattern will only match files that end in `.tif`. This pattern matching uses a "
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:82
# blockquote, which can be cascaded
msgid "> language called \"regular expressions\", which is beyond the scope of this workshop. "
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:84
# blockquote, which can be cascaded
msgid "> * [Regular expressions tutorial](https://regexone.com/)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:85
# blockquote, which can be cascaded
msgid "> * [Regular expressions cheatsheet](https://www.rstudio.com/wp-content/uploads/2016/09/RegExCheatsheet.pdf)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:89
# code block
msgid "~~~\n"
"NDVI_HARV_path <- \"data/NEON-DS-Landsat-NDVI/HARV/2011/NDVI\"\n"
"\n"
"all_NDVI_HARV <- list.files(NDVI_HARV_path,\n"
"                            full.names = TRUE,\n"
"                            pattern = \".tif$\")\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:98
msgid "It's a good idea to look at the file names that matched our search to make sure they\n"
"meet our expectations. "
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:102
# code block
msgid "~~~\n"
"all_NDVI_HARV\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:109
# code block
msgid "~~~\n"
" [1] \"data/NEON-DS-Landsat-NDVI/HARV/2011/NDVI/005_HARV_ndvi_crop.tif\"\n"
" [2] \"data/NEON-DS-Landsat-NDVI/HARV/2011/NDVI/037_HARV_ndvi_crop.tif\"\n"
" [3] \"data/NEON-DS-Landsat-NDVI/HARV/2011/NDVI/085_HARV_ndvi_crop.tif\"\n"
" [4] \"data/NEON-DS-Landsat-NDVI/HARV/2011/NDVI/133_HARV_ndvi_crop.tif\"\n"
" [5] \"data/NEON-DS-Landsat-NDVI/HARV/2011/NDVI/181_HARV_ndvi_crop.tif\"\n"
" [6] \"data/NEON-DS-Landsat-NDVI/HARV/2011/NDVI/197_HARV_ndvi_crop.tif\"\n"
" [7] \"data/NEON-DS-Landsat-NDVI/HARV/2011/NDVI/213_HARV_ndvi_crop.tif\"\n"
" [8] \"data/NEON-DS-Landsat-NDVI/HARV/2011/NDVI/229_HARV_ndvi_crop.tif\"\n"
" [9] \"data/NEON-DS-Landsat-NDVI/HARV/2011/NDVI/245_HARV_ndvi_crop.tif\"\n"
"[10] \"data/NEON-DS-Landsat-NDVI/HARV/2011/NDVI/261_HARV_ndvi_crop.tif\"\n"
"[11] \"data/NEON-DS-Landsat-NDVI/HARV/2011/NDVI/277_HARV_ndvi_crop.tif\"\n"
"[12] \"data/NEON-DS-Landsat-NDVI/HARV/2011/NDVI/293_HARV_ndvi_crop.tif\"\n"
"[13] \"data/NEON-DS-Landsat-NDVI/HARV/2011/NDVI/309_HARV_ndvi_crop.tif\"\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:126
msgid "Now we have a list of all GeoTIFF files in the NDVI directory for Harvard\n"
"Forest. Next, we will create a RasterStack from this list using the `stack()`\n"
"function. We introduced the `stack()` function in [an earlier episode]({{ site.baseurl }}/05-raster-multi-band-in-r/)."
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:131
# code block
msgid "~~~\n"
"NDVI_HARV_stack <- stack(all_NDVI_HARV)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:138
#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:25
#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:26
# code block
msgid "~~~\n"
"Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\"): Discarded\n"
"datum Unknown based on WGS84 ellipsoid in CRS definition\n"
"Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\"): Discarded\n"
"datum Unknown based on WGS84 ellipsoid in CRS definition\n"
"Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\"): Discarded\n"
"datum Unknown based on WGS84 ellipsoid in CRS definition\n"
"Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\"): Discarded\n"
"datum Unknown based on WGS84 ellipsoid in CRS definition\n"
"Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\"): Discarded\n"
"datum Unknown based on WGS84 ellipsoid in CRS definition\n"
"Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\"): Discarded\n"
"datum Unknown based on WGS84 ellipsoid in CRS definition\n"
"Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\"): Discarded\n"
"datum Unknown based on WGS84 ellipsoid in CRS definition\n"
"Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\"): Discarded\n"
"datum Unknown based on WGS84 ellipsoid in CRS definition\n"
"Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\"): Discarded\n"
"datum Unknown based on WGS84 ellipsoid in CRS definition\n"
"Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\"): Discarded\n"
"datum Unknown based on WGS84 ellipsoid in CRS definition\n"
"Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\"): Discarded\n"
"datum Unknown based on WGS84 ellipsoid in CRS definition\n"
"Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\"): Discarded\n"
"datum Unknown based on WGS84 ellipsoid in CRS definition\n"
"Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\"): Discarded\n"
"datum Unknown based on WGS84 ellipsoid in CRS definition\n"
"Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\"): Discarded\n"
"datum Unknown based on WGS84 ellipsoid in CRS definition\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:170
msgid "We can explore the GeoTIFF tags (the embedded metadata) in a stack using the\n"
"same syntax that we used on single-band raster objects in R including: `crs()`\n"
"(coordinate reference system), `extent()` and `res()` (resolution; specifically\n"
"`yres()` and `xres()`)."
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:176
# code block
msgid "~~~\n"
"crs(NDVI_HARV_stack)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:183
# code block
msgid "~~~\n"
"CRS arguments:\n"
" +proj=utm +zone=19 +ellps=WGS84 +units=m +no_defs \n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:189
msgid "The CRS for our stack is `+proj=utm +zone=19 +ellps=WGS84 +units=m +no_defs`. The\n"
"CRS is in UTM Zone 19. If you have completed the previous episodes in\n"
"this workshop, you may have noticed that the UTM zone for the NEON collected remote sensing\n"
"data was in Zone 18 rather than Zone 19. Why are the Landsat data in Zone 19?"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:194
msgid "![Source: National Ecological Observatory Network (NEON).]({{ site.baseurl }}/images/dc-spatial-raster/UTM_zones_18-19.jpg)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:196
msgid "A Landsat scene is extremely wide - spanning over 170km north to\n"
"south and 180km east to west. This means that Landsat data often cover multiple\n"
"UTM zones. When the data are processed, the zone in which the majority of the\n"
"data cover is the zone which is used for the final CRS. Thus, our field site at\n"
"Harvard Forest is located in UTM Zone 18, but the Landsat data is in a CRS of\n"
"UTM Zone 19."
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:203
# blockquote, which can be cascaded
msgid "> ## Challenge: Raster Metadata"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:204
msgid ">\n"
"> Investigate the metadata for our RasterStack and answer the following questions.\n"
">\n"
"> 1. What are the x and y resolution of the data?\n"
"> 2. What units are the above resolution in?\n"
">\n"
"> > ## Answers\n"
"> >\n"
"> > \n"
"> > ~~~\n"
"> > extent(NDVI_HARV_stack)\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > class      : Extent \n"
"> > xmin       : 239415 \n"
"> > xmax       : 239535 \n"
"> > ymin       : 4714215 \n"
"> > ymax       : 4714365 \n"
"> > ~~~\n"
"> > {: .output}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > yres(NDVI_HARV_stack)\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > [1] 30\n"
"> > ~~~\n"
"> > {: .output}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > xres(NDVI_HARV_stack)\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > [1] 30\n"
"> > ~~~\n"
"> > {: .output}"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:259
# header
msgid "## Plotting Time Series Data"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:260
msgid "Once we have created our RasterStack, we can visualize our data. We can use\n"
"the `ggplot()` command to create a multi-panelled plot showing each band in our RasterStack. First we\n"
"need to create a data frame object. Because there are multiple bands in our data, we will reshape (or \"melt\")\n"
"the data so that we have a single column with \n"
"the NDVI observations. We will use the function\n"
"`melt()` from the `reshape` package to do this: "
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:268
# code block
msgid "~~~\n"
"NDVI_HARV_stack_df <- as.data.frame(NDVI_HARV_stack, xy = TRUE) %>%\n"
"    melt(id.vars = c('x','y'))\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:274
msgid "Now we can plot our data using `ggplot()`. We want\n"
"to create a separate panel for each time point in our\n"
"time series, so we will use the `facet_wrap()` \n"
"function to create a multi-paneled plot: "
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:280
# code block
msgid "~~~\n"
"ggplot() +\n"
"  geom_raster(data = NDVI_HARV_stack_df , aes(x = x, y = y, fill = value)) +\n"
"  facet_wrap(~ variable)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:287
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-12-ndvi-wrap-1.png\" title=\"plot of chunk ndvi-wrap\" alt=\"plot of chunk ndvi-wrap\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:289
msgid "Look at the range of NDVI values observed in the plot above. We know that\n"
"the accepted values for NDVI range from 0-1. Why does our data range from\n"
"0 - 10,000?"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:293
# header
msgid "## Scale Factors"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:294
msgid "The metadata for this NDVI data specifies a scale factor: 10,000. A scale factor\n"
"is sometimes used to maintain smaller file sizes by removing decimal places.\n"
"Storing data in integer format keeps files sizes smaller."
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:298
msgid "Let's apply the scale factor before we go any further. Conveniently, we can\n"
"quickly apply this factor using raster math on the entire stack as follows:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:302
# code block
msgid "~~~\n"
"NDVI_HARV_stack <- NDVI_HARV_stack/10000\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:307
msgid "After applying our scale factor, we can recreate our plot using the same code we used above."
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:310
# code block
msgid "~~~\n"
"NDVI_HARV_stack_df <- as.data.frame(NDVI_HARV_stack, xy = TRUE) %>%\n"
"    melt(id.vars = c('x','y'))\n"
"\n"
"ggplot() +\n"
"  geom_raster(data = NDVI_HARV_stack_df , aes(x = x, y = y, fill = value)) +\n"
"  facet_wrap(~variable)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:320
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-12-ndvi-stack-wrap-1.png\" title=\"plot of chunk ndvi-stack-wrap\" alt=\"plot of chunk ndvi-stack-wrap\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:322
# header
msgid "## Take a Closer Look at Our Data"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:324
msgid "Let's take a closer look at the plots of our data. Massachusetts, \n"
"where the NEON Harvard Forest Field Site is located, has a fairly consistent\n"
"fall, winter, spring, and summer season where vegetation turns green in the\n"
"spring, continues to grow throughout the summer, and begins to change colors and\n"
"senesce in the fall through winter. Do you notice anything that seems unusual\n"
"about the patterns of greening and browning observed in the plots above?"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:331
msgid "Hint: the number after the \"X\" in each tile title is the Julian day which in\n"
"this case represents the number of days into each year. If you are unfamiliar\n"
"with Julian day, check out the NEON Data Skills\n"
"[Converting to Julian Day ](https://www.neonscience.org/julian-day-conversion-r)\n"
"tutorial."
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:337
# header
msgid "## View Distribution of Raster Values"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:338
msgid "In the above exercise, we viewed plots of our NDVI time series and noticed a\n"
"few images seem to be unusually light. However this was only a visual\n"
"representation of potential issues in our data. What is another way we can look\n"
"at these data that is quantitative?"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:343
msgid "Next we will use histograms to explore the distribution of NDVI values stored in\n"
"each raster."
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:347
# code block
msgid "~~~\n"
"ggplot(NDVI_HARV_stack_df) +\n"
"  geom_histogram(aes(value)) +\n"
"    facet_wrap(~variable)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:361
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-12-view-stack-histogram-1.png\" title=\"plot of chunk view-stack-histogram\" alt=\"plot of chunk view-stack-histogram\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:363
msgid "It seems like things get green in the spring and summer like we expect, but the\n"
"data at Julian days 277 and 293 are unusual. It appears as if the vegetation got\n"
"green in the spring, but then died back only to get green again towards the end\n"
"of the year. Is this right?"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:368
# header
msgid "### Explore Unusual Data Patterns"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:369
msgid "The NDVI data that we are using comes from 2011, perhaps a strong freeze around\n"
"Julian day 277 could cause a vegetation to senesce early, however in the eastern\n"
"United States, it seems unusual that it would proceed to green up again shortly\n"
"thereafter."
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:374
msgid "Let's next view some temperature data for our field site to see whether there\n"
"were some unusual fluctuations that may explain this pattern of greening and\n"
"browning seen in the NDVI data. First we will read in the temperature data and preview the structure\n"
"of that dataframe:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:380
# code block
msgid "~~~\n"
"har_met_daily <-\n"
"  read.csv(\"data/NEON-DS-Met-Time-Series/HARV/FisherTower-Met/hf001-06-daily-m.csv\")\n"
"\n"
"str(har_met_daily)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:390
# code block
msgid "~~~\n"
"'data.frame':	5345 obs. of  46 variables:\n"
" $ date     : chr  \"2001-02-11\" \"2001-02-12\" \"2001-02-13\" \"2001-02-14\" ...\n"
" $ jd       : int  42 43 44 45 46 47 48 49 50 51 ...\n"
" $ airt     : num  -10.7 -9.8 -2 -0.5 -0.4 -3 -4.5 -9.9 -4.5 3.2 ...\n"
" $ f.airt   : chr  \"\" \"\" \"\" \"\" ...\n"
" $ airtmax  : num  -6.9 -2.4 5.7 1.9 2.4 1.3 -0.7 -3.3 0.7 8.9 ...\n"
" $ f.airtmax: chr  \"\" \"\" \"\" \"\" ...\n"
" $ airtmin  : num  -15.1 -17.4 -7.3 -5.7 -5.7 -9 -12.7 -17.1 -11.7 -1.3 ...\n"
" $ f.airtmin: chr  \"\" \"\" \"\" \"\" ...\n"
" $ rh       : int  40 45 70 78 69 82 66 51 57 62 ...\n"
" $ f.rh     : chr  \"\" \"\" \"\" \"\" ...\n"
" $ rhmax    : int  58 85 100 100 100 100 100 71 81 78 ...\n"
" $ f.rhmax  : chr  \"\" \"\" \"\" \"\" ...\n"
" $ rhmin    : int  22 14 34 59 37 46 30 34 37 42 ...\n"
" $ f.rhmin  : chr  \"\" \"\" \"\" \"\" ...\n"
" $ dewp     : num  -22.2 -20.7 -7.6 -4.1 -6 -5.9 -10.8 -18.5 -12 -3.5 ...\n"
" $ f.dewp   : chr  \"\" \"\" \"\" \"\" ...\n"
" $ dewpmax  : num  -16.8 -9.2 -4.6 1.9 2 -0.4 -0.7 -14.4 -4 0.6 ...\n"
" $ f.dewpmax: chr  \"\" \"\" \"\" \"\" ...\n"
" $ dewpmin  : num  -25.7 -27.9 -10.2 -10.2 -12.1 -10.6 -25.4 -25 -16.5 -5.7 ...\n"
" $ f.dewpmin: chr  \"\" \"\" \"\" \"\" ...\n"
" $ prec     : num  0 0 0 6.9 0 2.3 0 0 0 0 ...\n"
" $ f.prec   : chr  \"\" \"\" \"\" \"\" ...\n"
" $ slrt     : num  14.9 14.8 14.8 2.6 10.5 6.4 10.3 15.5 15 7.7 ...\n"
" $ f.slrt   : chr  \"\" \"\" \"\" \"\" ...\n"
" $ part     : num  NA NA NA NA NA NA NA NA NA NA ...\n"
" $ f.part   : chr  \"M\" \"M\" \"M\" \"M\" ...\n"
" $ netr     : num  NA NA NA NA NA NA NA NA NA NA ...\n"
" $ f.netr   : chr  \"M\" \"M\" \"M\" \"M\" ...\n"
" $ bar      : int  1025 1033 1024 1016 1010 1016 1008 1022 1022 1017 ...\n"
" $ f.bar    : chr  \"\" \"\" \"\" \"\" ...\n"
" $ wspd     : num  3.3 1.7 1.7 2.5 1.6 1.1 3.3 2 2.5 2 ...\n"
" $ f.wspd   : chr  \"\" \"\" \"\" \"\" ...\n"
" $ wres     : num  2.9 0.9 0.9 1.9 1.2 0.5 3 1.9 2.1 1.8 ...\n"
" $ f.wres   : chr  \"\" \"\" \"\" \"\" ...\n"
" $ wdir     : int  287 245 278 197 300 182 281 272 217 218 ...\n"
" $ f.wdir   : chr  \"\" \"\" \"\" \"\" ...\n"
" $ wdev     : int  27 55 53 38 40 56 24 24 31 27 ...\n"
" $ f.wdev   : chr  \"\" \"\" \"\" \"\" ...\n"
" $ gspd     : num  15.4 7.2 9.6 11.2 12.7 5.8 16.9 10.3 11.1 10.9 ...\n"
" $ f.gspd   : chr  \"\" \"\" \"\" \"\" ...\n"
" $ s10t     : num  NA NA NA NA NA NA NA NA NA NA ...\n"
" $ f.s10t   : chr  \"M\" \"M\" \"M\" \"M\" ...\n"
" $ s10tmax  : num  NA NA NA NA NA NA NA NA NA NA ...\n"
" $ f.s10tmax: chr  \"M\" \"M\" \"M\" \"M\" ...\n"
" $ s10tmin  : num  NA NA NA NA NA NA NA NA NA NA ...\n"
" $ f.s10tmin: chr  \"M\" \"M\" \"M\" \"M\" ...\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:441
msgid "The `date` column is currently coded as a factor. We want to be able to treat it as a date,\n"
"so we will use the `as.Date()` function to convert it. We need to tell R what format the\n"
"data is in. Our dates are YYY-MM-DD, which is represented by R as `%Y-%m-%d`."
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:446
# code block
msgid "~~~\n"
"har_met_daily$date <- as.Date(har_met_daily$date, format = \"%Y-%m-%d\")\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:451
msgid "We only want to look at the data from 2011:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:454
# code block
msgid "~~~\n"
"yr_11_daily_avg <- subset(har_met_daily,\n"
"                            date >= as.Date('2011-01-01') &\n"
"                            date <= as.Date('2011-12-31'))\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:461
msgid "Now we can plot the air temperature (the `airt` column) by Julian day (the `jd` column):"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:464
# code block
msgid "~~~\n"
"ggplot() +\n"
"  geom_point(data = yr_11_daily_avg, aes(jd, airt)) +\n"
"  ggtitle(\"Daily Mean Air Temperature\",\n"
"          subtitle = \"NEON Harvard Forest Field Site\") +\n"
"  xlab(\"Julian Day 2011\") +\n"
"  ylab(\"Mean Air Temperature (C)\")\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:474
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-12-air-temperature-1.png\" title=\"plot of chunk air-temperature\" alt=\"plot of chunk air-temperature\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:476
msgid "There are no significant peaks or dips in the temperature during the late summer\n"
"or early fall time period that might account for patterns seen in the NDVI data. \n"
"Let's have a look at the source Landsat imagery that was partially used used to\n"
"derive our NDVI rasters to try to understand what appear to be outlier NDVI values."
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:481
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-12-ndvi-plots-1.png\" title=\"plot of chunk ndvi-plots\" alt=\"plot of chunk ndvi-plots\" width=\"612\" style=\"display: block; margin: auto;\" /><img src=\"{{ site.baseurl }}/fig/rmd-12-ndvi-plots-2.png\" title=\"plot of chunk ndvi-plots\" alt=\"plot of chunk ndvi-plots\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:484
# blockquote, which can be cascaded
msgid "> ## Challenge: Examine RGB Raster Files"
msgstr ""

#: r-raster-vector-geospatial/_episodes/12-time-series-raster.md:485
msgid ">\n"
"> Plot the RGB images for the Julian days 277 and 293. Compare those with the RGB \n"
"> plots for Julian days 133 and 197 (shown above). Does the RGB imagery from these two days explain the low \n"
"> NDVI values observed on these days?\n"
">\n"
"> > ## Answers\n"
"> >\n"
"> > First we need to load in the RGB data for Julian day 277 and look at its metadata.\n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > RGB_277 <- stack(\"data/NEON-DS-Landsat-NDVI/HARV/2011/RGB/277_HARV_landRGB.tif\")\n"
"> > RGB_277\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > class      : RasterStack \n"
"> > dimensions : 652, 696, 453792, 3  (nrow, ncol, ncell, nlayers)\n"
"> > resolution : 30, 30  (x, y)\n"
"> > extent     : 230775, 251655, 4704825, 4724385  (xmin, xmax, ymin, ymax)\n"
"> > crs        : +proj=utm +zone=19 +datum=WGS84 +units=m +no_defs \n"
"> > names      : X277_HARV_landRGB.1, X277_HARV_landRGB.2, X277_HARV_landRGB.3 \n"
"> > min values :                  26,                  29,                  79 \n"
"> > max values :                 255,                 255,                 255 \n"
"> > ~~~\n"
"> > {: .output}\n"
"> > The RGB data has a max value of 255, but we need our color intensity to be between 0 and 1, so \n"
"> > we will divide our RasterStack object by 255.\n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > RGB_277 <- RGB_277/255\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > Next we convert it to a dataframe. \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > RGB_277_df <- as.data.frame(RGB_277, xy = TRUE)\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > We create RGB colors from the three channels:\n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > RGB_277_df$rgb <- with(RGB_277_df, rgb(X277_HARV_landRGB.1, X277_HARV_landRGB.2, X277_HARV_landRGB.3,1))\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > Finally, we can plot the RGB data for Julian day 277. \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > ggplot() +\n"
"> >   geom_raster(data=RGB_277_df, aes(x, y), fill=RGB_277_df$rgb) + \n"
"> >   ggtitle(\"Julian day 277\") \n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > <img src=\"{{ site.baseurl }}/fig/rmd-12-rgb-277-1.png\" title=\"plot of chunk rgb-277\" alt=\"plot of chunk rgb-277\" width=\"612\" style=\"display: block; margin: auto;\" />\n"
"> > We then do the same steps for Julian day 293\n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > # Julian day 293\n"
"> > RGB_293 <- stack(\"data/NEON-DS-Landsat-NDVI/HARV/2011/RGB/293_HARV_landRGB.tif\")\n"
"> > RGB_293 <- RGB_293/255\n"
"> > RGB_293_df <- as.data.frame(RGB_293, xy = TRUE)\n"
"> > RGB_293_df$rgb <- with(RGB_293_df, rgb(X293_HARV_landRGB.1, X293_HARV_landRGB.2, X293_HARV_landRGB.3,1))\n"
"> > ggplot() +\n"
"> >   geom_raster(data = RGB_293_df, aes(x, y), fill = RGB_293_df$rgb) +\n"
"> >   ggtitle(\"Julian day 293\")\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > <img src=\"{{ site.baseurl }}/fig/rmd-12-rgb-293-1.png\" title=\"plot of chunk rgb-293\" alt=\"plot of chunk rgb-293\" width=\"612\" style=\"display: block; margin: auto;\" />\n"
"> > This example highlights the importance of\n"
"> > exploring the source of a derived data product. In this case, the NDVI data\n"
"> > product was created using Landsat imagery - specifically the red\n"
"> > and near-infrared bands. When we look at the RGB collected at Julian days 277 and 293 \n"
"> > we see that most of\n"
"> > the image is filled with clouds. The very low NDVI values resulted from cloud\n"
"> > cover — a common challenge that we encounter when working with satellite remote\n"
"> > sensing imagery."
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:1
# Front Matter
msgid "---\n"
"# Please do not edit this file directly; it is auto generated.\n"
"# Instead, please edit 13-plot-time-series-rasters-in-r.md in _episodes_rmd/\n"
"title: \"Create Publication-quality Graphics\"\n"
"teaching: 40\n"
"exercises: 20\n"
"questions:\n"
"- \"How can I create a publication-quality graphic and customize plot parameters?\"\n"
"objectives:\n"
"- \"Assign custom names to bands in a RasterStack.\"\n"
"- \"Customize raster plots using the `ggplot2` package.\"\n"
"keypoints:\n"
"- \"Use the `theme_void()` function for a clean background to your plot.\"\n"
"- \"Use the `element_text()` function to adjust text size, font, and position.\"\n"
"- \"Use the `brewer.pal()` function to create a custom color palette.\"\n"
"- \"Use the `gsub()` function to do pattern matching and replacement in text.\"\n"
"source: Rmd\n"
"---"
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:63
msgid "This episode covers how to customize your raster plots using the `ggplot2` package\n"
"in R to create publication-quality plots. "
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:66
# header
msgid "## Before and After"
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:68
msgid "In [the previous episode]({{ site.baseurl }}/12-time-series-raster/), we learned how to plot multi-band\n"
"raster data in R using the `facet_wrap()` function. This created a separate panel in our plot\n"
"for each raster band. The plot we created together is shown below: "
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:72
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-13-levelplot-time-series-before-1.png\" title=\"plot of chunk levelplot-time-series-before\" alt=\"plot of chunk levelplot-time-series-before\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:74
msgid "Although this plot is informative, it isn't something we would expect to see in a journal publication. The x\n"
"and y-axis labels aren't informative. There is a lot of unnecessary gray background and the titles of\n"
"each panel don't clearly state that the number refers to the Julian day the data was collected. In this\n"
"episode, we will customize this plot above to produce a publication quality graphic. We will go through these steps iteratively. When we're done, we will have created the plot shown below."
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:79
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-13-levelplot-time-series-after-1.png\" title=\"plot of chunk levelplot-time-series-after\" alt=\"plot of chunk levelplot-time-series-after\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:81
# header
msgid "## Adjust the Plot Theme"
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:83
msgid "The first thing we will do to our plot remove the x and y-axis labels and axis ticks, as these are \n"
"unnecessary and make our plot look messy. We can do this by setting the plot theme to `void`. "
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:87
# code block
msgid "~~~\n"
"ggplot() +\n"
"  geom_raster(data = NDVI_HARV_stack_df , aes(x = x, y = y, fill = value)) +\n"
"  facet_wrap(~variable) +\n"
"  ggtitle(\"Landsat NDVI\", subtitle = \"NEON Harvard Forest\") + \n"
"  theme_void()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:96
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-13-adjust-theme-1.png\" title=\"plot of chunk adjust-theme\" alt=\"plot of chunk adjust-theme\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:98
msgid "Next we will center our plot title and subtitle. We need to do this **after** the `theme_void()` layer,\n"
"because R interprets the `ggplot` layers in order. If we first tell R to center our plot title,\n"
"and then set the theme to `void`, any adjustments we've made to the plot theme will be over-written\n"
"by the `theme_void()` function. So first we make the theme `void` and then we center the title.\n"
"We center both the title and subtitle by using the `theme()` function and setting the `hjust` \n"
"parameter to 0.5. The `hjust` parameter stands for \"horizontal justification\" and takes any value between \n"
"0 and 1. A setting of 0 indicates left justification and a setting of 1 indicates right justification. "
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:107
# code block
msgid "~~~\n"
"ggplot() +\n"
"  geom_raster(data = NDVI_HARV_stack_df , aes(x = x, y = y, fill = value)) +\n"
"  facet_wrap(~variable) +\n"
"  ggtitle(\"Landsat NDVI\", subtitle = \"NEON Harvard Forest\") + \n"
"  theme_void() + \n"
"  theme(plot.title = element_text(hjust = 0.5),\n"
"        plot.subtitle = element_text(hjust = 0.5))\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:118
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-13-adjust-theme-2-1.png\" title=\"plot of chunk adjust-theme-2\" alt=\"plot of chunk adjust-theme-2\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:121
msgid ">\n"
"> Change the plot title (but not the subtitle) to bold font. You can \n"
"> (and should!) use the help menu in RStudio or any internet resources\n"
"> to figure out how to change this setting.\n"
"> \n"
"> > ## Answers\n"
"> > \n"
"> > Learners can find this information in the help files for the `theme()` \n"
"> > function. The parameter to set is called `face`. \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > ggplot() +\n"
"> >   geom_raster(data = NDVI_HARV_stack_df,\n"
"> >               aes(x = x, y = y, fill = value)) +\n"
"> >   facet_wrap(~ variable) +\n"
"> >   ggtitle(\"Landsat NDVI\", subtitle = \"NEON Harvard Forest\") + \n"
"> >   theme_void() + \n"
"> >   theme(plot.title = element_text(hjust = 0.5, face = \"bold\"), \n"
"> >         plot.subtitle = element_text(hjust = 0.5))\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > <img src=\"{{ site.baseurl }}/fig/rmd-13-use-bold-face-1.png\" title=\"plot of chunk use-bold-face\" alt=\"plot of chunk use-bold-face\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:148
# header
msgid "## Adjust the Color Ramp"
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:150
msgid "Next, let's adjust the color ramp used to render the rasters. First, we can\n"
"change the blue color ramp to a green one that is more visually suited to our\n"
"NDVI (greenness) data using the `colorRampPalette()` function in combination\n"
"with `colorBrewer`. Then we use `scale_fill_gradientn` to pass the list of\n"
"colours (here 20 different colours) to ggplot."
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:156
msgid "First we need to create a set of colors to use. We will select a set of\n"
"nine colors from the \"YlGn\" (yellow-green) color palette. This returns a \n"
"set of hex color codes:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:161
# code block
msgid "~~~\n"
"brewer.pal(9, \"YlGn\")\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:168
# code block
msgid "~~~\n"
"[1] \"#FFFFE5\" \"#F7FCB9\" \"#D9F0A3\" \"#ADDD8E\" \"#78C679\" \"#41AB5D\" \"#238443\"\n"
"[8] \"#006837\" \"#004529\"\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:174
msgid "Then we will pass those color codes to the `colorRampPalette` function, which\n"
"will interpolate from those colors a more nuanced color range."
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:178
# code block
msgid "~~~\n"
"green_colors <- brewer.pal(9, \"YlGn\") %>%\n"
"  colorRampPalette()\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:184
msgid "We can \n"
"tell the `colorRampPalette()` function how many discrete colors within this color range to\n"
"create. In our case, we will use 20 colors when we plot our graphic."
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:189
# code block
msgid "~~~\n"
"ggplot() +\n"
"  geom_raster(data = NDVI_HARV_stack_df , aes(x = x, y = y, fill = value)) +\n"
"  facet_wrap(~variable) +\n"
"  ggtitle(\"Landsat NDVI\", subtitle = \"NEON Harvard Forest\") + \n"
"  theme_void() + \n"
"  theme(plot.title = element_text(hjust = 0.5, face = \"bold\"), \n"
"    plot.subtitle = element_text(hjust = 0.5)) + \n"
"  scale_fill_gradientn(name = \"NDVI\", colours = green_colors(20))\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:201
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-13-change-color-ramp-1.png\" title=\"plot of chunk change-color-ramp\" alt=\"plot of chunk change-color-ramp\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:203
msgid "The yellow to green color ramp visually represents NDVI well given it's a\n"
"measure of greenness. Someone looking at the plot can quickly understand that\n"
"pixels that are more green have a higher NDVI value."
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:208
# blockquote, which can be cascaded
msgid "> For all of the `brewer.pal` ramp names see the [brewerpal page](http://www.datavis.ca/sasmac/brewerpal.html)."
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:212
msgid ">\n"
"> Cynthia Brewer, the creator of\n"
"> ColorBrewer, offers an online tool to help choose suitable color ramps, or to\n"
"> create your own. [ColorBrewer 2.0; Color Advise for Cartography](http://colorbrewer2.org/)"
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:218
# header
msgid "## Refine Plot & Tile Labels"
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:219
msgid "Next, let's label each panel in our plot with the Julian day that the \n"
"raster data for that panel was collected. The current names come from the band\n"
"\"layer names\"\" stored in the\n"
"`RasterStack` and the first part of each name is the Julian day."
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:224
msgid "To create a more meaningful label we can remove the \"x\" and replace it with\n"
"\"day\" using the `gsub()` function in R. The syntax is as follows:\n"
"`gsub(\"StringToReplace\", \"TextToReplaceIt\", object)`."
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:228
msgid "First let's remove \"_HARV_NDVI_crop\" from each label to make the labels \n"
"shorter and remove repetition. To illustrate how this works, we will first\n"
"look at the names for our `NDVI_HARV_stack` object: "
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:233
# code block
msgid "~~~\n"
"names(NDVI_HARV_stack)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:240
# code block
msgid "~~~\n"
" [1] \"X005_HARV_ndvi_crop\" \"X037_HARV_ndvi_crop\" \"X085_HARV_ndvi_crop\"\n"
" [4] \"X133_HARV_ndvi_crop\" \"X181_HARV_ndvi_crop\" \"X197_HARV_ndvi_crop\"\n"
" [7] \"X213_HARV_ndvi_crop\" \"X229_HARV_ndvi_crop\" \"X245_HARV_ndvi_crop\"\n"
"[10] \"X261_HARV_ndvi_crop\" \"X277_HARV_ndvi_crop\" \"X293_HARV_ndvi_crop\"\n"
"[13] \"X309_HARV_ndvi_crop\"\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:249
msgid "Now we will use the `gsub()` function to find the character string\n"
"\"_HARV_ndvi_crop\" and replace it with a blank string (\"\"). We will \n"
"assign this output to a new object (`raster_names`) and look\n"
"at that object to make sure our code is doing what we want it to."
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:255
# code block
msgid "~~~\n"
"raster_names <- names(NDVI_HARV_stack)\n"
"\n"
"raster_names <- gsub(\"_HARV_ndvi_crop\", \"\", raster_names)\n"
"raster_names\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:265
# code block
msgid "~~~\n"
" [1] \"X005\" \"X037\" \"X085\" \"X133\" \"X181\" \"X197\" \"X213\" \"X229\" \"X245\" \"X261\"\n"
"[11] \"X277\" \"X293\" \"X309\"\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:271
msgid "So far so good. Now we will use `gsub()` again to replace the \"X\" with the word\n"
"\"Day\" followed by a space."
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:275
# code block
msgid "~~~\n"
"raster_names  <- gsub(\"X\", \"Day \", raster_names)\n"
"raster_names\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:283
# code block
msgid "~~~\n"
" [1] \"Day 005\" \"Day 037\" \"Day 085\" \"Day 133\" \"Day 181\" \"Day 197\" \"Day 213\"\n"
" [8] \"Day 229\" \"Day 245\" \"Day 261\" \"Day 277\" \"Day 293\" \"Day 309\"\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:289
msgid "Our labels look good now. Let's reassign them to our `all_NDVI_HARV` object:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:291
# code block
msgid "~~~\n"
"labels_names <- setNames(raster_names, unique(NDVI_HARV_stack_df$variable))\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:296
msgid "Once the names for each band have been reassigned, we can render our plot with\n"
"the new labels using a`labeller`."
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:300
# code block
msgid "~~~\n"
"ggplot() +\n"
"  geom_raster(data = NDVI_HARV_stack_df , aes(x = x, y = y, fill = value)) +\n"
"  facet_wrap(~variable, labeller = labeller(variable = labels_names)) +\n"
"  ggtitle(\"Landsat NDVI\", subtitle = \"NEON Harvard Forest\") + \n"
"  theme_void() + \n"
"  theme(plot.title = element_text(hjust = 0.5, face = \"bold\"), \n"
"    plot.subtitle = element_text(hjust = 0.5)) + \n"
"  scale_fill_gradientn(name = \"NDVI\", colours = green_colors(20))\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:312
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-13-create-levelplot-1.png\" title=\"plot of chunk create-levelplot\" alt=\"plot of chunk create-levelplot\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:315
# header
msgid "## Change Layout of Panels"
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:317
msgid "We can adjust the columns of our plot by setting the number of columns `ncol`\n"
"and the number of rows `nrow` in `facet_wrap`. Let's make our plot so that\n"
"it has a width of five panels. "
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:322
# code block
msgid "~~~\n"
"ggplot() +\n"
"  geom_raster(data = NDVI_HARV_stack_df , aes(x = x, y = y, fill = value)) +\n"
"  facet_wrap(~variable, ncol = 5, labeller = labeller(variable = labels_names)) +\n"
"  ggtitle(\"Landsat NDVI\", subtitle = \"NEON Harvard Forest\") + \n"
"  theme_void() + \n"
"  theme(plot.title = element_text(hjust = 0.5, face = \"bold\"), \n"
"    plot.subtitle = element_text(hjust = 0.5)) + \n"
"  scale_fill_gradientn(name = \"NDVI\", colours = green_colors(20))\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:334
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-13-adjust-layout-1.png\" title=\"plot of chunk adjust-layout\" alt=\"plot of chunk adjust-layout\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:336
msgid "Now we have a beautiful, publication quality plot!"
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:338
# blockquote, which can be cascaded
msgid "> ## Challenge: Divergent Color Ramps"
msgstr ""

#: r-raster-vector-geospatial/_episodes/13-plot-time-series-rasters-in-r.md:339
msgid ">\n"
"> When we used the `gsub()` function to modify the tile labels we replaced the beginning of each\n"
"> tile title with \"Day\". A more descriptive name could be \"Julian Day\". Update the \n"
"> plot above with the following changes:\n"
">\n"
"> 1. Label each tile \"Julian Day\" with the julian day value\n"
"> following.\n"
"> 2. Change the color ramp to a divergent brown to green color ramp. \n"
">\n"
"> **Questions:**\n"
"> Does having a divergent color ramp represent the data\n"
"> better than a sequential color ramp (like \"YlGn\")? Can you think of other data\n"
"> sets where a divergent color ramp may be best?\n"
">\n"
"> > ## Answers\n"
"> >\n"
"> > \n"
"> > ~~~\n"
"> > raster_names  <- gsub(\"Day\",\"Julian Day \", raster_names)\n"
"> > labels_names <- setNames(raster_names, unique(NDVI_HARV_stack_df$variable))\n"
"> > \n"
"> > brown_green_colors <- colorRampPalette(brewer.pal(9, \"BrBG\"))\n"
"> > \n"
"> > ggplot() +\n"
"> >   geom_raster(data = NDVI_HARV_stack_df , aes(x = x, y = y, fill = value)) +\n"
"> >   facet_wrap(~variable, ncol = 5, labeller = labeller(variable = labels_names)) +\n"
"> >   ggtitle(\"Landsat NDVI - Julian Days\", subtitle = \"Harvard Forest 2011\") +\n"
"> >   theme_void() +\n"
"> >   theme(plot.title = element_text(hjust = 0.5, face = \"bold\"), \n"
"> >   plot.subtitle = element_text(hjust = 0.5)) +\n"
"> >   scale_fill_gradientn(name = \"NDVI\", colours = brown_green_colors(20))\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > <img src=\"{{ site.baseurl }}/fig/rmd-13-final-figure-1.png\" title=\"plot of chunk final-figure\" alt=\"plot of chunk final-figure\" width=\"612\" style=\"display: block; margin: auto;\" />\n"
"> > \n"
"> > For NDVI data, the sequential color ramp is better than the divergent as it is \n"
"> > more akin to the process\n"
"> > of greening up, which starts off at one end and just keeps increasing."
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:1
# Front Matter
msgid "---\n"
"# Please do not edit this file directly; it is auto generated.\n"
"# Instead, please edit 14-extract-ndvi-from-rasters-in-r.md in _episodes_rmd/\n"
"title: \"Derive Values from Raster Time Series\"\n"
"teaching: 40\n"
"exercises: 20\n"
"questions:\n"
"- \"How can I calculate, extract, and export summarized raster pixel data?\"\n"
"objectives:\n"
"- \"Extract summary pixel values from a raster.\"\n"
"- \"Save summary values to a .csv file.\"\n"
"- \"Plot summary pixel values using `ggplot()`.\"\n"
"- \"Compare NDVI values between two different sites.\"\n"
"keypoints:\n"
"- \"Use the `cellStats()` function to calculate summary statistics for cells in a raster object.\"\n"
"- \"The pipe (`|`) operator means `or`.\"\n"
"- \"Use the `rbind()` function to combine data frames that have the same column names.\"\n"
"source: Rmd\n"
"---"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:63
msgid "In this episode, we will extract NDVI values from a\n"
"raster time series dataset and plot them using the\n"
"`ggplot2` package."
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:67
# header
msgid "## Extract Summary Statistics From Raster Data"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:68
msgid "We often want to extract summary values from raster data. For\n"
"example, we might want to understand overall greeness across a field site or at\n"
"each plot within a field site. These values can then be compared between\n"
"different field sites and combined with other\n"
"related metrics to support modeling and further analysis."
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:74
# header
msgid "## Calculate Average NDVI"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:75
msgid "Our goal in this episode is to create a dataframe that contains a single,\n"
"mean NDVI value for each raster in our time series. This value represents the\n"
"mean NDVI value for this area on a given day."
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:79
msgid "We can calculate the mean for each raster using the `cellStats()` function. The\n"
"`cellStats()` function produces a named numeric vector, where each value\n"
"is associated with the name of raster stack it was derived from."
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:84
# code block
msgid "~~~\n"
"avg_NDVI_HARV <- cellStats(NDVI_HARV_stack, mean)\n"
"avg_NDVI_HARV\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:92
# code block
msgid "~~~\n"
"X005_HARV_ndvi_crop X037_HARV_ndvi_crop X085_HARV_ndvi_crop X133_HARV_ndvi_crop \n"
"           0.365150            0.242645            0.251390            0.599300 \n"
"X181_HARV_ndvi_crop X197_HARV_ndvi_crop X213_HARV_ndvi_crop X229_HARV_ndvi_crop \n"
"           0.878725            0.893250            0.878395            0.881505 \n"
"X245_HARV_ndvi_crop X261_HARV_ndvi_crop X277_HARV_ndvi_crop X293_HARV_ndvi_crop \n"
"           0.850120            0.796360            0.033050            0.056895 \n"
"X309_HARV_ndvi_crop \n"
"           0.541130 \n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:104
msgid "We can then convert our output to a data frame using `as.data.frame()`. It's a good\n"
"idea to view the first few rows of our data frame with `head()` to make sure the\n"
"structure is what we expect."
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:109
# code block
msgid "~~~\n"
"avg_NDVI_HARV <- as.data.frame(avg_NDVI_HARV)\n"
"head(avg_NDVI_HARV)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:117
# code block
msgid "~~~\n"
"                    avg_NDVI_HARV\n"
"X005_HARV_ndvi_crop      0.365150\n"
"X037_HARV_ndvi_crop      0.242645\n"
"X085_HARV_ndvi_crop      0.251390\n"
"X133_HARV_ndvi_crop      0.599300\n"
"X181_HARV_ndvi_crop      0.878725\n"
"X197_HARV_ndvi_crop      0.893250\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:128
msgid "We now have a data frame with row names that are based on the original file name and\n"
"a mean NDVI value for each file. Next, let's clean up the column names in our\n"
"data frame to make it easier for colleagues to work with our code."
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:132
msgid "It is a bit confusing to have duplicate object & column names (`avg_NDVI_HARV`). Additionally the \"avg\" does not clearly indicate what the value in that\n"
"particular column is. Let's change the NDVI column name to `MeanNDVI`."
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:136
# code block
msgid "~~~\n"
"names(avg_NDVI_HARV) <- \"meanNDVI\"\n"
"head(avg_NDVI_HARV)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:144
# code block
msgid "~~~\n"
"                    meanNDVI\n"
"X005_HARV_ndvi_crop 0.365150\n"
"X037_HARV_ndvi_crop 0.242645\n"
"X085_HARV_ndvi_crop 0.251390\n"
"X133_HARV_ndvi_crop 0.599300\n"
"X181_HARV_ndvi_crop 0.878725\n"
"X197_HARV_ndvi_crop 0.893250\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:155
msgid "By renaming the column, we lose the \"HARV\" in the header that reminds us what\n"
"site our data are from. While we are only working with one site now, we\n"
"might want to compare several sites worth of data in the future. Let's add a\n"
"column to our dataframe called \"site\"."
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:161
# code block
msgid "~~~\n"
"avg_NDVI_HARV$site <- \"HARV\"\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:166
msgid "We can populate this column with the\n"
"site name - HARV. Let's also create a year column and populate it with 2011 -\n"
"the year our data were collected."
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:171
# code block
msgid "~~~\n"
"avg_NDVI_HARV$year <- \"2011\"\n"
"head(avg_NDVI_HARV)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:179
# code block
msgid "~~~\n"
"                    meanNDVI site year\n"
"X005_HARV_ndvi_crop 0.365150 HARV 2011\n"
"X037_HARV_ndvi_crop 0.242645 HARV 2011\n"
"X085_HARV_ndvi_crop 0.251390 HARV 2011\n"
"X133_HARV_ndvi_crop 0.599300 HARV 2011\n"
"X181_HARV_ndvi_crop 0.878725 HARV 2011\n"
"X197_HARV_ndvi_crop 0.893250 HARV 2011\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:190
msgid "We now have a dataframe that contains a row for each raster file processed, and\n"
"columns for `meanNDVI`, `site`, and `year`."
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:193
# header
msgid "## Extract Julian Day from row names"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:194
msgid "We'd like to produce a plot where Julian days (the numeric day of the year,\n"
"0 - 365/366) are on the x-axis and NDVI is on the y-axis. To create this plot,\n"
"we'll need a column that contains the Julian day value."
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:198
msgid "One way to create a Julian day column is to use `gsub()` on the file name in each\n"
"row. We can replace both the `X` and the `_HARV_NDVI_crop` to extract the Julian\n"
"Day value, just like we did in the [previous episode]({{ site.baseurl }}/13-plot-time-series-rasters-in-r/)."
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:202
msgid "This time we will use one additional trick to do both of these steps at the same\n"
"time. The vertical bar character ( `|` ) is equivalent to the word \"or\". Using\n"
"this character in our search pattern\n"
"allows us to search for more than one pattern in our text strings."
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:208
# code block
msgid "~~~\n"
"julianDays <- gsub(\"X|_HARV_ndvi_crop\", \"\", row.names(avg_NDVI_HARV))\n"
"julianDays\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:216
# code block
msgid "~~~\n"
" [1] \"005\" \"037\" \"085\" \"133\" \"181\" \"197\" \"213\" \"229\" \"245\" \"261\" \"277\" \"293\"\n"
"[13] \"309\"\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:222
msgid "Now that we've extracted the Julian days from our row names, we can add that\n"
"data to the data frame as a column called \"julianDay\"."
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:226
# code block
msgid "~~~\n"
"avg_NDVI_HARV$julianDay <- julianDays\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:231
msgid "Let's check the class of this new column:"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:234
# code block
msgid "~~~\n"
"class(avg_NDVI_HARV$julianDay)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:241
# code block
msgid "~~~\n"
"[1] \"character\"\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:246
# header
msgid "## Convert Julian Day to Date Class"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:247
msgid "Currently, the values in the Julian day column are stored as class `character`.\n"
"Storing this data as a date object is better - for plotting, data subsetting and\n"
"working with our data. Let's convert. We worked with data conversions\n"
"[in an earlier episode]({{ site.baseurl }}/12-time-series-raster/). For a more\n"
"introduction to date-time classes, see the NEON Data Skills tutorial\n"
"[Convert Date & Time Data from Character Class to Date-Time Class (POSIX) in R](https://www.neonscience.org/dc-convert-date-time-POSIX-r)."
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:254
msgid "To convert a Julian day number to a date class, we need to set the origin, which is\n"
"the day that our Julian days start counting from. Our data is from 2011 and we\n"
"know that the USGS Landsat Team created Julian day values for this year.\n"
"Therefore, the first day or \"origin\" for our Julian day count is 01 January 2011."
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:260
# code block
msgid "~~~\n"
"origin <- as.Date(\"2011-01-01\")\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:265
msgid "Next we convert the `julianDay` column from character to integer."
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:268
# code block
msgid "~~~\n"
"avg_NDVI_HARV$julianDay <- as.integer(avg_NDVI_HARV$julianDay)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:273
msgid "Once we set the Julian day origin, we can add the Julian day value (as an\n"
"integer) to the origin date."
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:276
msgid "Note that when we convert our integer class `julianDay` values to dates, we\n"
"subtracted 1.  This is because the origin day is 01 January 2011, so the extracted day\n"
"is 01. The Julian Day (or year day) for this is also 01. When we convert from the\n"
"integer 05 `julianDay` value (indicating 5th of January), we cannot simply add\n"
"`origin + julianDay` because `01 + 05 = 06` or 06 January 2011. To correct, this\n"
"error we then subtract 1 to get the correct day, January 05 2011."
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:284
# code block
msgid "~~~\n"
"avg_NDVI_HARV$Date<- origin + (avg_NDVI_HARV$julianDay - 1)\n"
"head(avg_NDVI_HARV$Date)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:292
# code block
msgid "~~~\n"
"[1] \"2011-01-05\" \"2011-02-06\" \"2011-03-26\" \"2011-05-13\" \"2011-06-30\"\n"
"[6] \"2011-07-16\"\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:298
msgid "Since the origin date was originally set as a Date class object, the new `Date`\n"
"column is also stored as class `Date`."
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:302
# code block
msgid "~~~\n"
"class(avg_NDVI_HARV$Date)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:309
# code block
msgid "~~~\n"
"[1] \"Date\"\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:314
# blockquote, which can be cascaded
msgid "> ## Challenge: NDVI for the San Joaquin Experimental Range"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:315
msgid ">\n"
"> We often want to compare two different sites. The National Ecological\n"
"> Observatory Network (NEON) also has a field site in Southern California\n"
"> at the\n"
"> [San Joaquin Experimental Range (SJER)](https://www.neonscience.org/field-sites/field-sites-map/SJER).\n"
">\n"
"> For this challenge, create a dataframe containing the mean NDVI values\n"
"> and the Julian days the data was collected (in date format)\n"
"> for the NEON San\n"
"> Joaquin Experimental Range field site. NDVI data for SJER are located in the\n"
"> `NEON-DS-Landsat-NDVI/SJER/2011/NDVI` directory.\n"
">\n"
"> > ## Answers\n"
"> >\n"
"> > First we will read in the NDVI data for the SJER field site.\n"
"> >\n"
"> > \n"
"> > ~~~\n"
"> > NDVI_path_SJER <- \"data/NEON-DS-Landsat-NDVI/SJER/2011/NDVI\"\n"
"> > \n"
"> > all_NDVI_SJER <- list.files(NDVI_path_SJER,\n"
"> >                             full.names = TRUE,\n"
"> >                             pattern = \".tif$\")\n"
"> > \n"
"> > NDVI_stack_SJER <- stack(all_NDVI_SJER)\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\"): Discarded\n"
"> > datum Unknown based on WGS84 ellipsoid in CRS definition\n"
"> > Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\"): Discarded\n"
"> > datum Unknown based on WGS84 ellipsoid in CRS definition\n"
"> > Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\"): Discarded\n"
"> > datum Unknown based on WGS84 ellipsoid in CRS definition\n"
"> > Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\"): Discarded\n"
"> > datum Unknown based on WGS84 ellipsoid in CRS definition\n"
"> > Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\"): Discarded\n"
"> > datum Unknown based on WGS84 ellipsoid in CRS definition\n"
"> > Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\"): Discarded\n"
"> > datum Unknown based on WGS84 ellipsoid in CRS definition\n"
"> > Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\"): Discarded\n"
"> > datum Unknown based on WGS84 ellipsoid in CRS definition\n"
"> > Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\"): Discarded\n"
"> > datum Unknown based on WGS84 ellipsoid in CRS definition\n"
"> > Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\"): Discarded\n"
"> > datum Unknown based on WGS84 ellipsoid in CRS definition\n"
"> > Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\"): Discarded\n"
"> > datum Unknown based on WGS84 ellipsoid in CRS definition\n"
"> > Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\"): Discarded\n"
"> > datum Unknown based on WGS84 ellipsoid in CRS definition\n"
"> > Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\"): Discarded\n"
"> > datum Unknown based on WGS84 ellipsoid in CRS definition\n"
"> > Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\"): Discarded\n"
"> > datum Unknown based on WGS84 ellipsoid in CRS definition\n"
"> > Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\"): Discarded\n"
"> > datum Unknown based on WGS84 ellipsoid in CRS definition\n"
"> > Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\"): Discarded\n"
"> > datum Unknown based on WGS84 ellipsoid in CRS definition\n"
"> > Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\"): Discarded\n"
"> > datum Unknown based on WGS84 ellipsoid in CRS definition\n"
"> > Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\"): Discarded\n"
"> > datum Unknown based on WGS84 ellipsoid in CRS definition\n"
"> > Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\"): Discarded\n"
"> > datum Unknown based on WGS84 ellipsoid in CRS definition\n"
"> > ~~~\n"
"> > {: .error}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > NDVI_stack_SJER <- NDVI_stack_SJER/10000\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > Then we can calculate the mean values for each day and put that in a dataframe.\n"
"> >\n"
"> > \n"
"> > ~~~\n"
"> > avg_NDVI_SJER <- as.data.frame(cellStats(NDVI_stack_SJER, mean))\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> >\n"
"> > Next we rename the NDVI column, and add site and year columns to our data.\n"
"> >\n"
"> > \n"
"> > ~~~\n"
"> > names(avg_NDVI_SJER) <- \"meanNDVI\"\n"
"> > avg_NDVI_SJER$site <- \"SJER\"\n"
"> > avg_NDVI_SJER$year <- \"2011\"\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> >\n"
"> > Now we will create our Julian day column\n"
"> >\n"
"> > \n"
"> > ~~~\n"
"> > julianDays_SJER <- gsub(\"X|_SJER_ndvi_crop\", \"\", row.names(avg_NDVI_SJER))\n"
"> > origin <- as.Date(\"2011-01-01\")\n"
"> > avg_NDVI_SJER$julianDay <- as.integer(julianDays_SJER)\n"
"> > \n"
"> > avg_NDVI_SJER$Date <- origin + (avg_NDVI_SJER$julianDay - 1)\n"
"> > \n"
"> > head(avg_NDVI_SJER)\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> >                     meanNDVI site year julianDay       Date\n"
"> > X014_SJER_ndvi_crop 0.048216 SJER 2011        14 2011-01-14\n"
"> > X046_SJER_ndvi_crop 0.529780 SJER 2011        46 2011-02-15\n"
"> > X062_SJER_ndvi_crop 0.554368 SJER 2011        62 2011-03-03\n"
"> > X094_SJER_ndvi_crop 0.601096 SJER 2011        94 2011-04-04\n"
"> > X110_SJER_ndvi_crop 0.555836 SJER 2011       110 2011-04-20\n"
"> > X126_SJER_ndvi_crop 0.538336 SJER 2011       126 2011-05-06\n"
"> > ~~~\n"
"> > {: .output}"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:438
# header
msgid "## Plot NDVI Using ggplot"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:439
msgid "We now have a clean dataframe with properly scaled NDVI and Julian days. Let's\n"
"plot our data."
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:443
# code block
msgid "~~~\n"
"ggplot(avg_NDVI_HARV, aes(julianDay, meanNDVI)) +\n"
"  geom_point() +\n"
"  ggtitle(\"Landsat Derived NDVI - 2011\", subtitle = \"NEON Harvard Forest Field Site\") +\n"
"  xlab(\"Julian Days\") + ylab(\"Mean NDVI\")\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:451
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-14-ggplot-data-1.png\" title=\"plot of chunk ggplot-data\" alt=\"plot of chunk ggplot-data\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:453
# blockquote, which can be cascaded
msgid "> ## Challenge: Plot San Joaquin Experimental Range Data"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:454
msgid ">\n"
"> Create a complementary plot for the SJER data. Plot the data points in a\n"
"different color.\n"
">\n"
"> > ## Answers\n"
"> >\n"
"> > \n"
"> > ~~~\n"
"> > ggplot(avg_NDVI_SJER, aes(julianDay, meanNDVI)) +\n"
"> >   geom_point(colour = \"SpringGreen4\") +\n"
"> >   ggtitle(\"Landsat Derived NDVI - 2011\", subtitle = \"NEON SJER Field Site\") +\n"
"> >   xlab(\"Julian Day\") + ylab(\"Mean NDVI\")\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > <img src=\"{{ site.baseurl }}/fig/rmd-14-avg-ndvi-sjer-1.png\" title=\"plot of chunk avg-ndvi-sjer\" alt=\"plot of chunk avg-ndvi-sjer\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:473
# header
msgid "## Compare NDVI from Two Different Sites in One Plot"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:474
msgid "Comparison of plots is often easiest when both plots are side by side. Or, even\n"
"better, if both sets of data are plotted in the same plot. We can do this by\n"
"merging the two data sets together. The date frames must have the same number\n"
"of columns and exact same column names to be merged."
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:480
# code block
msgid "~~~\n"
"NDVI_HARV_SJER <- rbind(avg_NDVI_HARV, avg_NDVI_SJER)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:485
msgid "Now we can plot both datasets on the same plot."
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:488
# code block
msgid "~~~\n"
"ggplot(NDVI_HARV_SJER, aes(x = julianDay, y = meanNDVI, colour = site)) +\n"
"  geom_point(aes(group = site)) +\n"
"  geom_line(aes(group = site)) +\n"
"  ggtitle(\"Landsat Derived NDVI - 2011\", subtitle = \"Harvard Forest vs San Joaquin\") +\n"
"  xlab(\"Julian Day\") + ylab(\"Mean NDVI\")\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:497
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-14-ndvi-harv-sjer-comp-1.png\" title=\"plot of chunk ndvi-harv-sjer-comp\" alt=\"plot of chunk ndvi-harv-sjer-comp\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:499
# blockquote, which can be cascaded
msgid "> ## Challenge: Plot NDVI with date"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:500
msgid ">\n"
"> Plot the SJER and HARV data in one plot but use date, rather than Julian day,\n"
"> on the x-axis.\n"
">\n"
"> > ## Answers\n"
"> >\n"
"> > \n"
"> > ~~~\n"
"> > ggplot(NDVI_HARV_SJER, aes(x = Date, y = meanNDVI, colour = site)) +\n"
"> >   geom_point(aes(group = site)) +\n"
"> >   geom_line(aes(group = site)) +\n"
"> >   ggtitle(\"Landsat Derived NDVI - 2011\", subtitle = \"Harvard Forest vs San Joaquin\") +\n"
"> >   xlab(\"Date\") + ylab(\"Mean NDVI\")\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > <img src=\"{{ site.baseurl }}/fig/rmd-14-ndvi-harv-sjer-date-1.png\" title=\"plot of chunk ndvi-harv-sjer-date\" alt=\"plot of chunk ndvi-harv-sjer-date\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:520
# header
msgid "## Remove Outlier Data"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:521
msgid "As we look at these plots we see variation in greenness across the year.\n"
"However, the pattern is interrupted by a few points where NDVI quickly drops\n"
"towards 0 during a time period when we might expect the vegetation to have a\n"
"higher greenness value. Is the vegetation truly senescent or gone or are these\n"
"outlier values that should be removed from the data?"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:527
msgid "We've seen in [an earlier episode]({{ site.baseurl }}/12-time-series-raster/) that\n"
"data points with very low NDVI values can be associated with\n"
"images that are filled with clouds. Thus, we can attribute the low NDVI values\n"
"to high levels of cloud cover. Is the same thing happening at SJER?"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:532
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-14-view-all-rgb-SJER-1.png\" title=\"plot of chunk view-all-rgb-SJER\" alt=\"plot of chunk view-all-rgb-SJER\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:534
msgid "Without significant additional processing, we will not be able to retrieve a\n"
"strong reflection from vegetation, from a remotely sensed image that is\n"
"predominantly cloud covered. Thus, these points are likely bad data points.\n"
"Let's remove them."
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:539
msgid "First, we will identify the good data points that should be retained. One way\n"
"to do this is by identifying a threshold value. All values below that threshold\n"
"will be removed from our analysis. We will use 0.1 as an example for this\n"
"episode. We can then use the subset function to remove outlier datapoints\n"
"(below our identified threshold)."
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:546
# blockquote, which can be cascaded
msgid "> Thresholding, or removing outlier data,"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:547
# blockquote, which can be cascaded
msgid "> can be tricky business. In this case, we can be confident that some of our NDVI"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:548
# blockquote, which can be cascaded
msgid "> values are not valid due to cloud cover. However, a threshold value may not"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:549
# blockquote, which can be cascaded
msgid "> always be sufficient given that 0.1 could be a valid NDVI value in some areas. This"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:550
# blockquote, which can be cascaded
msgid "> is where decision-making should be fueled by practical scientific knowledge of"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:551
# blockquote, which can be cascaded
msgid "> the data and the desired outcomes!"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:555
# code block
msgid "~~~\n"
"avg_NDVI_HARV_clean <- subset(avg_NDVI_HARV, meanNDVI > 0.1)\n"
"avg_NDVI_HARV_clean$meanNDVI < 0.1\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:563
# code block
msgid "~~~\n"
" [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:568
msgid "Now we can create another plot without the suspect data."
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:571
# code block
msgid "~~~\n"
"ggplot(avg_NDVI_HARV_clean, aes(x = julianDay, y = meanNDVI)) +\n"
"  geom_point() +\n"
"  ggtitle(\"Landsat Derived NDVI - 2011\", subtitle = \"NEON Harvard Forest Field Site\") +\n"
"  xlab(\"Julian Days\") + ylab(\"Mean NDVI\")\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:579
msgid "<img src=\"{{ site.baseurl }}/fig/rmd-14-plot-clean-HARV-1.png\" title=\"plot of chunk plot-clean-HARV\" alt=\"plot of chunk plot-clean-HARV\" width=\"612\" style=\"display: block; margin: auto;\" />"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:581
msgid "Now our outlier data points are removed and the pattern of \"green-up\" and\n"
"\"brown-down\" makes more sense."
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:584
# header
msgid "## Write NDVI data to a .csv File"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:585
msgid "We can write our final NDVI dataframe out to a text format, to quickly share\n"
"with a colleague or to reuse for analysis or visualization purposes. We will\n"
"export in Comma Seperated Value (.csv) file format because it is usable in many\n"
"different tools and across platforms (MAC, PC, etc)."
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:590
msgid "We will use `write.csv()` to write a specified dataframe to a `.csv` file.\n"
"Unless you designate a different directory, the output file will be saved in\n"
"your working directory."
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:594
msgid "Before saving our file, let's view the format to make sure it is what we\n"
"want as an output format."
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:598
# code block
msgid "~~~\n"
"head(avg_NDVI_HARV_clean)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:605
# code block
msgid "~~~\n"
"                    meanNDVI site year julianDay       Date\n"
"X005_HARV_ndvi_crop 0.365150 HARV 2011         5 2011-01-05\n"
"X037_HARV_ndvi_crop 0.242645 HARV 2011        37 2011-02-06\n"
"X085_HARV_ndvi_crop 0.251390 HARV 2011        85 2011-03-26\n"
"X133_HARV_ndvi_crop 0.599300 HARV 2011       133 2011-05-13\n"
"X181_HARV_ndvi_crop 0.878725 HARV 2011       181 2011-06-30\n"
"X197_HARV_ndvi_crop 0.893250 HARV 2011       197 2011-07-16\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:616
msgid "It looks like we have a series of `row.names` that we do not need because we have\n"
"this information stored in individual columns in our data frame. Let's remove\n"
"the row names."
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:621
# code block
msgid "~~~\n"
"row.names(avg_NDVI_HARV_clean) <- NULL\n"
"head(avg_NDVI_HARV_clean)\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:629
# code block
msgid "~~~\n"
"  meanNDVI site year julianDay       Date\n"
"1 0.365150 HARV 2011         5 2011-01-05\n"
"2 0.242645 HARV 2011        37 2011-02-06\n"
"3 0.251390 HARV 2011        85 2011-03-26\n"
"4 0.599300 HARV 2011       133 2011-05-13\n"
"5 0.878725 HARV 2011       181 2011-06-30\n"
"6 0.893250 HARV 2011       197 2011-07-16\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:641
# code block
msgid "~~~\n"
"write.csv(avg_NDVI_HARV_clean, file=\"meanNDVI_HARV_2011.csv\")\n"
"~~~"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:646
# blockquote, which can be cascaded
msgid "> ## Challenge: Write to .csv"
msgstr ""

#: r-raster-vector-geospatial/_episodes/14-extract-ndvi-from-rasters-in-r.md:647
msgid ">\n"
"> 1. Create a NDVI .csv file for the NEON SJER field site that is comparable with\n"
"> the one we just created for the Harvard Forest. Be sure to inspect for\n"
"> questionable values before writing any data to a .csv file.\n"
"> 2. Create a NDVI .csv file that includes data from both field sites.\n"
">\n"
"> > ## Answers\n"
"> >\n"
"> > \n"
"> > ~~~\n"
"> > avg_NDVI_SJER_clean <- subset(avg_NDVI_SJER, meanNDVI > 0.1)\n"
"> > row.names(avg_NDVI_SJER_clean) <- NULL\n"
"> > head(avg_NDVI_SJER_clean)\n"
"> > ~~~\n"
"> > {: .language-r}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> >   meanNDVI site year julianDay       Date\n"
"> > 1 0.529780 SJER 2011        46 2011-02-15\n"
"> > 2 0.554368 SJER 2011        62 2011-03-03\n"
"> > 3 0.601096 SJER 2011        94 2011-04-04\n"
"> > 4 0.555836 SJER 2011       110 2011-04-20\n"
"> > 5 0.538336 SJER 2011       126 2011-05-06\n"
"> > 6 0.400868 SJER 2011       142 2011-05-22\n"
"> > ~~~\n"
"> > {: .output}\n"
"> > \n"
"> > \n"
"> > \n"
"> > ~~~\n"
"> > write.csv(avg_NDVI_SJER_clean, file = \"meanNDVI_SJER_2011.csv\")\n"
"> > ~~~\n"
"> > {: .language-r}"
msgstr ""

#: r-raster-vector-geospatial/_extras/about.md:1
# Front Matter
msgid "---\n"
"title: About\n"
"---"
msgstr ""

#: r-raster-vector-geospatial/_extras/about.md:4
msgid "{% include carpentries.html %}\n"
"{% include links.md %}"
msgstr ""

#: r-raster-vector-geospatial/_extras/discuss.md:1
# Front Matter
msgid "---\n"
"title: Discussion\n"
"---"
msgstr ""

#: r-raster-vector-geospatial/_extras/discuss.md:4
msgid "FIXME"
msgstr ""

#: r-raster-vector-geospatial/_extras/figures.md:1
# Front Matter
msgid "---\n"
"title: Figures\n"
"---"
msgstr ""

#: r-raster-vector-geospatial/_extras/figures.md:4
#: r-raster-vector-geospatial/_extras/guide.md:6
#: r-raster-vector-geospatial/aio.md:5
msgid "{% include base_path.html %}"
msgstr ""

#: r-raster-vector-geospatial/_extras/figures.md:6
# inline html
msgid "<script>\n"
"  window.onload = function() {\n"
"    var lesson_episodes = [\n"
"    {% for episode in site.episodes %}\n"
"    \"{{ episode.url }}\"{% unless forloop.last %},{% endunless %}\n"
"    {% endfor %}\n"
"    ];\n"
"\n"
"    var xmlHttp = [];  /* Required since we are going to query every episode. */\n"
"    for (i=0; i < lesson_episodes.length; i++) {\n"
"\n"
"      xmlHttp[i] = new XMLHttpRequest();\n"
"      xmlHttp[i].episode = lesson_episodes[i];  /* To enable use this later. */\n"
"      xmlHttp[i].onreadystatechange = function() {\n"
"\n"
"        if (this.readyState == 4 && this.status == 200) {\n"
"          var parser = new DOMParser();\n"
"          var htmlDoc = parser.parseFromString(this.responseText,\"text/html\");\n"
"          var htmlDocArticle = htmlDoc.getElementsByTagName(\"article\")[0];\n"
"\n"
"          var article_here = document.getElementById(this.episode);\n"
"          var images = htmlDocArticle.getElementsByTagName(\"img\");\n"
"\n"
"          if (images.length > 0) {\n"
"            var h1text = htmlDocArticle.getElementsByTagName(\"h1\")[0].innerHTML;\n"
"\n"
"            var htitle = document.createElement('h2');\n"
"            htitle.innerHTML = h1text;\n"
"            article_here.appendChild(htitle);\n"
"\n"
"            var image_num = 0;\n"
"            for (let image of images) {\n"
"              image_num++;\n"
"\n"
"              var title = document.createElement('p');\n"
"              title.innerHTML = \"<strong>Figure \" + image_num + \".</strong> \" + image.alt;\n"
"              article_here.appendChild(title);\n"
"\n"
"              article_here.appendChild(image.cloneNode(false));\n"
"\n"
"              if (image_num < images.length) {\n"
"                var hr = document.createElement('hr');\n"
"                article_here.appendChild(hr);\n"
"              }\n"
"            }\n"
"          }\n"
"        }\n"
"      }\n"
"      episode_url = \"{{ relative_root_path }}\" + lesson_episodes[i];\n"
"      xmlHttp[i].open(\"GET\", episode_url);\n"
"      xmlHttp[i].send(null);\n"
"    }\n"
"  }\n"
"</script>"
msgstr ""

#: r-raster-vector-geospatial/_extras/figures.md:60
msgid "{% comment %}\n"
"Create anchor for each one of the episodes.\n"
"{% endcomment %}\n"
"{% for episode in site.episodes %}\n"
"<article id=\"{{ episode.url }}\" class=\"figures\"></article>\n"
"{% endfor %}"
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:1
# Front Matter
msgid "---\n"
"layout: page\n"
"title: \"Instructor Notes\"\n"
"---"
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:8
# header
msgid "## Instructor notes"
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:10
# header
msgid "## Lesson motivation and learning objectives"
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:12
msgid "This lesson is designed to introduce learners to the fundamental principles and skills for working with\n"
"raster and vector geospatial data in R. It begins by introducing the structure of and simple plotting of \n"
"raster data. It then covers re-projection of raster data, performing raster math, and working with multi-band\n"
"raster data. After introducing raster data, the lesson moves into working with vector data. Line, point, and\n"
"polygon shapefiles are included in the data. Learners will plot multiple raster and/or vector layers\n"
"in a single plot, and learn how to customize plot elements such as legends and titles. They will \n"
"also learn how to read data in from a csv formatted file and re-format it to a shapefile. Lastly, learners\n"
"will work with multi-layered raster data set representing time series data and extract summary statistics\n"
"from this data. "
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:22
# header
msgid "## Lesson design"
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:24
# header
msgid "#### Overall comments"
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:26
# unordered list
msgid "* As of initial release of this lesson (August 2018), the timing is set to be the same for each episode. This"
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:27
msgid "is very likely incorrect and will need to be updated as these lessons are taught. If you teach this lesson, \n"
"please put in an issue or PR to suggest an updating timing scheme!!"
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:30
# unordered list
msgid "* The code examples presented in each episode assume that the learners still have all of the data and packages"
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:31
msgid "loaded from all previous episodes in this lesson. If learners close out of their R session during the breaks or\n"
"at the end of the first day, they will need to either save the workspace or reload the data and packages. \n"
"Because of this, it is essential that learners save their code to a script throughout the lesson."
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:35
# header
msgid "#### [Intro to Raster Data in R]({{ relative_root_path }}/{% link _episodes/01-raster-structure.md %})"
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:37
# unordered list
msgid "* Be sure to introduce the datasets that will be used in this lesson. There are many data files. It may"
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:38
msgid "be helpful to draw a diagram on the board showing the types of data that will be plotted and analyzed \n"
"throughout the lesson. \n"
"* If the [Introduction to Geospatial Concepts](https://datacarpentry.org/organization-geospatial/) lesson was\n"
"included in your workshop, learners will have been introduced to the GDAL library. It will be useful to make \n"
"the connection back to that lesson explicitly.\n"
"* If the [Introduction to R for Geospatial Data](https://datacarpentry.org/r-intro-geospatial/) lesson was included\n"
"in your workshop, learners will be familiar with the idea of packages and with most of the functions used\n"
"in this lesson.\n"
"* The Dealing with Missing Data and Bad Data Values in Rasters sections have several plots showing alternative ways of displaying missing\n"
"data. The code for generating these plots is **not** shared with the learners, as it relies on many functions\n"
"they have not yet learned. For these and other plots with hidden demonstration code, show the images in the \n"
"lesson page while discussing those examples. \n"
"* Be sure to draw a distinction between the DTM and the DSM files, as these two datasets will be used\n"
"throughout the lesson."
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:53
# header
msgid "#### [Plot Raster Data in R]({{ relative_root_path }}/{% link _episodes/02-raster-plot.md %})"
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:55
# unordered list
msgid "* `geom_bar()` is a new geom for the learners. They were introduced to `geom_col()` in the [Introduction to R for Geospatial Data](https://datacarpentry.org/r-intro-geospatial/) lesson. "
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:56
# unordered list
msgid "* `dplyr` syntax should be familiar to your learners from the [Introduction to R for Geospatial Data](https://datacarpentry.org/r-intro-geospatial/) lesson. "
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:57
# unordered list
msgid "* This may be the first time learners are exposed to hex colors, so be sure to explain that concept."
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:58
# unordered list
msgid "* Starting in this episode and continuing throughout the lesson, the `ggplot` calls can be very long. Be sure"
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:59
msgid "to explicitly describe each step of the function call and what it is doing for the overall plot. "
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:61
# header
msgid "#### [Reproject Raster Data in R]({{ relative_root_path }}/{% link _episodes/03-raster-reproject-in-r.md %})"
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:63
#: r-raster-vector-geospatial/_extras/guide.md:72
#: r-raster-vector-geospatial/_extras/guide.md:91
#: r-raster-vector-geospatial/_extras/guide.md:95
#: r-raster-vector-geospatial/_extras/guide.md:106
# unordered list
msgid "* No notes yet. Please add your tips and comments!"
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:65
# header
msgid "#### [Raster Calculations in R]({{ relative_root_path }}/{% link _episodes/04-raster-calculations-in-r.md %})"
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:67
# unordered list
msgid "* The `overlay()` function syntax is fairly complex compared to other function calls the learners have seen. "
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:68
msgid "Be sure to explain it in detail."
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:70
# header
msgid "#### [Work With Multi-Band Rasters in R]({{ relative_root_path }}/{% link _episodes/05-raster-multi-band-in-r.md %})"
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:74
# header
msgid "#### [Open and Plot Shapefiles in R]({{ relative_root_path }}/{% link _episodes/06-vector-open-shapefile-in-r.md %})"
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:76
# unordered list
msgid "* Learners may have heard of the `sp` package. If it comes up, explain that `sf` is a"
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:77
msgid "more modern update of `sp`. \n"
"* There is a known bug in the `geom_sf()` function that leads to an intermittent error on some platforms. \n"
"If you see the following error message, try to re-run your plotting command and it should work. \n"
"The `ggplot` development team is working on fixing this bug."
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:82
# header
msgid "## Error message"
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:83
# blockquote, which can be cascaded
msgid "> ~~~"
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:84
# blockquote, which can be cascaded
msgid "> Error in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y,  : "
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:85
msgid "  polygon edge not found\n"
"> ~~~"
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:87
# SC/DC Template label
msgid "> {: .error}"
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:89
# header
msgid "#### [Explore and Plot by Shapefile Attributes]({{ relative_root_path }}/07-vector-shapefile-attributes-in-r/)"
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:93
# header
msgid "#### [Plot Multiple Shapefiles in R]({{ relative_root_path }}/08-vector-plot-shapefiles-custom-legend/)"
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:97
# header
msgid "#### [Handling Spatial Projection & CRS in R]({{ relative_root_path }}/09-vector-when-data-dont-line-up-crs/)"
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:99
# unordered list
msgid "* Note that, although `ggplot` automatically reprojects vector data when plotting multiple shapefiles with"
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:100
msgid "different projections together, it is still important to be aware of the CRSs of your data and to keep track\n"
"of how they are being transformed. "
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:104
# header
msgid "#### [Convert from .csv to a Shapefile in R]({{ relative_root_path }}/10-vector-csv-to-shapefile-in-r/)"
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:108
# header
msgid "#### [Manipulate Raster Data in R]({{ relative_root_path }}/11-vector-raster-integration/)"
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:110
# unordered list
msgid "* Learners have not yet been exposed to the `melt()` function in this workshop. They will need to have "
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:111
msgid "the syntax explained. \n"
"* This is the first instance of a faceted plot in this workshop. "
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:114
# header
msgid "#### [Raster Time Series Data in R]({{ relative_root_path }}/12-time-series-raster/)"
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:116
#: r-raster-vector-geospatial/_extras/guide.md:129
# unordered list
msgid "* No notes yet. Please add your tips and comments! "
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:118
# header
msgid "#### [Create Publication-quality Graphics]({{ relative_root_path }}/13-plot-time-series-rasters-in-r/)"
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:120
# unordered list
msgid "* Be sure to show learners the before and after plots to motivate the complexity of the "
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:121
msgid "`ggplot` calls that will be used in this episode. "
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:123
# header
msgid "#### [Derive Values from Raster Time Series]({{ relative_root_path }}/14-extract-ndvi-from-rasters-in-r/)"
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:125
# unordered list
msgid "* This is the first time in the workshop that learners will have worked with date data."
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:127
# header
msgid "#### Concluding remarks"
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:131
# header
msgid "## Technical tips and tricks"
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:133
# unordered list
msgid "* Leave about 30 minutes at the start of each workshop and another 15 mins"
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:134
msgid "at the start of each session for technical difficulties like WiFi and\n"
"installing things (even if you asked students to install in advance, longer if\n"
"not)."
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:138
# unordered list
msgid "* Don't worry about being correct or knowing the material back-to-front. Use"
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:139
msgid "mistakes as teaching moments: the most vital skill you can impart is how to\n"
"debug and recover from unexpected errors."
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:142
# header
msgid "## Common problems"
msgstr ""

#: r-raster-vector-geospatial/_extras/guide.md:144
msgid "TBA - Instructors please add situations you encounter here."
msgstr ""

#: r-raster-vector-geospatial/about.md:1
# Front Matter
msgid "---\n"
"layout: page\n"
"description: \"A site devoted to open science and open data.\"\n"
"Tags: []\n"
"permalink: about/\n"
"image:\n"
"  feature: NEONCarpentryHeader_2.png\n"
"  credit: National Ecological Observatory Network (NEON)\n"
"  creditlink: http://www.neoninc.org\n"
"---"
msgstr ""

#: r-raster-vector-geospatial/about.md:13
msgid "##About the NEON / Data Carpentry Hackathon "
msgstr ""

#: r-raster-vector-geospatial/about.md:15
msgid "The National Ecological Observatory Network (NEON) is hosting a 3-day lesson-building hackathon to develop a suite of NEON/ Data Carpentry data tutorials and corresponding assessment instruments. The tutorials and assessment instruments will be used to teach fundamental big data skills needed to work efficiently with large spatio-temporal data using open tools, such as R, Python and postgres SQL."
msgstr ""

#: r-raster-vector-geospatial/about.md:17
msgid "<a href=\"http://www.neoninc.org/updates-events/events/hackathon-spatio-temporal-data-lesson-building\" target=\"_blank\">Learn more about the Hackathon on the NEON website.</a>"
msgstr ""

#: r-raster-vector-geospatial/aio.md:1
# Front Matter
msgid "---\n"
"layout: page\n"
"permalink: /aio/\n"
"---"
msgstr ""

#: r-raster-vector-geospatial/aio.md:7
# inline html
msgid "<script>\n"
"  window.onload = function() {\n"
"    var lesson_episodes = [\n"
"    {% for episode in site.episodes %}\n"
"    \"{{ episode.url}}\"{% unless forloop.last %},{% endunless %}\n"
"    {% endfor %}\n"
"    ];\n"
"    var xmlHttp = [];  /* Required since we are going to query every episode. */\n"
"    for (i=0; i < lesson_episodes.length; i++) {\n"
"      xmlHttp[i] = new XMLHttpRequest();\n"
"      xmlHttp[i].episode = lesson_episodes[i];  /* To enable use this later. */\n"
"      xmlHttp[i].onreadystatechange = function() {\n"
"      if (this.readyState == 4 && this.status == 200) {\n"
"        var article_here = document.getElementById(this.episode);\n"
"        var parser = new DOMParser();\n"
"        var htmlDoc = parser.parseFromString(this.responseText,\"text/html\");\n"
"        var htmlDocArticle = htmlDoc.getElementsByTagName(\"article\")[0];\n"
"        article_here.innerHTML = htmlDocArticle.innerHTML;\n"
"        }\n"
"      }\n"
"      episode_url = \"{{ relative_root_path }}\" + lesson_episodes[i];\n"
"      xmlHttp[i].open(\"GET\", episode_url);\n"
"      xmlHttp[i].send(null);\n"
"    }\n"
"  }\n"
"</script>"
msgstr ""

#: r-raster-vector-geospatial/aio.md:33
msgid "{% comment %}\n"
"Create anchor for each one of the episodes.\n"
"{% endcomment %}\n"
"{% for episode in site.episodes %}\n"
"<article id=\"{{ episode.url }}\"></article>\n"
"{% endfor %}"
msgstr ""

#: r-raster-vector-geospatial/index.md:1
# Front Matter
msgid "---\n"
"layout: lesson\n"
"root: .\n"
"\n"
"maintainers:\n"
"- Leah Wasser\n"
"- Joseph Stachelek\n"
"- Tyson Swetnam\n"
"- Lauren O'Brien\n"
"- Janani Selvaraj\n"
"- Lachlan Deer\n"
"- Chris Prener\n"
"- Juan Fung\n"
"---"
msgstr ""

#: r-raster-vector-geospatial/index.md:16
msgid "**Lesson Authors:** Leah A. Wasser, Megan A. Jones, Zack Brym, Kristina Riemer, Jason Williams, Jeff Hollister,  Mike Smorul, Joseph Stachelek"
msgstr ""

#: r-raster-vector-geospatial/index.md:18
msgid "**Lesson Maintainers:** {{ page.maintainers | join: ', ' }}"
msgstr ""

#: r-raster-vector-geospatial/index.md:20
msgid "The episodes in this lesson cover how to open, work with, and plot\n"
"vector and raster-format spatial data in R. Additional topics include\n"
"working with spatial metadata (extent and coordinate reference systems), \n"
"reprojecting spatial data, and working with raster time series data."
msgstr ""

#: r-raster-vector-geospatial/index.md:25
# blockquote, which can be cascaded
msgid "> ## Prerequisites"
msgstr ""

#: r-raster-vector-geospatial/index.md:26
# blockquote, which can be cascaded
msgid "> Data Carpentry’s teaching is hands-on, so participants are encouraged "
msgstr ""

#: r-raster-vector-geospatial/index.md:27
# blockquote, which can be cascaded
msgid "> to use their own computers to ensure the proper setup of tools for an "
msgstr ""

#: r-raster-vector-geospatial/index.md:28
# blockquote, which can be cascaded
msgid "> efficient workflow. To most effectively use these materials, please "
msgstr ""

#: r-raster-vector-geospatial/index.md:29
# blockquote, which can be cascaded
msgid "> make sure to download the data and install everything before"
msgstr ""

#: r-raster-vector-geospatial/index.md:30
# blockquote, which can be cascaded
msgid "> working through this lesson. "
msgstr ""

#: r-raster-vector-geospatial/index.md:32
# blockquote, which can be cascaded
msgid "> ### R Skill Level"
msgstr ""

#: r-raster-vector-geospatial/index.md:33
# blockquote, which can be cascaded
msgid "> This lesson assumes you have some knowledge of `R`. If you've never "
msgstr ""

#: r-raster-vector-geospatial/index.md:34
# blockquote, which can be cascaded
msgid "> used `R` before, or need a refresher, start with our"
msgstr ""

#: r-raster-vector-geospatial/index.md:35
# blockquote, which can be cascaded
msgid "> [Introduction to R for Geospatial Data](http://www.datacarpentry.org/r-intro-geospatial/)"
msgstr ""

#: r-raster-vector-geospatial/index.md:36
# blockquote, which can be cascaded
msgid "> lesson."
msgstr ""

#: r-raster-vector-geospatial/index.md:37
msgid ">\n"
"> ### Geospatial Skill Level\n"
"> This lesson assumes you have some knowledge of geospatial data types\n"
"> and common file formats. If you have never worked with geospatial\n"
"> data before, or need a refresher, start with our\n"
"> [Introduction to Geospatial Concepts](http://www.datacarpentry.org/organization-geospatial/)\n"
"> lesson.\n"
">\n"
"> ### Install Software and Download Data\n"
"> For installation instructions and to download the data used in this \n"
"> lesson, see the \n"
"> [Geospatial Workshop Overview](http://www.datacarpentry.org/geospatial-workshop/setup.html).\n"
">\n"
"> ### Setup RStudio Project\n"
">\n"
"> Make sure you have set up a RStudio project for this lesson, as\n"
"> described in the \n"
"> <a href=\"{{ site.baseurl }}/setup.html\" target=\"_blank\">setup instructions</a>\n"
"> and that your working directory is correctly set."
msgstr ""

#: r-raster-vector-geospatial/reference.md:1
# Front Matter
msgid "---\n"
"layout: reference\n"
"permalink: /reference/\n"
"---"
msgstr ""

#: r-raster-vector-geospatial/reference.md:6
# header
msgid "## References"
msgstr ""

#: r-raster-vector-geospatial/reference.md:8
# unordered list
msgid "* [CRAN Spatial Task View](https://cran.r-project.org/web/views/Spatial.html)"
msgstr ""

#: r-raster-vector-geospatial/reference.md:10
# unordered list
msgid "* [Geocomputation with R](http://robinlovelace.net/geocompr/)"
msgstr ""

#: r-raster-vector-geospatial/reference.md:12
# unordered list
msgid "* [sf package vignettes](https://r-spatial.github.io/sf/articles/)"
msgstr ""

#: r-raster-vector-geospatial/reference.md:14
# unordered list
msgid "* [Wikipedia shapefile page](https://en.wikipedia.org/wiki/Shapefile)"
msgstr ""

#: r-raster-vector-geospatial/reference.md:16
# unordered list
msgid "* [`R` color palettes documentation](https://stat.ethz.ch/R-manual/R-devel/library/grDevices/html/palettes.html)"
msgstr ""

#: r-raster-vector-geospatial/setup.md:1
# Front Matter
msgid "---\n"
"layout: page\n"
"title: Setup\n"
"---"
msgstr ""

#: r-raster-vector-geospatial/setup.md:6
msgid "This lesson is designed to be taught in conjunction with other lessons\n"
"in the [Data Carpentry Geospatial workshop](http://www.datacarpentry.org/geospatial-workshop/).\n"
"For information about required software, and to access the datasets used\n"
"in this lesson, see the \n"
"[setup instructions](https://datacarpentry.org/geospatial-workshop/setup.html)\n"
"on the workshop homepage."
msgstr ""

